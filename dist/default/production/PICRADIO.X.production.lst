

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Dec 24 03:43:43 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssEEDATA,global,class=EEDATA,space=3,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	intentry,global,class=CODE,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000D                     	;# 
   195  000E                     	;# 
   196  000E                     	;# 
   197  000F                     	;# 
   198  0010                     	;# 
   199  0011                     	;# 
   200  0012                     	;# 
   201  0013                     	;# 
   202  0014                     	;# 
   203  0015                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  001D                     	;# 
   214  001E                     	;# 
   215  001F                     	;# 
   216  0081                     	;# 
   217  0085                     	;# 
   218  0086                     	;# 
   219  0087                     	;# 
   220  0088                     	;# 
   221  0089                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  0091                     	;# 
   226  0092                     	;# 
   227  0093                     	;# 
   228  0094                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  018C                     	;# 
   360  018D                     	;# 
   361                           
   362                           	psect	strings
   363  0800                     __pstrings:	
   364  0800                     stringtab:	
   365  0800                     __stringtab:	
   366  0800                     stringcode:	
   367                           ;	String table - string pointers are 1 byte each
   368                           
   369  0800                     stringdir:	
   370  0800  3008               	movlw	high stringdir
   371  0801  008A               	movwf	10
   372  0802  0804               	movf	4,w
   373  0803  0A84               	incf	4,f
   374  0804  0782               	addwf	2,f
   375  0805                     __stringbase:	
   376  0805  3400               	retlw	0
   377  0806                     __end_of__stringtab:	
   378  0806                     _dpowers:	
   379  0806  3401               	retlw	1
   380  0807  3400               	retlw	0
   381  0808  340A               	retlw	10
   382  0809  3400               	retlw	0
   383  080A  3464               	retlw	100
   384  080B  3400               	retlw	0
   385  080C  34E8               	retlw	232
   386  080D  3403               	retlw	3
   387  080E  3410               	retlw	16
   388  080F  3427               	retlw	39
   389  0810                     __end_of_dpowers:	
   390  001F                     _ADCON0bits	set	31
   391  000B                     _INTCONbits	set	11
   392  000C                     _PIR1bits	set	12
   393  0006                     _PORTB	set	6
   394  0006                     _PORTBbits	set	6
   395  0007                     _PORTCbits	set	7
   396  0008                     _PORTD	set	8
   397  001A                     _RCREG	set	26
   398  0018                     _RCSTA	set	24
   399  0013                     _SSPBUF	set	19
   400  0014                     _SSPCON	set	20
   401  0014                     _SSPCONbits	set	20
   402  0010                     _T1CONbits	set	16
   403  0019                     _TXREG	set	25
   404  0018                     _CARRY	set	24
   405  005F                     _GIE	set	95
   406  0065                     _RCIF	set	101
   407  0064                     _TXIF	set	100
   408  008C                     _PIE1bits	set	140
   409  0099                     _SPBRG	set	153
   410  0093                     _SSPADD	set	147
   411  0091                     _SSPCON2bits	set	145
   412  0094                     _SSPSTAT	set	148
   413  0086                     _TRISBbits	set	134
   414  0087                     _TRISCbits	set	135
   415  0088                     _TRISD	set	136
   416  0098                     _TXSTA	set	152
   417  010D                     _EEADR	set	269
   418  010C                     _EEDATA	set	268
   419  018C                     _EECON1	set	396
   420  018D                     _EECON2	set	397
   421  0C60                     _RD	set	3168
   422  0C61                     _WR	set	3169
   423  0C62                     _WREN	set	3170
   424  0810                     STR_2:	
   425  0810  3425               	retlw	37	;'%'
   426  0811  3464               	retlw	100	;'d'
   427  0812  342E               	retlw	46	;'.'
   428  0813  3425               	retlw	37	;'%'
   429  0814  3464               	retlw	100	;'d'
   430  0815  344D               	retlw	77	;'M'
   431  0816  3468               	retlw	104	;'h'
   432  0817  347A               	retlw	122	;'z'
   433  0818  3420               	retlw	32	;' '
   434  0819  3400               	retlw	0
   435  081A                     STR_1:	
   436  081A  3425               	retlw	37	;'%'
   437  081B  3464               	retlw	100	;'d'
   438  081C  3400               	retlw	0
   439                           
   440                           ; #config settings
   441  0000                     
   442                           	psect	cinit
   443  0015                     start_initialization:	
   444  0015                     __initialization:	
   445                           
   446                           ; Clear objects allocated to COMMON
   447  0015  01F6               	clrf	__pbssCOMMON& (0+127)
   448  0016  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   449  0017  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   450                           
   451                           ; Clear objects allocated to BANK1
   452  0018  1383               	bcf	3,7	;select IRP bank0
   453  0019  30C4               	movlw	low __pbssBANK1
   454  001A  0084               	movwf	4
   455  001B  30E7               	movlw	low (__pbssBANK1+35)
   456  001C  120A  158A  2242  120A  118A  	fcall	clear_ram0
   457                           
   458                           ; Clear objects allocated to BANK3
   459  0021  1783               	bsf	3,7	;select IRP bank2
   460  0022  3090               	movlw	low __pbssBANK3
   461  0023  0084               	movwf	4
   462  0024  30B0               	movlw	low (__pbssBANK3+32)
   463  0025  120A  158A  2242   	fcall	clear_ram0
   464  0028                     end_of_initialization:	
   465                           ;End of C runtime variable initialization code
   466                           
   467  0028                     __end_of__initialization:	
   468  0028  0183               	clrf	3
   469  0029  120A  118A  282C   	ljmp	_main	;jump to C main() function
   470                           
   471                           	psect	bssEEDATA
   472  0000                     __pbssEEDATA:	
   473  0000                     _last_channel:	
   474  0000  0000               	db	0
   475  0001  0000               	db	0
   476                           
   477                           	psect	bssCOMMON
   478  0076                     __pbssCOMMON:	
   479  0076                     _HD44780_DATA:	
   480  0076                     	ds	1
   481  0077                     _light_status:	
   482  0077                     	ds	1
   483  0078                     _tries:	
   484  0078                     	ds	1
   485                           
   486                           	psect	bssBANK1
   487  00C4                     __pbssBANK1:	
   488  00C4                     _rssi:	
   489  00C4                     	ds	2
   490  00C6                     _scale:	
   491  00C6                     	ds	1
   492  00C7                     _si4703_regs:	
   493  00C7                     	ds	32
   494                           
   495                           	psect	bssBANK3
   496  0190                     __pbssBANK3:	
   497  0190                     main@F1383:	
   498  0190                     	ds	16
   499  01A0                     si4703_init@F1437:	
   500  01A0                     	ds	16
   501                           
   502                           	psect	clrtext
   503  0A42                     clear_ram0:	
   504                           ;	Called with FSR containing the base address, and
   505                           ;	W with the last address+1
   506                           
   507  0A42  0064               	clrwdt	;clear the watchdog before getting into this loop
   508  0A43                     clrloop0:	
   509  0A43  0180               	clrf	0	;clear RAM location pointed to by FSR
   510  0A44  0A84               	incf	4,f	;increment pointer
   511  0A45  0604               	xorwf	4,w	;XOR with final address
   512  0A46  1903               	btfsc	3,2	;have we reached the end yet?
   513  0A47  3400               	retlw	0	;all done for this memory range, return
   514  0A48  0604               	xorwf	4,w	;XOR again to restore value
   515  0A49  2A43               	goto	clrloop0	;do the next byte
   516                           
   517                           	psect	cstackBANK1
   518  00A0                     __pcstackBANK1:	
   519  00A0                     ?_main:	
   520  00A0                     main@argc:	
   521                           ; 2 bytes @ 0x0
   522                           
   523                           
   524                           ; 2 bytes @ 0x0
   525  00A0                     	ds	2
   526  00A2                     main@argv:	
   527                           
   528                           ; 2 bytes @ 0x2
   529  00A2                     	ds	2
   530  00A4                     ??_main:	
   531                           
   532                           ; 0 bytes @ 0x4
   533  00A4                     	ds	5
   534  00A9                     main@buff:	
   535                           
   536                           ; 16 bytes @ 0x9
   537  00A9                     	ds	16
   538  00B9                     main@f1:	
   539                           
   540                           ; 3 bytes @ 0x19
   541  00B9                     	ds	3
   542  00BC                     main@channel:	
   543                           
   544                           ; 2 bytes @ 0x1C
   545  00BC                     	ds	2
   546  00BE                     main@frac:	
   547                           
   548                           ; 1 bytes @ 0x1E
   549  00BE                     	ds	1
   550  00BF                     main@chn:	
   551                           
   552                           ; 3 bytes @ 0x1F
   553  00BF                     	ds	3
   554  00C2                     main@btn_pressed:	
   555                           
   556                           ; 1 bytes @ 0x22
   557  00C2                     	ds	1
   558  00C3                     main@whole:	
   559                           
   560                           ; 1 bytes @ 0x23
   561  00C3                     	ds	1
   562                           
   563                           	psect	cstackCOMMON
   564  0070                     __pcstackCOMMON:	
   565  0070                     ?_hd44780_lightoff:	
   566  0070                     ??_hd44780_lightoff:	
   567                           ; 0 bytes @ 0x0
   568                           
   569  0070                     ?_uart_init:	
   570                           ; 0 bytes @ 0x0
   571                           
   572  0070                     ?_si4703_init:	
   573                           ; 0 bytes @ 0x0
   574                           
   575  0070                     ?_hd44780_init:	
   576                           ; 0 bytes @ 0x0
   577                           
   578  0070                     ?_hd44780_lighton:	
   579                           ; 0 bytes @ 0x0
   580                           
   581  0070                     ?_si4703_seek:	
   582                           ; 0 bytes @ 0x0
   583                           
   584  0070                     ?_i2c_enable:	
   585                           ; 0 bytes @ 0x0
   586                           
   587  0070                     ?_si4703_read_regs:	
   588                           ; 0 bytes @ 0x0
   589                           
   590  0070                     ?_si4703_write_regs:	
   591                           ; 0 bytes @ 0x0
   592                           
   593  0070                     ?_si4703_set_volume:	
   594                           ; 0 bytes @ 0x0
   595                           
   596  0070                     ?_init:	
   597                           ; 0 bytes @ 0x0
   598                           
   599  0070                     ?_isr:	
   600                           ; 0 bytes @ 0x0
   601                           
   602  0070                     ??_isr:	
   603                           ; 0 bytes @ 0x0
   604                           
   605  0070                     ?_i2c_init:	
   606                           ; 0 bytes @ 0x0
   607                           
   608  0070                     ?_i2c_start:	
   609                           ; 0 bytes @ 0x0
   610                           
   611  0070                     ?_i2c_stop:	
   612                           ; 0 bytes @ 0x0
   613                           
   614  0070                     ?_i2c_send_data:	
   615                           ; 0 bytes @ 0x0
   616                           
   617  0070                     ?_i2c_send_ack:	
   618                           ; 0 bytes @ 0x0
   619                           
   620  0070                     ?_i2c_send_nack:	
   621                           ; 0 bytes @ 0x0
   622                           
   623  0070                     ?_si4703_setup_2wire:	
   624                           ; 0 bytes @ 0x0
   625                           
   626  0070                     ?_hd44780_puts:	
   627                           ; 0 bytes @ 0x0
   628                           
   629  0070                     ?_i2c_check_overflow:	
   630                           ; 0 bytes @ 0x0
   631                           
   632  0070                     ?_i2c_read_data:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_i2c_read_ack:	
   636                           ; 1 bytes @ 0x0
   637                           
   638                           
   639                           ; 1 bytes @ 0x0
   640  0070                     	ds	5
   641  0075                     ??_uart_init:	
   642  0075                     ??_hd44780_lighton:	
   643                           ; 0 bytes @ 0x5
   644                           
   645  0075                     ??_si4703_getchannel:	
   646                           ; 0 bytes @ 0x5
   647                           
   648  0075                     ??_i2c_check_overflow:	
   649                           ; 0 bytes @ 0x5
   650                           
   651  0075                     ??_i2c_enable:	
   652                           ; 0 bytes @ 0x5
   653                           
   654  0075                     ??_init:	
   655                           ; 0 bytes @ 0x5
   656                           
   657  0075                     ??_i2c_start:	
   658                           ; 0 bytes @ 0x5
   659                           
   660  0075                     ?_i2c_send_controlbyte:	
   661                           ; 0 bytes @ 0x5
   662                           
   663  0075                     ??_i2c_send_data:	
   664                           ; 0 bytes @ 0x5
   665                           
   666  0075                     ??_i2c_read_data:	
   667                           ; 0 bytes @ 0x5
   668                           
   669  0075                     ??_i2c_send_ack:	
   670                           ; 0 bytes @ 0x5
   671                           
   672  0075                     ??_i2c_send_nack:	
   673                           ; 0 bytes @ 0x5
   674                           
   675  0075                     ??_i2c_read_ack:	
   676                           ; 0 bytes @ 0x5
   677                           
   678  0075                     ??_eecpymem:	
   679                           ; 0 bytes @ 0x5
   680                           
   681  0075                     ??_memcpyee:	
   682                           ; 0 bytes @ 0x5
   683                           
   684  0075                     ??___lwdiv:	
   685                           ; 0 bytes @ 0x5
   686                           
   687  0075                     ??___lwtoft:	
   688                           ; 0 bytes @ 0x5
   689                           
   690  0075                     ?_debounce:	
   691                           ; 0 bytes @ 0x5
   692                           
   693  0075                     debounce@pin:	
   694                           ; 1 bytes @ 0x5
   695                           
   696  0075                     i2c_send_controlbyte@rw_bit:	
   697                           ; 1 bytes @ 0x5
   698                           
   699  0075                     ___lbtoft@c:	
   700                           ; 1 bytes @ 0x5
   701                           
   702                           
   703                           ; 1 bytes @ 0x5
   704  0075                     	ds	1
   705  0076                     ??_hd44780_puts_at:	
   706  0076                     ??___ftneg:	
   707                           ; 0 bytes @ 0x6
   708                           
   709                           
   710                           	psect	cstackBANK0
   711  0020                     __pcstackBANK0:	
   712                           ; 0 bytes @ 0x6
   713                           
   714  0020                     ??_debounce:	
   715  0020                     ??_i2c_init:	
   716                           ; 0 bytes @ 0x0
   717                           
   718  0020                     ??_i2c_stop:	
   719                           ; 0 bytes @ 0x0
   720                           
   721  0020                     ??_i2c_send_controlbyte:	
   722                           ; 0 bytes @ 0x0
   723                           
   724  0020                     ??_si4703_setup_2wire:	
   725                           ; 0 bytes @ 0x0
   726                           
   727  0020                     ?_eecpymem:	
   728                           ; 0 bytes @ 0x0
   729                           
   730  0020                     ?_memcpyee:	
   731                           ; 0 bytes @ 0x0
   732                           
   733  0020                     ?_si4703_getchannel:	
   734                           ; 0 bytes @ 0x0
   735                           
   736  0020                     ?___lwdiv:	
   737                           ; 2 bytes @ 0x0
   738                           
   739  0020                     ?___ftpack:	
   740                           ; 2 bytes @ 0x0
   741                           
   742  0020                     i2c_send_data@dta:	
   743                           ; 3 bytes @ 0x0
   744                           
   745  0020                     eecpymem@from:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0020                     memcpyee@from:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0020                     ___lwdiv@divisor:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0020                     ___ftpack@arg:	
   755                           ; 2 bytes @ 0x0
   756                           
   757                           
   758                           ; 3 bytes @ 0x0
   759  0020                     	ds	1
   760  0021                     i2c_send_controlbyte@addr:	
   761  0021                     eecpymem@size:	
   762                           ; 1 bytes @ 0x1
   763                           
   764  0021                     memcpyee@size:	
   765                           ; 1 bytes @ 0x1
   766                           
   767                           
   768                           ; 1 bytes @ 0x1
   769  0021                     	ds	1
   770  0022                     ??_si4703_read_regs:	
   771  0022                     ??_si4703_write_regs:	
   772                           ; 0 bytes @ 0x2
   773                           
   774  0022                     ?_hd44780_write:	
   775                           ; 0 bytes @ 0x2
   776                           
   777  0022                     ?_si4703_getrssi:	
   778                           ; 0 bytes @ 0x2
   779                           
   780  0022                     debounce@port:	
   781                           ; 2 bytes @ 0x2
   782                           
   783  0022                     hd44780_write@rs_flag:	
   784                           ; 1 bytes @ 0x2
   785                           
   786  0022                     eecpymem@cp:	
   787                           ; 1 bytes @ 0x2
   788                           
   789  0022                     memcpyee@ptr:	
   790                           ; 1 bytes @ 0x2
   791                           
   792  0022                     ___lwdiv@dividend:	
   793                           ; 1 bytes @ 0x2
   794                           
   795                           
   796                           ; 2 bytes @ 0x2
   797  0022                     	ds	1
   798  0023                     ??_hd44780_write:	
   799  0023                     debounce@count:	
   800                           ; 0 bytes @ 0x3
   801                           
   802  0023                     eecpymem@to:	
   803                           ; 1 bytes @ 0x3
   804                           
   805  0023                     memcpyee@to:	
   806                           ; 1 bytes @ 0x3
   807                           
   808  0023                     ___ftpack@exp:	
   809                           ; 1 bytes @ 0x3
   810                           
   811                           
   812                           ; 1 bytes @ 0x3
   813  0023                     	ds	1
   814  0024                     ??_si4703_getrssi:	
   815  0024                     ?___eetoi:	
   816                           ; 0 bytes @ 0x4
   817                           
   818  0024                     ?___itoee:	
   819                           ; 2 bytes @ 0x4
   820                           
   821  0024                     ___ftpack@sign:	
   822                           ; 2 bytes @ 0x4
   823                           
   824  0024                     ___lwdiv@counter:	
   825                           ; 1 bytes @ 0x4
   826                           
   827  0024                     ___itoee@data:	
   828                           ; 1 bytes @ 0x4
   829                           
   830                           
   831                           ; 2 bytes @ 0x4
   832  0024                     	ds	1
   833  0025                     ??___ftpack:	
   834  0025                     hd44780_write@ack:	
   835                           ; 0 bytes @ 0x5
   836                           
   837  0025                     si4703_getrssi@buff:	
   838                           ; 1 bytes @ 0x5
   839                           
   840  0025                     ___lwdiv@quotient:	
   841                           ; 2 bytes @ 0x5
   842                           
   843                           
   844                           ; 2 bytes @ 0x5
   845  0025                     	ds	1
   846  0026                     ??___eetoi:	
   847  0026                     ??___itoee:	
   848                           ; 0 bytes @ 0x6
   849                           
   850  0026                     si4703_write_regs@i:	
   851                           ; 0 bytes @ 0x6
   852                           
   853  0026                     hd44780_write@bt:	
   854                           ; 1 bytes @ 0x6
   855                           
   856                           
   857                           ; 1 bytes @ 0x6
   858  0026                     	ds	1
   859  0027                     ?___lwmod:	
   860  0027                     si4703_write_regs@r:	
   861                           ; 2 bytes @ 0x7
   862                           
   863  0027                     hd44780_write@tmp2:	
   864                           ; 1 bytes @ 0x7
   865                           
   866  0027                     ___lwmod@divisor:	
   867                           ; 1 bytes @ 0x7
   868                           
   869  0027                     si4703_read_regs@buff:	
   870                           ; 2 bytes @ 0x7
   871                           
   872                           
   873                           ; 32 bytes @ 0x7
   874  0027                     	ds	1
   875  0028                     ?___lbtoft:	
   876  0028                     ?___lwtoft:	
   877                           ; 3 bytes @ 0x8
   878                           
   879  0028                     hd44780_write@tmp1:	
   880                           ; 3 bytes @ 0x8
   881                           
   882  0028                     ___eetoi@addr:	
   883                           ; 1 bytes @ 0x8
   884                           
   885  0028                     ___itoee@addr:	
   886                           ; 1 bytes @ 0x8
   887                           
   888  0028                     ___lwtoft@c:	
   889                           ; 1 bytes @ 0x8
   890                           
   891                           
   892                           ; 2 bytes @ 0x8
   893  0028                     	ds	1
   894  0029                     ??_hd44780_init:	
   895  0029                     ??_hd44780_puts:	
   896                           ; 0 bytes @ 0x9
   897                           
   898  0029                     ___eetoi@data:	
   899                           ; 0 bytes @ 0x9
   900                           
   901  0029                     ___lwmod@dividend:	
   902                           ; 2 bytes @ 0x9
   903                           
   904                           
   905                           ; 2 bytes @ 0x9
   906  0029                     	ds	1
   907  002A                     hd44780_puts@ch:	
   908                           
   909                           ; 1 bytes @ 0xA
   910  002A                     	ds	1
   911  002B                     ?_hd44780_puts_at:	
   912  002B                     ??___lbtoft:	
   913                           ; 0 bytes @ 0xB
   914                           
   915  002B                     ??___lwmod:	
   916                           ; 0 bytes @ 0xB
   917                           
   918  002B                     ?___ftmul:	
   919                           ; 0 bytes @ 0xB
   920                           
   921  002B                     hd44780_init@ack:	
   922                           ; 3 bytes @ 0xB
   923                           
   924  002B                     hd44780_puts_at@loc:	
   925                           ; 1 bytes @ 0xB
   926                           
   927  002B                     ___ftmul@f1:	
   928                           ; 1 bytes @ 0xB
   929                           
   930                           
   931                           ; 3 bytes @ 0xB
   932  002B                     	ds	1
   933  002C                     hd44780_puts_at@ch:	
   934  002C                     ___lwmod@counter:	
   935                           ; 1 bytes @ 0xC
   936                           
   937                           
   938                           ; 1 bytes @ 0xC
   939  002C                     	ds	1
   940  002D                     ?_sprintf:	
   941  002D                     sprintf@f:	
   942                           ; 2 bytes @ 0xD
   943                           
   944                           
   945                           ; 1 bytes @ 0xD
   946  002D                     	ds	1
   947  002E                     ___ftmul@f2:	
   948                           
   949                           ; 3 bytes @ 0xE
   950  002E                     	ds	1
   951  002F                     ?___ftneg:	
   952  002F                     ___ftneg@f1:	
   953                           ; 3 bytes @ 0xF
   954                           
   955                           
   956                           ; 3 bytes @ 0xF
   957  002F                     	ds	2
   958  0031                     ??___ftmul:	
   959                           
   960                           ; 0 bytes @ 0x11
   961  0031                     	ds	1
   962  0032                     ??_sprintf:	
   963                           
   964                           ; 0 bytes @ 0x12
   965  0032                     	ds	3
   966  0035                     sprintf@ap:	
   967  0035                     ___ftmul@exp:	
   968                           ; 1 bytes @ 0x15
   969                           
   970                           
   971                           ; 1 bytes @ 0x15
   972  0035                     	ds	1
   973  0036                     sprintf@flag:	
   974  0036                     ___ftmul@f3_as_product:	
   975                           ; 1 bytes @ 0x16
   976                           
   977                           
   978                           ; 3 bytes @ 0x16
   979  0036                     	ds	1
   980  0037                     sprintf@prec:	
   981                           
   982                           ; 1 bytes @ 0x17
   983  0037                     	ds	1
   984  0038                     sprintf@val:	
   985                           
   986                           ; 2 bytes @ 0x18
   987  0038                     	ds	1
   988  0039                     ___ftmul@cntr:	
   989                           
   990                           ; 1 bytes @ 0x19
   991  0039                     	ds	1
   992  003A                     sprintf@sp:	
   993  003A                     ___ftmul@sign:	
   994                           ; 1 bytes @ 0x1A
   995                           
   996                           
   997                           ; 1 bytes @ 0x1A
   998  003A                     	ds	1
   999  003B                     ?___ftadd:	
  1000  003B                     ?___fttol:	
  1001                           ; 3 bytes @ 0x1B
  1002                           
  1003  003B                     sprintf@c:	
  1004                           ; 4 bytes @ 0x1B
  1005                           
  1006  003B                     ___ftadd@f1:	
  1007                           ; 1 bytes @ 0x1B
  1008                           
  1009  003B                     ___fttol@f1:	
  1010                           ; 3 bytes @ 0x1B
  1011                           
  1012                           
  1013                           ; 3 bytes @ 0x1B
  1014  003B                     	ds	3
  1015  003E                     ___ftadd@f2:	
  1016                           
  1017                           ; 3 bytes @ 0x1E
  1018  003E                     	ds	1
  1019  003F                     ??___fttol:	
  1020                           
  1021                           ; 0 bytes @ 0x1F
  1022  003F                     	ds	2
  1023  0041                     ??___ftadd:	
  1024                           
  1025                           ; 0 bytes @ 0x21
  1026  0041                     	ds	2
  1027  0043                     ___fttol@sign1:	
  1028                           
  1029                           ; 1 bytes @ 0x23
  1030  0043                     	ds	1
  1031  0044                     ___fttol@lval:	
  1032                           
  1033                           ; 4 bytes @ 0x24
  1034  0044                     	ds	1
  1035  0045                     ___ftadd@sign:	
  1036                           
  1037                           ; 1 bytes @ 0x25
  1038  0045                     	ds	1
  1039  0046                     ___ftadd@exp2:	
  1040                           
  1041                           ; 1 bytes @ 0x26
  1042  0046                     	ds	1
  1043  0047                     si4703_read_regs@tmp:	
  1044  0047                     ___ftadd@exp1:	
  1045                           ; 1 bytes @ 0x27
  1046                           
  1047                           
  1048                           ; 1 bytes @ 0x27
  1049  0047                     	ds	1
  1050  0048                     si4703_read_regs@x:	
  1051  0048                     ___fttol@exp1:	
  1052                           ; 1 bytes @ 0x28
  1053                           
  1054                           
  1055                           ; 1 bytes @ 0x28
  1056  0048                     	ds	1
  1057  0049                     si4703_read_regs@r:	
  1058                           
  1059                           ; 1 bytes @ 0x29
  1060  0049                     	ds	1
  1061  004A                     si4703_read_regs@i:	
  1062                           
  1063                           ; 1 bytes @ 0x2A
  1064  004A                     	ds	1
  1065  004B                     ?_si4703_tune:	
  1066  004B                     ??_si4703_seek:	
  1067                           ; 0 bytes @ 0x2B
  1068                           
  1069  004B                     ??_si4703_set_volume:	
  1070                           ; 0 bytes @ 0x2B
  1071                           
  1072  004B                     si4703_tune@freq:	
  1073                           ; 0 bytes @ 0x2B
  1074                           
  1075                           
  1076                           ; 2 bytes @ 0x2B
  1077  004B                     	ds	2
  1078  004D                     ??_si4703_tune:	
  1079  004D                     si4703_set_volume@val:	
  1080                           ; 0 bytes @ 0x2D
  1081                           
  1082                           
  1083                           ; 1 bytes @ 0x2D
  1084  004D                     	ds	1
  1085  004E                     si4703_seek@seekdown:	
  1086                           
  1087                           ; 1 bytes @ 0x2E
  1088  004E                     	ds	2
  1089  0050                     si4703_tune@chn:	
  1090                           
  1091                           ; 2 bytes @ 0x30
  1092  0050                     	ds	2
  1093  0052                     ??_si4703_init:	
  1094                           
  1095                           ; 0 bytes @ 0x32
  1096  0052                     	ds	4
  1097  0056                     si4703_init@buff:	
  1098                           
  1099                           ; 16 bytes @ 0x36
  1100  0056                     	ds	16
  1101  0066                     si4703_init@ack:	
  1102                           
  1103                           ; 1 bytes @ 0x46
  1104  0066                     	ds	1
  1105  0067                     si4703_init@manu_id:	
  1106                           
  1107                           ; 2 bytes @ 0x47
  1108  0067                     	ds	2
  1109  0069                     si4703_init@firmware_ver:	
  1110                           
  1111                           ; 2 bytes @ 0x49
  1112  0069                     	ds	2
  1113  006B                     si4703_init@device_id:	
  1114                           
  1115                           ; 1 bytes @ 0x4B
  1116  006B                     	ds	1
  1117  006C                     si4703_init@chip_rev:	
  1118                           
  1119                           ; 1 bytes @ 0x4C
  1120  006C                     	ds	1
  1121  006D                     si4703_init@chip_number:	
  1122                           
  1123                           ; 1 bytes @ 0x4D
  1124  006D                     	ds	1
  1125                           
  1126                           	psect	maintext
  1127  002C                     __pmaintext:	
  1128 ;;
  1129 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1130 ;;
  1131 ;; *************** function _main *****************
  1132 ;; Defined at:
  1133 ;;		line 104 in file "main.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;  argc            2    0[BANK1 ] int 
  1136 ;;  argv            2    2[BANK1 ] PTR PTR unsigned char 
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;  chn             3   31[BANK1 ] float 
  1139 ;;  f1              3   25[BANK1 ] float 
  1140 ;;  buff           16    9[BANK1 ] unsigned char [16]
  1141 ;;  channel         2   28[BANK1 ] unsigned int 
  1142 ;;  whole           1   35[BANK1 ] unsigned char 
  1143 ;;  btn_pressed     1   34[BANK1 ] unsigned char 
  1144 ;;  frac            1   30[BANK1 ] unsigned char 
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  2    0[BANK1 ] int 
  1147 ;; Registers used:
  1148 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1149 ;; Tracked objects:
  1150 ;;		On entry : B00/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1154 ;;      Params:         0       0       4       0       0
  1155 ;;      Locals:         0       0      27       0       0
  1156 ;;      Temps:          0       0       5       0       0
  1157 ;;      Totals:         0       0      36       0       0
  1158 ;;Total ram usage:       36 bytes
  1159 ;; Hardware stack levels required when called:    7
  1160 ;; This function calls:
  1161 ;;		___eetoi
  1162 ;;		___ftadd
  1163 ;;		___ftmul
  1164 ;;		___ftneg
  1165 ;;		___fttol
  1166 ;;		___itoee
  1167 ;;		___lbtoft
  1168 ;;		___lwtoft
  1169 ;;		_debounce
  1170 ;;		_hd44780_init
  1171 ;;		_hd44780_lighton
  1172 ;;		_hd44780_puts_at
  1173 ;;		_init
  1174 ;;		_si4703_getchannel
  1175 ;;		_si4703_getrssi
  1176 ;;		_si4703_init
  1177 ;;		_si4703_seek
  1178 ;;		_si4703_tune
  1179 ;;		_sprintf
  1180 ;;		_uart_init
  1181 ;; This function is called by:
  1182 ;;		Startup code after reset
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           
  1187                           ;psect for function _main
  1188  002C                     _main:	
  1189                           
  1190                           ;main.c: 106: uint8_t btn_pressed = 1;
  1191                           
  1192                           ;incstack = 0
  1193                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1194  002C  1683               	bsf	3,5	;RP0=1, select bank1
  1195  002D  1303               	bcf	3,6	;RP1=0, select bank1
  1196  002E  01C2               	clrf	main@btn_pressed^(0+128)
  1197  002F  0AC2               	incf	main@btn_pressed^(0+128),f
  1198                           
  1199                           ;main.c: 107: uint8_t buff[16] = {0};
  1200  0030  30A9               	movlw	main@buff& (0+255)
  1201  0031  0084               	movwf	4
  1202  0032  3090               	movlw	low main@F1383
  1203  0033  00A4               	movwf	??_main^(0+128)
  1204  0034  0804               	movf	4,w
  1205  0035  00A5               	movwf	(??_main^(0+128)+1)
  1206  0036  3010               	movlw	16
  1207  0037  00A6               	movwf	(??_main^(0+128)+2)
  1208  0038                     u4050:	
  1209  0038  0824               	movf	??_main^(0+128),w
  1210  0039  0084               	movwf	4
  1211  003A  1783               	bsf	3,7	;select IRP bank3
  1212  003B  0800               	movf	0,w
  1213  003C  00A7               	movwf	(??_main^(0+128)+3)
  1214  003D  0AA4               	incf	??_main^(0+128),f
  1215  003E  0825               	movf	(??_main^(0+128)+1),w
  1216  003F  0084               	movwf	4
  1217  0040  1383               	bcf	3,7	;select IRP bank1
  1218  0041  0827               	movf	(??_main^(0+128)+3),w
  1219  0042  0080               	movwf	0
  1220  0043  0AA5               	incf	(??_main^(0+128)+1),f
  1221  0044  0BA6               	decfsz	(??_main^(0+128)+2),f
  1222  0045  2838               	goto	u4050
  1223                           
  1224                           ;main.c: 109: uint16_t channel = 0;
  1225  0046  01BC               	clrf	main@channel^(0+128)
  1226  0047  01BD               	clrf	(main@channel+1)^(0+128)
  1227                           
  1228                           ;main.c: 110: uint8_t whole = 0, frac = 0;
  1229  0048  01C3               	clrf	main@whole^(0+128)
  1230  0049  01BE               	clrf	main@frac^(0+128)
  1231                           
  1232                           ;main.c: 112: init();
  1233  004A  120A  158A  2341  120A  118A  	fcall	_init
  1234                           
  1235                           ;main.c: 113: uart_init();
  1236  004F  120A  158A  2285  120A  118A  	fcall	_uart_init
  1237                           
  1238                           ;main.c: 115: si4703_init();
  1239  0054  120A  118A  2483  120A  118A  	fcall	_si4703_init
  1240                           
  1241                           ;main.c: 117: hd44780_init();
  1242  0059  120A  118A  2236  120A  118A  	fcall	_hd44780_init
  1243                           
  1244                           ;main.c: 125: hd44780_lighton();
  1245  005E  120A  158A  222D  120A  118A  	fcall	_hd44780_lighton
  1246                           
  1247                           ;main.c: 127: si4703_tune( last_channel + 875 );
  1248  0063  3000               	movlw	(low _last_channel)& (0+255)
  1249  0064  120A  158A  2298  120A  118A  	fcall	___eetoi
  1250  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1251  006A  1303               	bcf	3,6	;RP1=0, select bank0
  1252  006B  0824               	movf	?___eetoi,w
  1253  006C  3E6B               	addlw	107
  1254  006D  00CB               	movwf	si4703_tune@freq
  1255  006E  0825               	movf	?___eetoi+1,w
  1256  006F  1803               	skipnc
  1257  0070  3E01               	addlw	1
  1258  0071  3E03               	addlw	3
  1259  0072  00CC               	movwf	si4703_tune@freq+1
  1260  0073  120A  158A  2545  120A  118A  	fcall	_si4703_tune
  1261  0078                     l3655:	
  1262                           ;main.c: 129: while(1){
  1263                           
  1264                           
  1265                           ;main.c: 131: rssi = si4703_getrssi();
  1266  0078  120A  158A  2507  120A  118A  	fcall	_si4703_getrssi
  1267  007D  1283               	bcf	3,5	;RP0=0, select bank0
  1268  007E  1303               	bcf	3,6	;RP1=0, select bank0
  1269  007F  0823               	movf	?_si4703_getrssi+1,w
  1270  0080  1683               	bsf	3,5	;RP0=1, select bank1
  1271  0081  1303               	bcf	3,6	;RP1=0, select bank1
  1272  0082  00C5               	movwf	(_rssi+1)^(0+128)
  1273  0083  1283               	bcf	3,5	;RP0=0, select bank0
  1274  0084  1303               	bcf	3,6	;RP1=0, select bank0
  1275  0085  0822               	movf	?_si4703_getrssi,w
  1276  0086  1683               	bsf	3,5	;RP0=1, select bank1
  1277  0087  1303               	bcf	3,6	;RP1=0, select bank1
  1278  0088  00C4               	movwf	_rssi^(0+128)
  1279                           
  1280                           ;main.c: 134: sprintf(buff, "%d", rssi & 0x00FF);
  1281  0089  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1282  008A  00A4               	movwf	??_main^(0+128)
  1283  008B  0824               	movf	??_main^(0+128),w
  1284  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1285  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1286  008E  00AD               	movwf	sprintf@f
  1287  008F  30FF               	movlw	255
  1288  0090  1683               	bsf	3,5	;RP0=1, select bank1
  1289  0091  1303               	bcf	3,6	;RP1=0, select bank1
  1290  0092  0544               	andwf	_rssi^(0+128),w
  1291  0093  1283               	bcf	3,5	;RP0=0, select bank0
  1292  0094  1303               	bcf	3,6	;RP1=0, select bank0
  1293  0095  00AE               	movwf	?_sprintf+1
  1294  0096  3000               	movlw	0
  1295  0097  1683               	bsf	3,5	;RP0=1, select bank1
  1296  0098  1303               	bcf	3,6	;RP1=0, select bank1
  1297  0099  0545               	andwf	(_rssi+1)^(0+128),w
  1298  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1299  009B  1303               	bcf	3,6	;RP1=0, select bank0
  1300  009C  00AF               	movwf	?_sprintf+2
  1301  009D  30A9               	movlw	(low (main@buff| 0))& (0+255)
  1302  009E  120A  118A  2584  120A  118A  	fcall	_sprintf
  1303                           
  1304                           ;main.c: 135: hd44780_puts_at(buff, 14);
  1305  00A3  300E               	movlw	14
  1306  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  1307  00A5  1303               	bcf	3,6	;RP1=0, select bank1
  1308  00A6  00A4               	movwf	??_main^(0+128)
  1309  00A7  0824               	movf	??_main^(0+128),w
  1310  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1311  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1312  00AA  00AB               	movwf	hd44780_puts_at@loc
  1313  00AB  30A9               	movlw	(low (main@buff| 0))& (0+255)
  1314  00AC  120A  158A  2273  120A  118A  	fcall	_hd44780_puts_at
  1315                           
  1316                           ;main.c: 146: if(rssi & 0x0100){
  1317  00B1  1683               	bsf	3,5	;RP0=1, select bank1
  1318  00B2  1303               	bcf	3,6	;RP1=0, select bank1
  1319  00B3  1C45               	btfss	(_rssi+1)^(0+128),0
  1320  00B4  28B9               	goto	l76
  1321                           
  1322                           ;main.c: 148: PORTBbits.RB2 = 1;
  1323  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1324  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1325  00B7  1506               	bsf	6,2	;volatile
  1326                           
  1327                           ;main.c: 149: }else{
  1328  00B8  28BC               	goto	l3665
  1329  00B9                     l76:	
  1330                           
  1331                           ;main.c: 151: PORTBbits.RB2 = 0;
  1332  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1333  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1334  00BB  1106               	bcf	6,2	;volatile
  1335  00BC                     l3665:	
  1336                           
  1337                           ;main.c: 152: }
  1338                           ;main.c: 163: if(debounce(PORTB, 1)){
  1339  00BC  01F5               	clrf	debounce@pin
  1340  00BD  0AF5               	incf	debounce@pin,f
  1341  00BE  0806               	movf	6,w	;volatile
  1342  00BF  120A  158A  243C  120A  118A  	fcall	_debounce
  1343  00C4  3A00               	xorlw	0
  1344  00C5  1903               	skipnz
  1345  00C6  28D9               	goto	l3675
  1346                           
  1347                           ;main.c: 164: btn_pressed = 1;
  1348  00C7  1683               	bsf	3,5	;RP0=1, select bank1
  1349  00C8  1303               	bcf	3,6	;RP1=0, select bank1
  1350  00C9  01C2               	clrf	main@btn_pressed^(0+128)
  1351  00CA  0AC2               	incf	main@btn_pressed^(0+128),f
  1352                           
  1353                           ;main.c: 167: hd44780_lighton();
  1354  00CB  120A  158A  222D  120A  118A  	fcall	_hd44780_lighton
  1355                           
  1356                           ;main.c: 169: scale = 0;
  1357  00D0  1683               	bsf	3,5	;RP0=1, select bank1
  1358  00D1  1303               	bcf	3,6	;RP1=0, select bank1
  1359  00D2  01C6               	clrf	_scale^(0+128)
  1360                           
  1361                           ;main.c: 170: si4703_seek(0);
  1362  00D3  3000               	movlw	0
  1363  00D4  120A  158A  25D6  120A  118A  	fcall	_si4703_seek
  1364  00D9                     l3675:	
  1365                           
  1366                           ;main.c: 175: }
  1367                           ;main.c: 176: if(debounce(PORTB, 0)){
  1368  00D9  01F5               	clrf	debounce@pin
  1369  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1370  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  1371  00DC  0806               	movf	6,w	;volatile
  1372  00DD  120A  158A  243C  120A  118A  	fcall	_debounce
  1373  00E2  3A00               	xorlw	0
  1374  00E3  1903               	skipnz
  1375  00E4  28F7               	goto	l3685
  1376                           
  1377                           ;main.c: 178: btn_pressed = 1;
  1378  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  1379  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  1380  00E7  01C2               	clrf	main@btn_pressed^(0+128)
  1381  00E8  0AC2               	incf	main@btn_pressed^(0+128),f
  1382                           
  1383                           ;main.c: 179: hd44780_lighton();
  1384  00E9  120A  158A  222D  120A  118A  	fcall	_hd44780_lighton
  1385                           
  1386                           ;main.c: 181: scale = 0;
  1387  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  1388  00EF  1303               	bcf	3,6	;RP1=0, select bank1
  1389  00F0  01C6               	clrf	_scale^(0+128)
  1390                           
  1391                           ;main.c: 182: si4703_seek(1);
  1392  00F1  3001               	movlw	1
  1393  00F2  120A  158A  25D6  120A  118A  	fcall	_si4703_seek
  1394  00F7                     l3685:	
  1395                           
  1396                           ;main.c: 184: }
  1397                           ;main.c: 187: if(!btn_pressed)
  1398  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  1399  00F8  1303               	bcf	3,6	;RP1=0, select bank1
  1400  00F9  0842               	movf	main@btn_pressed^(0+128),w
  1401  00FA  1903               	btfsc	3,2
  1402  00FB  2878               	goto	l3655
  1403                           
  1404                           ;main.c: 191: channel = si4703_getchannel();
  1405                           
  1406                           ;main.c: 188: continue;
  1407  00FC  120A  158A  2254  120A  118A  	fcall	_si4703_getchannel
  1408  0101  1283               	bcf	3,5	;RP0=0, select bank0
  1409  0102  1303               	bcf	3,6	;RP1=0, select bank0
  1410  0103  0821               	movf	?_si4703_getchannel+1,w
  1411  0104  1683               	bsf	3,5	;RP0=1, select bank1
  1412  0105  1303               	bcf	3,6	;RP1=0, select bank1
  1413  0106  00BD               	movwf	(main@channel+1)^(0+128)
  1414  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1415  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1416  0109  0820               	movf	?_si4703_getchannel,w
  1417  010A  1683               	bsf	3,5	;RP0=1, select bank1
  1418  010B  1303               	bcf	3,6	;RP1=0, select bank1
  1419  010C  00BC               	movwf	main@channel^(0+128)
  1420                           
  1421                           ;main.c: 192: float chn = ((channel * 0.1) + 87.5);
  1422  010D  3000               	movlw	0
  1423  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1424  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1425  0110  00BB               	movwf	___ftadd@f1
  1426  0111  30AF               	movlw	175
  1427  0112  00BC               	movwf	___ftadd@f1+1
  1428  0113  3042               	movlw	66
  1429  0114  00BD               	movwf	___ftadd@f1+2
  1430  0115  30CD               	movlw	205
  1431  0116  00AB               	movwf	___ftmul@f1
  1432  0117  30CC               	movlw	204
  1433  0118  00AC               	movwf	___ftmul@f1+1
  1434  0119  303D               	movlw	61
  1435  011A  00AD               	movwf	___ftmul@f1+2
  1436  011B  1683               	bsf	3,5	;RP0=1, select bank1
  1437  011C  1303               	bcf	3,6	;RP1=0, select bank1
  1438  011D  083D               	movf	(main@channel+1)^(0+128),w
  1439  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1440  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1441  0120  00A9               	movwf	___lwtoft@c+1
  1442  0121  1683               	bsf	3,5	;RP0=1, select bank1
  1443  0122  1303               	bcf	3,6	;RP1=0, select bank1
  1444  0123  083C               	movf	main@channel^(0+128),w
  1445  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1446  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1447  0126  00A8               	movwf	___lwtoft@c
  1448  0127  120A  158A  22AE  120A  118A  	fcall	___lwtoft
  1449  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1450  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1451  012E  0828               	movf	?___lwtoft,w
  1452  012F  00AE               	movwf	___ftmul@f2
  1453  0130  0829               	movf	?___lwtoft+1,w
  1454  0131  00AF               	movwf	___ftmul@f2+1
  1455  0132  082A               	movf	?___lwtoft+2,w
  1456  0133  00B0               	movwf	___ftmul@f2+2
  1457  0134  120A  118A  265A  120A  118A  	fcall	___ftmul
  1458  0139  1283               	bcf	3,5	;RP0=0, select bank0
  1459  013A  1303               	bcf	3,6	;RP1=0, select bank0
  1460  013B  082B               	movf	?___ftmul,w
  1461  013C  00BE               	movwf	___ftadd@f2
  1462  013D  082C               	movf	?___ftmul+1,w
  1463  013E  00BF               	movwf	___ftadd@f2+1
  1464  013F  082D               	movf	?___ftmul+2,w
  1465  0140  00C0               	movwf	___ftadd@f2+2
  1466  0141  120A  118A  237A  120A  118A  	fcall	___ftadd
  1467  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1468  0147  1303               	bcf	3,6	;RP1=0, select bank0
  1469  0148  083B               	movf	?___ftadd,w
  1470  0149  1683               	bsf	3,5	;RP0=1, select bank1
  1471  014A  1303               	bcf	3,6	;RP1=0, select bank1
  1472  014B  00BF               	movwf	main@chn^(0+128)
  1473  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1474  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1475  014E  083C               	movf	?___ftadd+1,w
  1476  014F  1683               	bsf	3,5	;RP0=1, select bank1
  1477  0150  1303               	bcf	3,6	;RP1=0, select bank1
  1478  0151  00C0               	movwf	(main@chn+1)^(0+128)
  1479  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1480  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1481  0154  083D               	movf	?___ftadd+2,w
  1482  0155  1683               	bsf	3,5	;RP0=1, select bank1
  1483  0156  1303               	bcf	3,6	;RP1=0, select bank1
  1484  0157  00C1               	movwf	(main@chn+2)^(0+128)
  1485                           
  1486                           ;main.c: 193: whole = chn;
  1487  0158  083F               	movf	main@chn^(0+128),w
  1488  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1489  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1490  015B  00BB               	movwf	___fttol@f1
  1491  015C  1683               	bsf	3,5	;RP0=1, select bank1
  1492  015D  1303               	bcf	3,6	;RP1=0, select bank1
  1493  015E  0840               	movf	(main@chn+1)^(0+128),w
  1494  015F  1283               	bcf	3,5	;RP0=0, select bank0
  1495  0160  1303               	bcf	3,6	;RP1=0, select bank0
  1496  0161  00BC               	movwf	___fttol@f1+1
  1497  0162  1683               	bsf	3,5	;RP0=1, select bank1
  1498  0163  1303               	bcf	3,6	;RP1=0, select bank1
  1499  0164  0841               	movf	(main@chn+2)^(0+128),w
  1500  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1501  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1502  0167  00BD               	movwf	___fttol@f1+2
  1503  0168  120A  158A  2772  120A  118A  	fcall	___fttol
  1504  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1505  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1506  016F  083B               	movf	?___fttol,w
  1507  0170  1683               	bsf	3,5	;RP0=1, select bank1
  1508  0171  1303               	bcf	3,6	;RP1=0, select bank1
  1509  0172  00A4               	movwf	??_main^(0+128)
  1510  0173  0824               	movf	??_main^(0+128),w
  1511  0174  00C3               	movwf	main@whole^(0+128)
  1512                           
  1513                           ;main.c: 194: float f1 = chn - whole;
  1514  0175  083F               	movf	main@chn^(0+128),w
  1515  0176  1283               	bcf	3,5	;RP0=0, select bank0
  1516  0177  1303               	bcf	3,6	;RP1=0, select bank0
  1517  0178  00BB               	movwf	___ftadd@f1
  1518  0179  1683               	bsf	3,5	;RP0=1, select bank1
  1519  017A  1303               	bcf	3,6	;RP1=0, select bank1
  1520  017B  0840               	movf	(main@chn+1)^(0+128),w
  1521  017C  1283               	bcf	3,5	;RP0=0, select bank0
  1522  017D  1303               	bcf	3,6	;RP1=0, select bank0
  1523  017E  00BC               	movwf	___ftadd@f1+1
  1524  017F  1683               	bsf	3,5	;RP0=1, select bank1
  1525  0180  1303               	bcf	3,6	;RP1=0, select bank1
  1526  0181  0841               	movf	(main@chn+2)^(0+128),w
  1527  0182  1283               	bcf	3,5	;RP0=0, select bank0
  1528  0183  1303               	bcf	3,6	;RP1=0, select bank0
  1529  0184  00BD               	movwf	___ftadd@f1+2
  1530  0185  1683               	bsf	3,5	;RP0=1, select bank1
  1531  0186  1303               	bcf	3,6	;RP1=0, select bank1
  1532  0187  0843               	movf	main@whole^(0+128),w
  1533  0188  120A  158A  2391  120A  118A  	fcall	___lbtoft
  1534  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1535  018E  1303               	bcf	3,6	;RP1=0, select bank0
  1536  018F  0828               	movf	?___lbtoft,w
  1537  0190  00AF               	movwf	___ftneg@f1
  1538  0191  0829               	movf	?___lbtoft+1,w
  1539  0192  00B0               	movwf	___ftneg@f1+1
  1540  0193  082A               	movf	?___lbtoft+2,w
  1541  0194  00B1               	movwf	___ftneg@f1+2
  1542  0195  120A  158A  224A  120A  118A  	fcall	___ftneg
  1543  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1544  019B  1303               	bcf	3,6	;RP1=0, select bank0
  1545  019C  082F               	movf	?___ftneg,w
  1546  019D  00BE               	movwf	___ftadd@f2
  1547  019E  0830               	movf	?___ftneg+1,w
  1548  019F  00BF               	movwf	___ftadd@f2+1
  1549  01A0  0831               	movf	?___ftneg+2,w
  1550  01A1  00C0               	movwf	___ftadd@f2+2
  1551  01A2  120A  118A  237A  120A  118A  	fcall	___ftadd
  1552  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1553  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  1554  01A9  083B               	movf	?___ftadd,w
  1555  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  1556  01AB  1303               	bcf	3,6	;RP1=0, select bank1
  1557  01AC  00B9               	movwf	main@f1^(0+128)
  1558  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1559  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1560  01AF  083C               	movf	?___ftadd+1,w
  1561  01B0  1683               	bsf	3,5	;RP0=1, select bank1
  1562  01B1  1303               	bcf	3,6	;RP1=0, select bank1
  1563  01B2  00BA               	movwf	(main@f1+1)^(0+128)
  1564  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1565  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1566  01B5  083D               	movf	?___ftadd+2,w
  1567  01B6  1683               	bsf	3,5	;RP0=1, select bank1
  1568  01B7  1303               	bcf	3,6	;RP1=0, select bank1
  1569  01B8  00BB               	movwf	(main@f1+2)^(0+128)
  1570                           
  1571                           ;main.c: 195: frac = (uint8_t)(f1 * 10);
  1572  01B9  0839               	movf	main@f1^(0+128),w
  1573  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1574  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1575  01BC  00AE               	movwf	___ftmul@f2
  1576  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  1577  01BE  1303               	bcf	3,6	;RP1=0, select bank1
  1578  01BF  083A               	movf	(main@f1+1)^(0+128),w
  1579  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  1580  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  1581  01C2  00AF               	movwf	___ftmul@f2+1
  1582  01C3  1683               	bsf	3,5	;RP0=1, select bank1
  1583  01C4  1303               	bcf	3,6	;RP1=0, select bank1
  1584  01C5  083B               	movf	(main@f1+2)^(0+128),w
  1585  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  1586  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  1587  01C8  00B0               	movwf	___ftmul@f2+2
  1588  01C9  3000               	movlw	0
  1589  01CA  00AB               	movwf	___ftmul@f1
  1590  01CB  3020               	movlw	32
  1591  01CC  00AC               	movwf	___ftmul@f1+1
  1592  01CD  3041               	movlw	65
  1593  01CE  00AD               	movwf	___ftmul@f1+2
  1594  01CF  120A  118A  265A  120A  118A  	fcall	___ftmul
  1595  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  1596  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  1597  01D6  082B               	movf	?___ftmul,w
  1598  01D7  00BB               	movwf	___fttol@f1
  1599  01D8  082C               	movf	?___ftmul+1,w
  1600  01D9  00BC               	movwf	___fttol@f1+1
  1601  01DA  082D               	movf	?___ftmul+2,w
  1602  01DB  00BD               	movwf	___fttol@f1+2
  1603  01DC  120A  158A  2772  120A  118A  	fcall	___fttol
  1604  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  1605  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  1606  01E3  083B               	movf	?___fttol,w
  1607  01E4  1683               	bsf	3,5	;RP0=1, select bank1
  1608  01E5  1303               	bcf	3,6	;RP1=0, select bank1
  1609  01E6  00A4               	movwf	??_main^(0+128)
  1610  01E7  0824               	movf	??_main^(0+128),w
  1611  01E8  00BE               	movwf	main@frac^(0+128)
  1612                           
  1613                           ;main.c: 199: sprintf(buff, "%d.%dMhz ", whole, frac);
  1614  01E9  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1615  01EA  00A4               	movwf	??_main^(0+128)
  1616  01EB  0824               	movf	??_main^(0+128),w
  1617  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  1618  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  1619  01EE  00AD               	movwf	sprintf@f
  1620  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  1621  01F0  1303               	bcf	3,6	;RP1=0, select bank1
  1622  01F1  0843               	movf	main@whole^(0+128),w
  1623  01F2  00A5               	movwf	(??_main+1)^(0+128)
  1624  01F3  01A6               	clrf	((??_main+1)^(0+128)+1)
  1625  01F4  0825               	movf	(??_main+1)^(0+128),w
  1626  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  1627  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  1628  01F7  00AE               	movwf	?_sprintf+1
  1629  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  1630  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  1631  01FA  0826               	movf	(??_main+2)^(0+128),w
  1632  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1633  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1634  01FD  00AF               	movwf	?_sprintf+2
  1635  01FE  1683               	bsf	3,5	;RP0=1, select bank1
  1636  01FF  1303               	bcf	3,6	;RP1=0, select bank1
  1637  0200  083E               	movf	main@frac^(0+128),w
  1638  0201  00A7               	movwf	(??_main+3)^(0+128)
  1639  0202  01A8               	clrf	((??_main+3)^(0+128)+1)
  1640  0203  0827               	movf	(??_main+3)^(0+128),w
  1641  0204  1283               	bcf	3,5	;RP0=0, select bank0
  1642  0205  1303               	bcf	3,6	;RP1=0, select bank0
  1643  0206  00B0               	movwf	?_sprintf+3
  1644  0207  1683               	bsf	3,5	;RP0=1, select bank1
  1645  0208  1303               	bcf	3,6	;RP1=0, select bank1
  1646  0209  0828               	movf	(??_main+4)^(0+128),w
  1647  020A  1283               	bcf	3,5	;RP0=0, select bank0
  1648  020B  1303               	bcf	3,6	;RP1=0, select bank0
  1649  020C  00B1               	movwf	?_sprintf+4
  1650  020D  30A9               	movlw	(low (main@buff| 0))& (0+255)
  1651  020E  120A  118A  2584  120A  118A  	fcall	_sprintf
  1652                           
  1653                           ;main.c: 201: hd44780_puts_at(buff, 4);
  1654  0213  3004               	movlw	4
  1655  0214  1683               	bsf	3,5	;RP0=1, select bank1
  1656  0215  1303               	bcf	3,6	;RP1=0, select bank1
  1657  0216  00A4               	movwf	??_main^(0+128)
  1658  0217  0824               	movf	??_main^(0+128),w
  1659  0218  1283               	bcf	3,5	;RP0=0, select bank0
  1660  0219  1303               	bcf	3,6	;RP1=0, select bank0
  1661  021A  00AB               	movwf	hd44780_puts_at@loc
  1662  021B  30A9               	movlw	(low (main@buff| 0))& (0+255)
  1663  021C  120A  158A  2273  120A  118A  	fcall	_hd44780_puts_at
  1664                           
  1665                           ;main.c: 205: last_channel = si4703_getchannel();
  1666  0221  120A  158A  2254  120A  118A  	fcall	_si4703_getchannel
  1667  0226  1283               	bcf	3,5	;RP0=0, select bank0
  1668  0227  1303               	bcf	3,6	;RP1=0, select bank0
  1669  0228  0821               	movf	?_si4703_getchannel+1,w
  1670  0229  00A5               	movwf	___itoee@data+1
  1671  022A  0820               	movf	?_si4703_getchannel,w
  1672  022B  00A4               	movwf	___itoee@data
  1673  022C  3000               	movlw	(low _last_channel)& (0+255)
  1674  022D  120A  158A  2263  120A  118A  	fcall	___itoee
  1675                           
  1676                           ;main.c: 206: btn_pressed = 0;
  1677  0232  1683               	bsf	3,5	;RP0=1, select bank1
  1678  0233  1303               	bcf	3,6	;RP1=0, select bank1
  1679  0234  01C2               	clrf	main@btn_pressed^(0+128)
  1680  0235  2878               	goto	l3655
  1681  0236                     __end_of_main:	
  1682                           ;main.c: 208: }
  1683                           ;main.c: 210: return (0);
  1684                           ;	Return value of _main is never used
  1685                           
  1686                           
  1687                           	psect	text1
  1688  0A85                     __ptext1:	
  1689 ;; *************** function _uart_init *****************
  1690 ;; Defined at:
  1691 ;;		line 7 in file "uart.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;		None
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;		None
  1696 ;; Return value:  Size  Location     Type
  1697 ;;		None               void
  1698 ;; Registers used:
  1699 ;;		wreg, status,2
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1705 ;;      Params:         0       0       0       0       0
  1706 ;;      Locals:         0       0       0       0       0
  1707 ;;      Temps:          0       0       0       0       0
  1708 ;;      Totals:         0       0       0       0       0
  1709 ;;Total ram usage:        0 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; Hardware stack levels required when called:    2
  1712 ;; This function calls:
  1713 ;;		Nothing
  1714 ;; This function is called by:
  1715 ;;		_main
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           
  1720                           ;psect for function _uart_init
  1721  0A85                     _uart_init:	
  1722                           
  1723                           ;uart.c: 9: TRISCbits.TRISC6 = 0;
  1724                           
  1725                           ;incstack = 0
  1726                           ; Regs used in _uart_init: [wreg+status,2]
  1727  0A85  1683               	bsf	3,5	;RP0=1, select bank1
  1728  0A86  1303               	bcf	3,6	;RP1=0, select bank1
  1729  0A87  1307               	bcf	7,6	;volatile
  1730                           
  1731                           ;uart.c: 10: TRISCbits.TRISC7 = 1;
  1732  0A88  1787               	bsf	7,7	;volatile
  1733                           
  1734                           ;uart.c: 16: TXREG = 0;
  1735  0A89  1283               	bcf	3,5	;RP0=0, select bank0
  1736  0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  1737  0A8B  0199               	clrf	25	;volatile
  1738                           
  1739                           ;uart.c: 17: RCREG = 0;
  1740  0A8C  019A               	clrf	26	;volatile
  1741                           
  1742                           ;uart.c: 18: SPBRG = 0x40;
  1743  0A8D  3040               	movlw	64
  1744  0A8E  1683               	bsf	3,5	;RP0=1, select bank1
  1745  0A8F  1303               	bcf	3,6	;RP1=0, select bank1
  1746  0A90  0099               	movwf	25	;volatile
  1747                           
  1748                           ;uart.c: 19: TXSTA = 0x24;
  1749  0A91  3024               	movlw	36
  1750  0A92  0098               	movwf	24	;volatile
  1751                           
  1752                           ;uart.c: 20: RCSTA = 0x90;
  1753  0A93  3090               	movlw	144
  1754  0A94  1283               	bcf	3,5	;RP0=0, select bank0
  1755  0A95  1303               	bcf	3,6	;RP1=0, select bank0
  1756  0A96  0098               	movwf	24	;volatile
  1757  0A97  0008               	return
  1758  0A98                     __end_of_uart_init:	
  1759                           
  1760                           	psect	text2
  1761  0584                     __ptext2:	
  1762 ;; *************** function _sprintf *****************
  1763 ;; Defined at:
  1764 ;;		line 492 in file "/opt/microchip/xc8/v1.35/sources/common/doprnt.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;  sp              1    wreg     PTR unsigned char 
  1767 ;;		 -> main@buff(16), 
  1768 ;;  f               1   13[BANK0 ] PTR const unsigned char 
  1769 ;;		 -> STR_2(10), STR_1(3), 
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;  sp              1   26[BANK0 ] PTR unsigned char 
  1772 ;;		 -> main@buff(16), 
  1773 ;;  tmpval          4    0        struct .
  1774 ;;  val             2   24[BANK0 ] unsigned int 
  1775 ;;  cp              2    0        PTR const unsigned char 
  1776 ;;  len             2    0        unsigned int 
  1777 ;;  c               1   27[BANK0 ] char 
  1778 ;;  prec            1   23[BANK0 ] char 
  1779 ;;  flag            1   22[BANK0 ] unsigned char 
  1780 ;;  ap              1   21[BANK0 ] PTR void [1]
  1781 ;;		 -> ?_sprintf(2), 
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  2   13[BANK0 ] int 
  1784 ;; Registers used:
  1785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1791 ;;      Params:         0       5       0       0       0
  1792 ;;      Locals:         0       7       0       0       0
  1793 ;;      Temps:          0       3       0       0       0
  1794 ;;      Totals:         0      15       0       0       0
  1795 ;;Total ram usage:       15 bytes
  1796 ;; Hardware stack levels used:    1
  1797 ;; Hardware stack levels required when called:    3
  1798 ;; This function calls:
  1799 ;;		___lwdiv
  1800 ;;		___lwmod
  1801 ;; This function is called by:
  1802 ;;		_main
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           
  1807                           ;psect for function _sprintf
  1808  0584                     _sprintf:	
  1809                           
  1810                           ;incstack = 0
  1811                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1812                           ;sprintf@sp stored from wreg
  1813  0584  1283               	bcf	3,5	;RP0=0, select bank0
  1814  0585  1303               	bcf	3,6	;RP1=0, select bank0
  1815  0586  00BA               	movwf	sprintf@sp
  1816                           
  1817                           ;doprnt.c: 494: va_list ap;
  1818                           ;doprnt.c: 499: signed char c;
  1819                           ;doprnt.c: 506: signed char prec;
  1820                           ;doprnt.c: 508: unsigned char flag;
  1821                           ;doprnt.c: 523: union {
  1822                           ;doprnt.c: 524: unsigned long vd;
  1823                           ;doprnt.c: 525: double integ;
  1824                           ;doprnt.c: 526: } tmpval;
  1825                           ;doprnt.c: 528: unsigned int val;
  1826                           ;doprnt.c: 529: unsigned len;
  1827                           ;doprnt.c: 530: const char * cp;
  1828                           ;doprnt.c: 533: *ap = __va_start();
  1829  0587  302E               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1830  0588  00B2               	movwf	??_sprintf
  1831  0589  0832               	movf	??_sprintf,w
  1832  058A  00B5               	movwf	sprintf@ap
  1833  058B                     l3455:	
  1834                           ;doprnt.c: 536: while(c = *f++) {
  1835                           
  1836  058B  3001               	movlw	1
  1837  058C  07AD               	addwf	sprintf@f,f
  1838  058D  30FF               	movlw	-1
  1839  058E  072D               	addwf	sprintf@f,w
  1840  058F  0084               	movwf	4
  1841  0590  120A  158A  2000  120A  118A  	fcall	stringdir
  1842  0595  00B2               	movwf	??_sprintf
  1843  0596  0832               	movf	??_sprintf,w
  1844  0597  00BB               	movwf	sprintf@c
  1845  0598  083B               	movf	sprintf@c,w
  1846  0599  1903               	btfsc	3,2
  1847  059A  2E55               	goto	l3457
  1848                           
  1849                           ;doprnt.c: 538: if(c != '%')
  1850  059B  3025               	movlw	37
  1851  059C  063B               	xorwf	sprintf@c,w
  1852  059D  1903               	btfsc	3,2
  1853  059E  2DAB               	goto	l3411
  1854                           
  1855                           ;doprnt.c: 540: {
  1856                           ;doprnt.c: 541: ((*sp++ = (c)));
  1857  059F  083B               	movf	sprintf@c,w
  1858  05A0  00B2               	movwf	??_sprintf
  1859  05A1  083A               	movf	sprintf@sp,w
  1860  05A2  0084               	movwf	4
  1861  05A3  0832               	movf	??_sprintf,w
  1862  05A4  1383               	bcf	3,7	;select IRP bank0
  1863  05A5  0080               	movwf	0
  1864  05A6  3001               	movlw	1
  1865  05A7  00B2               	movwf	??_sprintf
  1866  05A8  0832               	movf	??_sprintf,w
  1867  05A9  07BA               	addwf	sprintf@sp,f
  1868                           
  1869                           ;doprnt.c: 542: continue;
  1870  05AA  2D8B               	goto	l3455
  1871  05AB                     l3411:	
  1872                           
  1873                           ;doprnt.c: 543: }
  1874                           ;doprnt.c: 548: flag = 0;
  1875  05AB  01B6               	clrf	sprintf@flag
  1876                           
  1877                           ;doprnt.c: 822: }
  1878                           
  1879                           ;doprnt.c: 813: continue;
  1880                           
  1881                           ;doprnt.c: 802: default:
  1882                           
  1883                           ;doprnt.c: 698: case 'i':
  1884                           ;doprnt.c: 699: break;
  1885                           
  1886                           ;doprnt.c: 697: case 'd':
  1887                           
  1888                           ;doprnt.c: 638: goto alldone;
  1889                           
  1890                           ;doprnt.c: 637: case 0:
  1891                           
  1892                           ;doprnt.c: 635: switch(c = *f++) {
  1893  05AC  3001               	movlw	1
  1894  05AD  07AD               	addwf	sprintf@f,f
  1895  05AE  30FF               	movlw	-1
  1896  05AF  072D               	addwf	sprintf@f,w
  1897  05B0  0084               	movwf	4
  1898  05B1  120A  158A  2000  120A  118A  	fcall	stringdir
  1899  05B6  00BB               	movwf	sprintf@c
  1900                           
  1901                           ; Switch size 1, requested type "space"
  1902                           ; Number of cases is 3, Range of values is 0 to 105
  1903                           ; switch strategies available:
  1904                           ; Name         Instructions Cycles
  1905                           ; simple_byte           10     6 (average)
  1906                           ; jumptable            260     6 (fixed)
  1907                           ;	Chosen strategy is simple_byte
  1908  05B7  3A00               	xorlw	0	; case 0
  1909  05B8  1903               	skipnz
  1910  05B9  2E55               	goto	l3457
  1911  05BA  3A64               	xorlw	100	; case 100
  1912  05BB  1903               	skipnz
  1913  05BC  2DC1               	goto	l3417
  1914  05BD  3A0D               	xorlw	13	; case 105
  1915  05BE  1903               	skipnz
  1916  05BF  2DC1               	goto	l3417
  1917  05C0  2D8B               	goto	l3455
  1918  05C1                     l3417:	
  1919                           
  1920                           ;doprnt.c: 1253: {
  1921                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1922  05C1  0835               	movf	sprintf@ap,w
  1923  05C2  0084               	movwf	4
  1924  05C3  1383               	bcf	3,7	;select IRP bank0
  1925  05C4  0800               	movf	0,w
  1926  05C5  00B8               	movwf	sprintf@val
  1927  05C6  0A84               	incf	4,f
  1928  05C7  0800               	movf	0,w
  1929  05C8  00B9               	movwf	sprintf@val+1
  1930  05C9  3002               	movlw	2
  1931  05CA  00B2               	movwf	??_sprintf
  1932  05CB  0832               	movf	??_sprintf,w
  1933  05CC  07B5               	addwf	sprintf@ap,f
  1934                           
  1935                           ;doprnt.c: 1261: if((int)val < 0) {
  1936  05CD  1FB9               	btfss	sprintf@val+1,7
  1937  05CE  2DD8               	goto	l3427
  1938                           
  1939                           ;doprnt.c: 1262: flag |= 0x03;
  1940  05CF  3003               	movlw	3
  1941  05D0  00B2               	movwf	??_sprintf
  1942  05D1  0832               	movf	??_sprintf,w
  1943  05D2  04B6               	iorwf	sprintf@flag,f
  1944                           
  1945                           ;doprnt.c: 1263: val = -val;
  1946  05D3  09B8               	comf	sprintf@val,f
  1947  05D4  09B9               	comf	sprintf@val+1,f
  1948  05D5  0AB8               	incf	sprintf@val,f
  1949  05D6  1903               	skipnz
  1950  05D7  0AB9               	incf	sprintf@val+1,f
  1951  05D8                     l3427:	
  1952                           
  1953                           ;doprnt.c: 1264: }
  1954                           ;doprnt.c: 1266: }
  1955                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1956  05D8  01BB               	clrf	sprintf@c
  1957  05D9  0ABB               	incf	sprintf@c,f
  1958  05DA  3005               	movlw	5
  1959  05DB  063B               	xorwf	sprintf@c,w
  1960  05DC  1903               	btfsc	3,2
  1961  05DD  2DFF               	goto	l3439
  1962  05DE                     l3433:	
  1963                           
  1964                           ;doprnt.c: 1306: if(val < dpowers[c])
  1965  05DE  083B               	movf	sprintf@c,w
  1966  05DF  00B2               	movwf	??_sprintf
  1967  05E0  0732               	addwf	??_sprintf,w
  1968  05E1  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1969  05E2  0084               	movwf	4
  1970  05E3  120A  158A  2000  120A  118A  	fcall	stringdir
  1971  05E8  00B3               	movwf	??_sprintf+1
  1972  05E9  120A  158A  2000  120A  118A  	fcall	stringdir
  1973  05EE  00B4               	movwf	??_sprintf+2
  1974  05EF  0834               	movf	??_sprintf+2,w
  1975  05F0  0239               	subwf	sprintf@val+1,w
  1976  05F1  1D03               	skipz
  1977  05F2  2DF5               	goto	u3595
  1978  05F3  0833               	movf	??_sprintf+1,w
  1979  05F4  0238               	subwf	sprintf@val,w
  1980  05F5                     u3595:	
  1981  05F5  1C03               	btfss	3,0
  1982  05F6  2DFF               	goto	l3439
  1983                           
  1984                           ;doprnt.c: 1307: break;
  1985  05F7  3001               	movlw	1
  1986  05F8  00B2               	movwf	??_sprintf
  1987  05F9  0832               	movf	??_sprintf,w
  1988  05FA  07BB               	addwf	sprintf@c,f
  1989  05FB  3005               	movlw	5
  1990  05FC  063B               	xorwf	sprintf@c,w
  1991  05FD  1D03               	btfss	3,2
  1992  05FE  2DDE               	goto	l3433
  1993  05FF                     l3439:	
  1994                           
  1995                           ;doprnt.c: 1422: {
  1996                           ;doprnt.c: 1438: if(flag & 0x03)
  1997  05FF  0836               	movf	sprintf@flag,w
  1998  0600  3903               	andlw	3
  1999  0601  1903               	btfsc	3,2
  2000  0602  2E0E               	goto	l3445
  2001                           
  2002                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  2003  0603  302D               	movlw	45
  2004  0604  00B2               	movwf	??_sprintf
  2005  0605  083A               	movf	sprintf@sp,w
  2006  0606  0084               	movwf	4
  2007  0607  0832               	movf	??_sprintf,w
  2008  0608  1383               	bcf	3,7	;select IRP bank0
  2009  0609  0080               	movwf	0
  2010  060A  3001               	movlw	1
  2011  060B  00B2               	movwf	??_sprintf
  2012  060C  0832               	movf	??_sprintf,w
  2013  060D  07BA               	addwf	sprintf@sp,f
  2014  060E                     l3445:	
  2015                           
  2016                           ;doprnt.c: 1469: }
  2017                           ;doprnt.c: 1472: prec = c;
  2018  060E  083B               	movf	sprintf@c,w
  2019  060F  00B2               	movwf	??_sprintf
  2020  0610  0832               	movf	??_sprintf,w
  2021  0611  00B7               	movwf	sprintf@prec
  2022  0612                     l3453:	
  2023                           ;doprnt.c: 1474: while(prec--) {
  2024                           
  2025  0612  30FF               	movlw	255
  2026  0613  00B2               	movwf	??_sprintf
  2027  0614  0832               	movf	??_sprintf,w
  2028  0615  07B7               	addwf	sprintf@prec,f
  2029  0616  0A37               	incf	sprintf@prec,w
  2030  0617  1903               	btfsc	3,2
  2031  0618  2D8B               	goto	l3455
  2032                           
  2033                           ;doprnt.c: 1478: {
  2034                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2035  0619  300A               	movlw	10
  2036  061A  00A7               	movwf	___lwmod@divisor
  2037  061B  3000               	movlw	0
  2038  061C  00A8               	movwf	___lwmod@divisor+1
  2039  061D  0837               	movf	sprintf@prec,w
  2040  061E  00B2               	movwf	??_sprintf
  2041  061F  0732               	addwf	??_sprintf,w
  2042  0620  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2043  0621  0084               	movwf	4
  2044  0622  120A  158A  2000  120A  118A  	fcall	stringdir
  2045  0627  00A0               	movwf	___lwdiv@divisor
  2046  0628  120A  158A  2000  120A  118A  	fcall	stringdir
  2047  062D  00A1               	movwf	___lwdiv@divisor+1
  2048  062E  0839               	movf	sprintf@val+1,w
  2049  062F  00A3               	movwf	___lwdiv@dividend+1
  2050  0630  0838               	movf	sprintf@val,w
  2051  0631  00A2               	movwf	___lwdiv@dividend
  2052  0632  120A  118A  27C1  120A  118A  	fcall	___lwdiv
  2053  0637  1283               	bcf	3,5	;RP0=0, select bank0
  2054  0638  1303               	bcf	3,6	;RP1=0, select bank0
  2055  0639  0821               	movf	?___lwdiv+1,w
  2056  063A  00AA               	movwf	___lwmod@dividend+1
  2057  063B  0820               	movf	?___lwdiv,w
  2058  063C  00A9               	movwf	___lwmod@dividend
  2059  063D  120A  158A  249C  120A  118A  	fcall	___lwmod
  2060  0642  1283               	bcf	3,5	;RP0=0, select bank0
  2061  0643  1303               	bcf	3,6	;RP1=0, select bank0
  2062  0644  0827               	movf	?___lwmod,w
  2063  0645  3E30               	addlw	48
  2064  0646  00B3               	movwf	??_sprintf+1
  2065  0647  0833               	movf	??_sprintf+1,w
  2066  0648  00BB               	movwf	sprintf@c
  2067                           
  2068                           ;doprnt.c: 1523: }
  2069                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2070  0649  083B               	movf	sprintf@c,w
  2071  064A  00B2               	movwf	??_sprintf
  2072  064B  083A               	movf	sprintf@sp,w
  2073  064C  0084               	movwf	4
  2074  064D  0832               	movf	??_sprintf,w
  2075  064E  1383               	bcf	3,7	;select IRP bank0
  2076  064F  0080               	movwf	0
  2077  0650  3001               	movlw	1
  2078  0651  00B2               	movwf	??_sprintf
  2079  0652  0832               	movf	??_sprintf,w
  2080  0653  07BA               	addwf	sprintf@sp,f
  2081  0654  2E12               	goto	l3453
  2082  0655                     l3457:	
  2083                           ;doprnt.c: 1525: }
  2084                           ;doprnt.c: 1533: }
  2085                           ;doprnt.c: 1535: alldone:
  2086                           
  2087                           
  2088                           ;doprnt.c: 1538: *sp = 0;
  2089  0655  083A               	movf	sprintf@sp,w
  2090  0656  0084               	movwf	4
  2091  0657  1383               	bcf	3,7	;select IRP bank0
  2092  0658  0180               	clrf	0
  2093  0659  0008               	return
  2094  065A                     __end_of_sprintf:	
  2095                           ;doprnt.c: 1540: return 0;
  2096                           ;	Return value of _sprintf is never used
  2097                           
  2098                           
  2099                           	psect	text3
  2100  0C9C                     __ptext3:	
  2101 ;; *************** function ___lwmod *****************
  2102 ;; Defined at:
  2103 ;;		line 6 in file "/opt/microchip/xc8/v1.35/sources/common/lwmod.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  divisor         2    7[BANK0 ] unsigned int 
  2106 ;;  dividend        2    9[BANK0 ] unsigned int 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  counter         1   12[BANK0 ] unsigned char 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  2    7[BANK0 ] unsigned int 
  2111 ;; Registers used:
  2112 ;;		wreg, status,2, status,0
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2118 ;;      Params:         0       4       0       0       0
  2119 ;;      Locals:         0       1       0       0       0
  2120 ;;      Temps:          0       1       0       0       0
  2121 ;;      Totals:         0       6       0       0       0
  2122 ;;Total ram usage:        6 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    2
  2125 ;; This function calls:
  2126 ;;		Nothing
  2127 ;; This function is called by:
  2128 ;;		_sprintf
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           
  2133                           ;psect for function ___lwmod
  2134  0C9C                     ___lwmod:	
  2135                           
  2136                           ;incstack = 0
  2137                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2138  0C9C  1283               	bcf	3,5	;RP0=0, select bank0
  2139  0C9D  1303               	bcf	3,6	;RP1=0, select bank0
  2140  0C9E  0827               	movf	___lwmod@divisor,w
  2141  0C9F  0428               	iorwf	___lwmod@divisor+1,w
  2142  0CA0  1903               	btfsc	3,2
  2143  0CA1  2CCB               	goto	l2251
  2144  0CA2  01AC               	clrf	___lwmod@counter
  2145  0CA3  0AAC               	incf	___lwmod@counter,f
  2146  0CA4                     l2241:	
  2147  0CA4  1BA8               	btfsc	___lwmod@divisor+1,7
  2148  0CA5  2CB2               	goto	l2243
  2149  0CA6  3001               	movlw	1
  2150  0CA7                     u2015:	
  2151  0CA7  1003               	clrc
  2152  0CA8  0DA7               	rlf	___lwmod@divisor,f
  2153  0CA9  0DA8               	rlf	___lwmod@divisor+1,f
  2154  0CAA  3EFF               	addlw	-1
  2155  0CAB  1D03               	skipz
  2156  0CAC  2CA7               	goto	u2015
  2157  0CAD  3001               	movlw	1
  2158  0CAE  00AB               	movwf	??___lwmod
  2159  0CAF  082B               	movf	??___lwmod,w
  2160  0CB0  07AC               	addwf	___lwmod@counter,f
  2161  0CB1  2CA4               	goto	l2241
  2162  0CB2                     l2243:	
  2163  0CB2  0828               	movf	___lwmod@divisor+1,w
  2164  0CB3  022A               	subwf	___lwmod@dividend+1,w
  2165  0CB4  1D03               	skipz
  2166  0CB5  2CB8               	goto	u2035
  2167  0CB6  0827               	movf	___lwmod@divisor,w
  2168  0CB7  0229               	subwf	___lwmod@dividend,w
  2169  0CB8                     u2035:	
  2170  0CB8  1C03               	skipc
  2171  0CB9  2CC0               	goto	l2247
  2172  0CBA  0827               	movf	___lwmod@divisor,w
  2173  0CBB  02A9               	subwf	___lwmod@dividend,f
  2174  0CBC  0828               	movf	___lwmod@divisor+1,w
  2175  0CBD  1C03               	skipc
  2176  0CBE  03AA               	decf	___lwmod@dividend+1,f
  2177  0CBF  02AA               	subwf	___lwmod@dividend+1,f
  2178  0CC0                     l2247:	
  2179  0CC0  3001               	movlw	1
  2180  0CC1                     u2045:	
  2181  0CC1  1003               	clrc
  2182  0CC2  0CA8               	rrf	___lwmod@divisor+1,f
  2183  0CC3  0CA7               	rrf	___lwmod@divisor,f
  2184  0CC4  3EFF               	addlw	-1
  2185  0CC5  1D03               	skipz
  2186  0CC6  2CC1               	goto	u2045
  2187  0CC7  3001               	movlw	1
  2188  0CC8  02AC               	subwf	___lwmod@counter,f
  2189  0CC9  1D03               	btfss	3,2
  2190  0CCA  2CB2               	goto	l2243
  2191  0CCB                     l2251:	
  2192  0CCB  082A               	movf	___lwmod@dividend+1,w
  2193  0CCC  00A8               	movwf	?___lwmod+1
  2194  0CCD  0829               	movf	___lwmod@dividend,w
  2195  0CCE  00A7               	movwf	?___lwmod
  2196  0CCF  0008               	return
  2197  0CD0                     __end_of___lwmod:	
  2198                           
  2199                           	psect	text4
  2200  07C1                     __ptext4:	
  2201 ;; *************** function ___lwdiv *****************
  2202 ;; Defined at:
  2203 ;;		line 6 in file "/opt/microchip/xc8/v1.35/sources/common/lwdiv.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  divisor         2    0[BANK0 ] unsigned int 
  2206 ;;  dividend        2    2[BANK0 ] unsigned int 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;  quotient        2    5[BANK0 ] unsigned int 
  2209 ;;  counter         1    4[BANK0 ] unsigned char 
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  2    0[BANK0 ] unsigned int 
  2212 ;; Registers used:
  2213 ;;		wreg, status,2, status,0
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2219 ;;      Params:         0       4       0       0       0
  2220 ;;      Locals:         0       3       0       0       0
  2221 ;;      Temps:          1       0       0       0       0
  2222 ;;      Totals:         1       7       0       0       0
  2223 ;;Total ram usage:        8 bytes
  2224 ;; Hardware stack levels used:    1
  2225 ;; Hardware stack levels required when called:    2
  2226 ;; This function calls:
  2227 ;;		Nothing
  2228 ;; This function is called by:
  2229 ;;		_sprintf
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           
  2234                           ;psect for function ___lwdiv
  2235  07C1                     ___lwdiv:	
  2236                           
  2237                           ;incstack = 0
  2238                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2239  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  2240  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  2241  07C3  01A5               	clrf	___lwdiv@quotient
  2242  07C4  01A6               	clrf	___lwdiv@quotient+1
  2243  07C5  0820               	movf	___lwdiv@divisor,w
  2244  07C6  0421               	iorwf	___lwdiv@divisor+1,w
  2245  07C7  1903               	btfsc	3,2
  2246  07C8  2FFA               	goto	l3251
  2247  07C9  01A4               	clrf	___lwdiv@counter
  2248  07CA  0AA4               	incf	___lwdiv@counter,f
  2249  07CB                     l3239:	
  2250  07CB  1BA1               	btfsc	___lwdiv@divisor+1,7
  2251  07CC  2FD9               	goto	l3241
  2252  07CD  3001               	movlw	1
  2253  07CE                     u3435:	
  2254  07CE  1003               	clrc
  2255  07CF  0DA0               	rlf	___lwdiv@divisor,f
  2256  07D0  0DA1               	rlf	___lwdiv@divisor+1,f
  2257  07D1  3EFF               	addlw	-1
  2258  07D2  1D03               	skipz
  2259  07D3  2FCE               	goto	u3435
  2260  07D4  3001               	movlw	1
  2261  07D5  00F5               	movwf	??___lwdiv
  2262  07D6  0875               	movf	??___lwdiv,w
  2263  07D7  07A4               	addwf	___lwdiv@counter,f
  2264  07D8  2FCB               	goto	l3239
  2265  07D9                     l3241:	
  2266  07D9  3001               	movlw	1
  2267  07DA                     u3455:	
  2268  07DA  1003               	clrc
  2269  07DB  0DA5               	rlf	___lwdiv@quotient,f
  2270  07DC  0DA6               	rlf	___lwdiv@quotient+1,f
  2271  07DD  3EFF               	addlw	-1
  2272  07DE  1D03               	skipz
  2273  07DF  2FDA               	goto	u3455
  2274  07E0  0821               	movf	___lwdiv@divisor+1,w
  2275  07E1  0223               	subwf	___lwdiv@dividend+1,w
  2276  07E2  1D03               	skipz
  2277  07E3  2FE6               	goto	u3465
  2278  07E4  0820               	movf	___lwdiv@divisor,w
  2279  07E5  0222               	subwf	___lwdiv@dividend,w
  2280  07E6                     u3465:	
  2281  07E6  1C03               	skipc
  2282  07E7  2FEF               	goto	l3247
  2283  07E8  0820               	movf	___lwdiv@divisor,w
  2284  07E9  02A2               	subwf	___lwdiv@dividend,f
  2285  07EA  0821               	movf	___lwdiv@divisor+1,w
  2286  07EB  1C03               	skipc
  2287  07EC  03A3               	decf	___lwdiv@dividend+1,f
  2288  07ED  02A3               	subwf	___lwdiv@dividend+1,f
  2289  07EE  1425               	bsf	___lwdiv@quotient,0
  2290  07EF                     l3247:	
  2291  07EF  3001               	movlw	1
  2292  07F0                     u3475:	
  2293  07F0  1003               	clrc
  2294  07F1  0CA1               	rrf	___lwdiv@divisor+1,f
  2295  07F2  0CA0               	rrf	___lwdiv@divisor,f
  2296  07F3  3EFF               	addlw	-1
  2297  07F4  1D03               	skipz
  2298  07F5  2FF0               	goto	u3475
  2299  07F6  3001               	movlw	1
  2300  07F7  02A4               	subwf	___lwdiv@counter,f
  2301  07F8  1D03               	btfss	3,2
  2302  07F9  2FD9               	goto	l3241
  2303  07FA                     l3251:	
  2304  07FA  0826               	movf	___lwdiv@quotient+1,w
  2305  07FB  00A1               	movwf	?___lwdiv+1
  2306  07FC  0825               	movf	___lwdiv@quotient,w
  2307  07FD  00A0               	movwf	?___lwdiv
  2308  07FE  0008               	return
  2309  07FF                     __end_of___lwdiv:	
  2310                           
  2311                           	psect	text5
  2312  0DD6                     __ptext5:	
  2313 ;; *************** function _si4703_seek *****************
  2314 ;; Defined at:
  2315 ;;		line 289 in file "si4703.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;  seekdown        1    wreg     unsigned char 
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;  seekdown        1   46[BANK0 ] unsigned char 
  2320 ;; Return value:  Size  Location     Type
  2321 ;;		None               void
  2322 ;; Registers used:
  2323 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2329 ;;      Params:         0       0       0       0       0
  2330 ;;      Locals:         0       1       0       0       0
  2331 ;;      Temps:          0       3       0       0       0
  2332 ;;      Totals:         0       4       0       0       0
  2333 ;;Total ram usage:        4 bytes
  2334 ;; Hardware stack levels used:    1
  2335 ;; Hardware stack levels required when called:    5
  2336 ;; This function calls:
  2337 ;;		_si4703_read_regs
  2338 ;;		_si4703_write_regs
  2339 ;; This function is called by:
  2340 ;;		_main
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           
  2345                           ;psect for function _si4703_seek
  2346  0DD6                     _si4703_seek:	
  2347                           
  2348                           ;incstack = 0
  2349                           ; Regs used in _si4703_seek: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2350                           ;si4703_seek@seekdown stored from wreg
  2351  0DD6  1283               	bcf	3,5	;RP0=0, select bank0
  2352  0DD7  1303               	bcf	3,6	;RP1=0, select bank0
  2353  0DD8  00CE               	movwf	si4703_seek@seekdown
  2354                           
  2355                           ;si4703.c: 291: si4703_read_regs(si4703_regs);
  2356  0DD9  30C7               	movlw	(low (_si4703_regs| 0))& (0+255)
  2357  0DDA  120A  158A  26F1  120A  158A  	fcall	_si4703_read_regs
  2358                           
  2359                           ;si4703.c: 293: si4703_regs[0x2] &= ~(0x0400);
  2360  0DDF  30FF               	movlw	255
  2361  0DE0  1683               	bsf	3,5	;RP0=1, select bank1
  2362  0DE1  1303               	bcf	3,6	;RP1=0, select bank1
  2363  0DE2  05CB               	andwf	(_si4703_regs^(0+128)+4),f
  2364  0DE3  30FB               	movlw	251
  2365  0DE4  05CC               	andwf	((_si4703_regs+1)^(0+128)+4),f
  2366                           
  2367                           ;si4703.c: 294: si4703_regs[0x2] |= (0x0200 | 0x0100);
  2368  0DE5  3000               	movlw	0
  2369  0DE6  04CB               	iorwf	(_si4703_regs^(0+128)+4),f
  2370  0DE7  3003               	movlw	3
  2371  0DE8  04CC               	iorwf	((_si4703_regs+1)^(0+128)+4),f
  2372                           
  2373                           ;si4703.c: 295: if(seekdown)
  2374  0DE9  1283               	bcf	3,5	;RP0=0, select bank0
  2375  0DEA  1303               	bcf	3,6	;RP1=0, select bank0
  2376  0DEB  084E               	movf	si4703_seek@seekdown,w
  2377  0DEC  1903               	btfsc	3,2
  2378  0DED  2DF4               	goto	l3475
  2379                           
  2380                           ;si4703.c: 296: si4703_regs[0x2] &= ~(0x0200);
  2381  0DEE  30FF               	movlw	255
  2382  0DEF  1683               	bsf	3,5	;RP0=1, select bank1
  2383  0DF0  1303               	bcf	3,6	;RP1=0, select bank1
  2384  0DF1  05CB               	andwf	(_si4703_regs^(0+128)+4),f
  2385  0DF2  30FD               	movlw	253
  2386  0DF3  05CC               	andwf	((_si4703_regs+1)^(0+128)+4),f
  2387  0DF4                     l3475:	
  2388                           
  2389                           ;si4703.c: 299: si4703_write_regs(si4703_regs);
  2390  0DF4  30C7               	movlw	(low (_si4703_regs| 0))& (0+255)
  2391  0DF5  120A  158A  2628  120A  158A  	fcall	_si4703_write_regs
  2392                           
  2393                           ;si4703.c: 300: si4703_read_regs(si4703_regs);
  2394  0DFA  30C7               	movlw	(low (_si4703_regs| 0))& (0+255)
  2395  0DFB  120A  158A  26F1  120A  158A  	fcall	_si4703_read_regs
  2396                           
  2397                           ;si4703.c: 302: while( !(si4703_regs[0xA] & (0x4000)) && !(si4703_regs[0xA] & (0x2000)) 
      +                          ){
  2398  0E00  2E15               	goto	l3483
  2399  0E01                     l3479:	
  2400                           
  2401                           ;si4703.c: 304: si4703_read_regs(si4703_regs);
  2402  0E01  30C7               	movlw	(low (_si4703_regs| 0))& (0+255)
  2403  0E02  120A  158A  26F1  120A  158A  	fcall	_si4703_read_regs
  2404                           
  2405                           ;si4703.c: 306: _delay((unsigned long)((60)*(20000000/4000.0)));
  2406  0E07  3002               	movlw	2
  2407  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  2408  0E09  1303               	bcf	3,6	;RP1=0, select bank0
  2409  0E0A  00CD               	movwf	??_si4703_seek+2
  2410  0E0B  3086               	movlw	134
  2411  0E0C  00CC               	movwf	??_si4703_seek+1
  2412  0E0D  3099               	movlw	153
  2413  0E0E  00CB               	movwf	??_si4703_seek
  2414  0E0F                     u4117:	
  2415  0E0F  0BCB               	decfsz	??_si4703_seek,f
  2416  0E10  2E0F               	goto	u4117
  2417  0E11  0BCC               	decfsz	??_si4703_seek+1,f
  2418  0E12  2E0F               	goto	u4117
  2419  0E13  0BCD               	decfsz	??_si4703_seek+2,f
  2420  0E14  2E0F               	goto	u4117
  2421  0E15                     l3483:	
  2422  0E15  1683               	bsf	3,5	;RP0=1, select bank1
  2423  0E16  1303               	bcf	3,6	;RP1=0, select bank1
  2424  0E17  1B5C               	btfsc	((_si4703_regs+1)^(0+128)+20),6
  2425  0E18  2E1B               	goto	l3487
  2426  0E19  1EDC               	btfss	((_si4703_regs+1)^(0+128)+20),5
  2427  0E1A  2E01               	goto	l3479
  2428  0E1B                     l3487:	
  2429                           
  2430                           ;si4703.c: 307: }
  2431                           ;si4703.c: 310: si4703_regs[0x2] &= ~(0x0100);
  2432  0E1B  30FF               	movlw	255
  2433  0E1C  05CB               	andwf	(_si4703_regs^(0+128)+4),f
  2434  0E1D  30FE               	movlw	254
  2435  0E1E  05CC               	andwf	((_si4703_regs+1)^(0+128)+4),f
  2436                           
  2437                           ;si4703.c: 311: si4703_regs[0xA] &= ~(0x4000);
  2438  0E1F  30FF               	movlw	255
  2439  0E20  05DB               	andwf	(_si4703_regs^(0+128)+20),f
  2440  0E21  30BF               	movlw	191
  2441  0E22  05DC               	andwf	((_si4703_regs+1)^(0+128)+20),f
  2442                           
  2443                           ;si4703.c: 312: si4703_write_regs(si4703_regs);
  2444  0E23  30C7               	movlw	(low (_si4703_regs| 0))& (0+255)
  2445  0E24  120A  158A  2628   	fcall	_si4703_write_regs
  2446  0E27  0008               	return
  2447  0E28                     __end_of_si4703_seek:	
  2448                           
  2449                           	psect	text6
  2450  0483                     __ptext6:	
  2451 ;; *************** function _si4703_init *****************
  2452 ;; Defined at:
  2453 ;;		line 36 in file "si4703.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;		None
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;  buff           16   54[BANK0 ] unsigned char [16]
  2458 ;;  firmware_ver    2   73[BANK0 ] unsigned int 
  2459 ;;  manu_id         2   71[BANK0 ] unsigned int 
  2460 ;;  chip_number     1   77[BANK0 ] unsigned char 
  2461 ;;  chip_rev        1   76[BANK0 ] unsigned char 
  2462 ;;  device_id       1   75[BANK0 ] unsigned char 
  2463 ;;  ack             1   70[BANK0 ] unsigned char 
  2464 ;; Return value:  Size  Location     Type
  2465 ;;		None               void
  2466 ;; Registers used:
  2467 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2473 ;;      Params:         0       0       0       0       0
  2474 ;;      Locals:         0      24       0       0       0
  2475 ;;      Temps:          0       4       0       0       0
  2476 ;;      Totals:         0      28       0       0       0
  2477 ;;Total ram usage:       28 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:    6
  2480 ;; This function calls:
  2481 ;;		_i2c_init
  2482 ;;		_si4703_read_regs
  2483 ;;		_si4703_set_volume
  2484 ;;		_si4703_setup_2wire
  2485 ;;		_si4703_tune
  2486 ;;		_si4703_write_regs
  2487 ;; This function is called by:
  2488 ;;		_main
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492                           
  2493                           ;psect for function _si4703_init
  2494  0483                     _si4703_init:	
  2495                           
  2496                           ;si4703.c: 38: uint8_t ack = 1;
  2497                           
  2498                           ;incstack = 0
  2499                           ; Regs used in _si4703_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2500  0483  1283               	bcf	3,5	;RP0=0, select bank0
  2501  0484  1303               	bcf	3,6	;RP1=0, select bank0
  2502  0485  01E6               	clrf	si4703_init@ack
  2503  0486  0AE6               	incf	si4703_init@ack,f
  2504                           
  2505                           ;si4703.c: 39: uint8_t device_id = 0, chip_rev = 0, chip_number = 0;
  2506  0487  01EB               	clrf	si4703_init@device_id
  2507  0488  01EC               	clrf	si4703_init@chip_rev
  2508  0489  01ED               	clrf	si4703_init@chip_number
  2509                           
  2510                           ;si4703.c: 40: uint16_t manu_id = 0, firmware_ver = 0;
  2511  048A  01E7               	clrf	si4703_init@manu_id
  2512  048B  01E8               	clrf	si4703_init@manu_id+1
  2513  048C  01E9               	clrf	si4703_init@firmware_ver
  2514  048D  01EA               	clrf	si4703_init@firmware_ver+1
  2515                           
  2516                           ;si4703.c: 41: uint8_t buff[16] = {0};
  2517  048E  3056               	movlw	si4703_init@buff& (0+255)
  2518  048F  0084               	movwf	4
  2519  0490  30A0               	movlw	low si4703_init@F1437
  2520  0491  00D2               	movwf	??_si4703_init
  2521  0492  0804               	movf	4,w
  2522  0493  00D3               	movwf	??_si4703_init+1
  2523  0494  3010               	movlw	16
  2524  0495  00D4               	movwf	??_si4703_init+2
  2525  0496                     u3530:	
  2526  0496  0852               	movf	??_si4703_init,w
  2527  0497  0084               	movwf	4
  2528  0498  1783               	bsf	3,7	;select IRP bank3
  2529  0499  0800               	movf	0,w
  2530  049A  00D5               	movwf	??_si4703_init+3
  2531  049B  0AD2               	incf	??_si4703_init,f
  2532  049C  0853               	movf	??_si4703_init+1,w
  2533  049D  0084               	movwf	4
  2534  049E  1383               	bcf	3,7	;select IRP bank0
  2535  049F  0855               	movf	??_si4703_init+3,w
  2536  04A0  0080               	movwf	0
  2537  04A1  0AD3               	incf	??_si4703_init+1,f
  2538  04A2  0BD4               	decfsz	??_si4703_init+2,f
  2539  04A3  2C96               	goto	u3530
  2540                           
  2541                           ;si4703.c: 43: PORTCbits.RC1 = 1;
  2542  04A4  1487               	bsf	7,1	;volatile
  2543                           
  2544                           ;si4703.c: 44: PORTCbits.RC4 = 1;
  2545  04A5  1607               	bsf	7,4	;volatile
  2546                           
  2547                           ;si4703.c: 46: TRISCbits.TRISC1 = 0;
  2548  04A6  1683               	bsf	3,5	;RP0=1, select bank1
  2549  04A7  1303               	bcf	3,6	;RP1=0, select bank1
  2550  04A8  1087               	bcf	7,1	;volatile
  2551                           
  2552                           ;si4703.c: 47: TRISCbits.TRISC4 = 0;
  2553  04A9  1207               	bcf	7,4	;volatile
  2554                           
  2555                           ;si4703.c: 48: si4703_setup_2wire();
  2556  04AA  120A  158A  2415  120A  118A  	fcall	_si4703_setup_2wire
  2557                           
  2558                           ;si4703.c: 54: i2c_init();
  2559  04AF  120A  158A  235B  120A  118A  	fcall	_i2c_init
  2560                           
  2561                           ;si4703.c: 58: si4703_read_regs(si4703_regs);
  2562  04B4  30C7               	movlw	(low (_si4703_regs| 0))& (0+255)
  2563  04B5  120A  158A  26F1  120A  118A  	fcall	_si4703_read_regs
  2564                           
  2565                           ;si4703.c: 61: device_id = (si4703_regs[0] & 0xF000) >> 12;
  2566  04BA  1683               	bsf	3,5	;RP0=1, select bank1
  2567  04BB  1303               	bcf	3,6	;RP1=0, select bank1
  2568  04BC  0848               	movf	(_si4703_regs+1)^(0+128),w
  2569  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  2570  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  2571  04BF  00D3               	movwf	??_si4703_init+1
  2572  04C0  1683               	bsf	3,5	;RP0=1, select bank1
  2573  04C1  1303               	bcf	3,6	;RP1=0, select bank1
  2574  04C2  0847               	movf	_si4703_regs^(0+128),w
  2575  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  2576  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  2577  04C5  00D2               	movwf	??_si4703_init
  2578  04C6  0E53               	swapf	??_si4703_init+1,w
  2579  04C7  390F               	andlw	15
  2580  04C8  00D2               	movwf	??_si4703_init
  2581  04C9  01D3               	clrf	??_si4703_init+1
  2582  04CA  0852               	movf	??_si4703_init,w
  2583  04CB  390F               	andlw	15
  2584  04CC  00D4               	movwf	??_si4703_init+2
  2585  04CD  0854               	movf	??_si4703_init+2,w
  2586  04CE  00EB               	movwf	si4703_init@device_id
  2587                           
  2588                           ;si4703.c: 62: manu_id = si4703_regs[0] & 0x0FFF;
  2589  04CF  30FF               	movlw	255
  2590  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  2591  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  2592  04D2  0547               	andwf	_si4703_regs^(0+128),w
  2593  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  2594  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  2595  04D5  00E7               	movwf	si4703_init@manu_id
  2596  04D6  300F               	movlw	15
  2597  04D7  1683               	bsf	3,5	;RP0=1, select bank1
  2598  04D8  1303               	bcf	3,6	;RP1=0, select bank1
  2599  04D9  0548               	andwf	(_si4703_regs+1)^(0+128),w
  2600  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  2601  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  2602  04DC  00E8               	movwf	si4703_init@manu_id+1
  2603                           
  2604                           ;si4703.c: 63: chip_rev = (si4703_regs[1] >> 10) & 0x3F;
  2605  04DD  3002               	movlw	2
  2606  04DE  3EC7               	addlw	(low (_si4703_regs| 0))& (0+255)
  2607  04DF  0084               	movwf	4
  2608  04E0  1383               	bcf	3,7	;select IRP bank1
  2609  04E1  0800               	movf	0,w
  2610  04E2  00D2               	movwf	??_si4703_init
  2611  04E3  0A84               	incf	4,f
  2612  04E4  0800               	movf	0,w
  2613  04E5  00D3               	movwf	??_si4703_init+1
  2614  04E6  300A               	movlw	10
  2615  04E7                     u3545:	
  2616  04E7  1003               	clrc
  2617  04E8  0CD3               	rrf	??_si4703_init+1,f
  2618  04E9  0CD2               	rrf	??_si4703_init,f
  2619  04EA  3EFF               	addlw	-1
  2620  04EB  1D03               	skipz
  2621  04EC  2CE7               	goto	u3545
  2622  04ED  0852               	movf	??_si4703_init,w
  2623  04EE  393F               	andlw	63
  2624  04EF  00D4               	movwf	??_si4703_init+2
  2625  04F0  0854               	movf	??_si4703_init+2,w
  2626  04F1  00EC               	movwf	si4703_init@chip_rev
  2627                           
  2628                           ;si4703.c: 64: chip_number = (si4703_regs[1] >> 6) & 0x0F;
  2629  04F2  3002               	movlw	2
  2630  04F3  3EC7               	addlw	(low (_si4703_regs| 0))& (0+255)
  2631  04F4  0084               	movwf	4
  2632  04F5  0800               	movf	0,w
  2633  04F6  00D2               	movwf	??_si4703_init
  2634  04F7  0A84               	incf	4,f
  2635  04F8  0800               	movf	0,w
  2636  04F9  00D3               	movwf	??_si4703_init+1
  2637  04FA  3006               	movlw	6
  2638  04FB                     u3555:	
  2639  04FB  1003               	clrc
  2640  04FC  0CD3               	rrf	??_si4703_init+1,f
  2641  04FD  0CD2               	rrf	??_si4703_init,f
  2642  04FE  3EFF               	addlw	-1
  2643  04FF  1D03               	skipz
  2644  0500  2CFB               	goto	u3555
  2645  0501  0852               	movf	??_si4703_init,w
  2646  0502  390F               	andlw	15
  2647  0503  00D4               	movwf	??_si4703_init+2
  2648  0504  0854               	movf	??_si4703_init+2,w
  2649  0505  00ED               	movwf	si4703_init@chip_number
  2650                           
  2651                           ;si4703.c: 65: firmware_ver = si4703_regs[1] & 0x3F;
  2652  0506  303F               	movlw	63
  2653  0507  1683               	bsf	3,5	;RP0=1, select bank1
  2654  0508  1303               	bcf	3,6	;RP1=0, select bank1
  2655  0509  0549               	andwf	(_si4703_regs^(0+128)+2),w
  2656  050A  1283               	bcf	3,5	;RP0=0, select bank0
  2657  050B  1303               	bcf	3,6	;RP1=0, select bank0
  2658  050C  00E9               	movwf	si4703_init@firmware_ver
  2659  050D  3000               	movlw	0
  2660  050E  1683               	bsf	3,5	;RP0=1, select bank1
  2661  050F  1303               	bcf	3,6	;RP1=0, select bank1
  2662  0510  054A               	andwf	((_si4703_regs+1)^(0+128)+2),w
  2663  0511  1283               	bcf	3,5	;RP0=0, select bank0
  2664  0512  1303               	bcf	3,6	;RP1=0, select bank0
  2665  0513  00EA               	movwf	si4703_init@firmware_ver+1
  2666                           
  2667                           ;si4703.c: 81: si4703_regs[0x07] = 0x8100;
  2668  0514  3000               	movlw	0
  2669  0515  1683               	bsf	3,5	;RP0=1, select bank1
  2670  0516  1303               	bcf	3,6	;RP1=0, select bank1
  2671  0517  00D5               	movwf	(_si4703_regs^(0+128)+14)
  2672  0518  3081               	movlw	129
  2673  0519  00D6               	movwf	(_si4703_regs^(0+128)+15)
  2674                           
  2675                           ;si4703.c: 82: si4703_write_regs(si4703_regs);
  2676  051A  30C7               	movlw	(low (_si4703_regs| 0))& (0+255)
  2677  051B  120A  158A  2628  120A  118A  	fcall	_si4703_write_regs
  2678                           
  2679                           ;si4703.c: 84: _delay((unsigned long)((500000)*(20000000/4000000.0)));
  2680  0520  300D               	movlw	13
  2681  0521  1283               	bcf	3,5	;RP0=0, select bank0
  2682  0522  1303               	bcf	3,6	;RP1=0, select bank0
  2683  0523  00D4               	movwf	??_si4703_init+2
  2684  0524  30AF               	movlw	175
  2685  0525  00D3               	movwf	??_si4703_init+1
  2686  0526  30C1               	movlw	193
  2687  0527  00D2               	movwf	??_si4703_init
  2688  0528                     u4127:	
  2689  0528  0BD2               	decfsz	??_si4703_init,f
  2690  0529  2D28               	goto	u4127
  2691  052A  0BD3               	decfsz	??_si4703_init+1,f
  2692  052B  2D28               	goto	u4127
  2693  052C  0BD4               	decfsz	??_si4703_init+2,f
  2694  052D  2D28               	goto	u4127
  2695  052E  0000               	nop
  2696                           
  2697                           ;si4703.c: 86: si4703_read_regs(si4703_regs);
  2698  052F  30C7               	movlw	(low (_si4703_regs| 0))& (0+255)
  2699  0530  120A  158A  26F1  120A  118A  	fcall	_si4703_read_regs
  2700                           
  2701                           ;si4703.c: 88: si4703_regs[0x02] = 0x4001;
  2702  0535  3001               	movlw	1
  2703  0536  1683               	bsf	3,5	;RP0=1, select bank1
  2704  0537  1303               	bcf	3,6	;RP1=0, select bank1
  2705  0538  00CB               	movwf	(_si4703_regs^(0+128)+4)
  2706  0539  3040               	movlw	64
  2707  053A  00CC               	movwf	(_si4703_regs^(0+128)+5)
  2708                           
  2709                           ;si4703.c: 91: si4703_write_regs(si4703_regs);
  2710  053B  30C7               	movlw	(low (_si4703_regs| 0))& (0+255)
  2711  053C  120A  158A  2628  120A  118A  	fcall	_si4703_write_regs
  2712                           
  2713                           ;si4703.c: 92: _delay((unsigned long)((120000)*(20000000/4000000.0)));
  2714  0541  3004               	movlw	4
  2715  0542  1283               	bcf	3,5	;RP0=0, select bank0
  2716  0543  1303               	bcf	3,6	;RP1=0, select bank0
  2717  0544  00D4               	movwf	??_si4703_init+2
  2718  0545  300C               	movlw	12
  2719  0546  00D3               	movwf	??_si4703_init+1
  2720  0547  3035               	movlw	53
  2721  0548  00D2               	movwf	??_si4703_init
  2722  0549                     u4137:	
  2723  0549  0BD2               	decfsz	??_si4703_init,f
  2724  054A  2D49               	goto	u4137
  2725  054B  0BD3               	decfsz	??_si4703_init+1,f
  2726  054C  2D49               	goto	u4137
  2727  054D  0BD4               	decfsz	??_si4703_init+2,f
  2728  054E  2D49               	goto	u4137
  2729  054F  2D50               	nop2
  2730                           
  2731                           ;si4703.c: 94: si4703_read_regs(si4703_regs);
  2732  0550  30C7               	movlw	(low (_si4703_regs| 0))& (0+255)
  2733  0551  120A  158A  26F1  120A  118A  	fcall	_si4703_read_regs
  2734                           
  2735                           ;si4703.c: 98: si4703_regs[0x5] |= 0x0010;
  2736  0556  1683               	bsf	3,5	;RP0=1, select bank1
  2737  0557  1303               	bcf	3,6	;RP1=0, select bank1
  2738  0558  1651               	bsf	(_si4703_regs^(0+128)+10),4
  2739                           
  2740                           ;si4703.c: 100: si4703_set_volume(0x0e);
  2741  0559  300E               	movlw	14
  2742  055A  120A  158A  2375  120A  118A  	fcall	_si4703_set_volume
  2743                           
  2744                           ;si4703.c: 102: si4703_regs[0x6] |= 0x0011;
  2745  055F  3011               	movlw	17
  2746  0560  1683               	bsf	3,5	;RP0=1, select bank1
  2747  0561  1303               	bcf	3,6	;RP1=0, select bank1
  2748  0562  04D3               	iorwf	(_si4703_regs^(0+128)+12),f
  2749  0563  3000               	movlw	0
  2750  0564  04D4               	iorwf	((_si4703_regs+1)^(0+128)+12),f
  2751                           
  2752                           ;si4703.c: 103: si4703_write_regs(si4703_regs);
  2753  0565  30C7               	movlw	(low (_si4703_regs| 0))& (0+255)
  2754  0566  120A  158A  2628  120A  118A  	fcall	_si4703_write_regs
  2755                           
  2756                           ;si4703.c: 104: si4703_read_regs(si4703_regs);
  2757  056B  30C7               	movlw	(low (_si4703_regs| 0))& (0+255)
  2758  056C  120A  158A  26F1  120A  118A  	fcall	_si4703_read_regs
  2759                           
  2760                           ;si4703.c: 107: si4703_regs[0x4] |= 0x1000;
  2761  0571  1683               	bsf	3,5	;RP0=1, select bank1
  2762  0572  1303               	bcf	3,6	;RP1=0, select bank1
  2763  0573  1650               	bsf	(_si4703_regs^(0+128)+9),4
  2764                           
  2765                           ;si4703.c: 108: si4703_write_regs(si4703_regs);
  2766  0574  30C7               	movlw	(low (_si4703_regs| 0))& (0+255)
  2767  0575  120A  158A  2628  120A  118A  	fcall	_si4703_write_regs
  2768                           
  2769                           ;si4703.c: 111: si4703_tune(875);
  2770  057A  306B               	movlw	107
  2771  057B  1283               	bcf	3,5	;RP0=0, select bank0
  2772  057C  1303               	bcf	3,6	;RP1=0, select bank0
  2773  057D  00CB               	movwf	si4703_tune@freq
  2774  057E  3003               	movlw	3
  2775  057F  00CC               	movwf	si4703_tune@freq+1
  2776  0580  120A  158A  2545   	fcall	_si4703_tune
  2777  0583  0008               	return
  2778  0584                     __end_of_si4703_init:	
  2779                           
  2780                           	psect	text7
  2781  0D45                     __ptext7:	
  2782 ;; *************** function _si4703_tune *****************
  2783 ;; Defined at:
  2784 ;;		line 191 in file "si4703.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;  freq            2   43[BANK0 ] unsigned int 
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;  chn             2   48[BANK0 ] unsigned int 
  2789 ;; Return value:  Size  Location     Type
  2790 ;;		None               void
  2791 ;; Registers used:
  2792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2798 ;;      Params:         0       2       0       0       0
  2799 ;;      Locals:         0       2       0       0       0
  2800 ;;      Temps:          0       3       0       0       0
  2801 ;;      Totals:         0       7       0       0       0
  2802 ;;Total ram usage:        7 bytes
  2803 ;; Hardware stack levels used:    1
  2804 ;; Hardware stack levels required when called:    5
  2805 ;; This function calls:
  2806 ;;		_si4703_read_regs
  2807 ;;		_si4703_write_regs
  2808 ;; This function is called by:
  2809 ;;		_main
  2810 ;;		_si4703_init
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           
  2815                           ;psect for function _si4703_tune
  2816  0D45                     _si4703_tune:	
  2817                           
  2818                           ;si4703.c: 197: uint16_t chn = freq - 875;
  2819                           
  2820                           ;incstack = 0
  2821                           ; Regs used in _si4703_tune: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2822  0D45  1283               	bcf	3,5	;RP0=0, select bank0
  2823  0D46  1303               	bcf	3,6	;RP1=0, select bank0
  2824  0D47  084B               	movf	si4703_tune@freq,w
  2825  0D48  3E95               	addlw	149
  2826  0D49  00D0               	movwf	si4703_tune@chn
  2827  0D4A  084C               	movf	si4703_tune@freq+1,w
  2828  0D4B  1803               	skipnc
  2829  0D4C  3E01               	addlw	1
  2830  0D4D  3EFC               	addlw	252
  2831  0D4E  00D1               	movwf	si4703_tune@chn+1
  2832                           
  2833                           ;si4703.c: 200: si4703_regs[0x3] = 0x8000 | chn;
  2834  0D4F  3000               	movlw	0
  2835  0D50  0450               	iorwf	si4703_tune@chn,w
  2836  0D51  1683               	bsf	3,5	;RP0=1, select bank1
  2837  0D52  1303               	bcf	3,6	;RP1=0, select bank1
  2838  0D53  00CD               	movwf	(_si4703_regs^(0+128)+6)
  2839  0D54  3080               	movlw	128
  2840  0D55  1283               	bcf	3,5	;RP0=0, select bank0
  2841  0D56  1303               	bcf	3,6	;RP1=0, select bank0
  2842  0D57  0451               	iorwf	si4703_tune@chn+1,w
  2843  0D58  1683               	bsf	3,5	;RP0=1, select bank1
  2844  0D59  1303               	bcf	3,6	;RP1=0, select bank1
  2845  0D5A  00CE               	movwf	((_si4703_regs+1)^(0+128)+6)
  2846                           
  2847                           ;si4703.c: 201: si4703_write_regs(si4703_regs);
  2848  0D5B  30C7               	movlw	(low (_si4703_regs| 0))& (0+255)
  2849  0D5C  120A  158A  2628  120A  158A  	fcall	_si4703_write_regs
  2850                           
  2851                           ;si4703.c: 202: _delay((unsigned long)((100000)*(20000000/4000000.0)));
  2852  0D61  3003               	movlw	3
  2853  0D62  1283               	bcf	3,5	;RP0=0, select bank0
  2854  0D63  1303               	bcf	3,6	;RP1=0, select bank0
  2855  0D64  00CF               	movwf	??_si4703_tune+2
  2856  0D65  308A               	movlw	138
  2857  0D66  00CE               	movwf	??_si4703_tune+1
  2858  0D67  3056               	movlw	86
  2859  0D68  00CD               	movwf	??_si4703_tune
  2860  0D69                     u4147:	
  2861  0D69  0BCD               	decfsz	??_si4703_tune,f
  2862  0D6A  2D69               	goto	u4147
  2863  0D6B  0BCE               	decfsz	??_si4703_tune+1,f
  2864  0D6C  2D69               	goto	u4147
  2865  0D6D  0BCF               	decfsz	??_si4703_tune+2,f
  2866  0D6E  2D69               	goto	u4147
  2867  0D6F  2D70               	nop2
  2868                           
  2869                           ;si4703.c: 204: si4703_regs[0x3] = (~0x8000) & chn;
  2870  0D70  30FF               	movlw	255
  2871  0D71  1283               	bcf	3,5	;RP0=0, select bank0
  2872  0D72  1303               	bcf	3,6	;RP1=0, select bank0
  2873  0D73  0550               	andwf	si4703_tune@chn,w
  2874  0D74  1683               	bsf	3,5	;RP0=1, select bank1
  2875  0D75  1303               	bcf	3,6	;RP1=0, select bank1
  2876  0D76  00CD               	movwf	(_si4703_regs^(0+128)+6)
  2877  0D77  307F               	movlw	127
  2878  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  2879  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  2880  0D7A  0551               	andwf	si4703_tune@chn+1,w
  2881  0D7B  1683               	bsf	3,5	;RP0=1, select bank1
  2882  0D7C  1303               	bcf	3,6	;RP1=0, select bank1
  2883  0D7D  00CE               	movwf	((_si4703_regs+1)^(0+128)+6)
  2884                           
  2885                           ;si4703.c: 205: si4703_write_regs(si4703_regs);
  2886  0D7E  30C7               	movlw	(low (_si4703_regs| 0))& (0+255)
  2887  0D7F  120A  158A  2628  120A  158A  	fcall	_si4703_write_regs
  2888                           
  2889                           ;si4703.c: 207: si4703_read_regs(si4703_regs);
  2890  0D84  30C7               	movlw	(low (_si4703_regs| 0))& (0+255)
  2891  0D85  120A  158A  26F1   	fcall	_si4703_read_regs
  2892  0D88  0008               	return
  2893  0D89                     __end_of_si4703_tune:	
  2894                           
  2895                           	psect	text8
  2896  0C15                     __ptext8:	
  2897 ;; *************** function _si4703_setup_2wire *****************
  2898 ;; Defined at:
  2899 ;;		line 22 in file "si4703.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;		None
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;		None
  2904 ;; Return value:  Size  Location     Type
  2905 ;;		None               void
  2906 ;; Registers used:
  2907 ;;		wreg
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2913 ;;      Params:         0       0       0       0       0
  2914 ;;      Locals:         0       0       0       0       0
  2915 ;;      Temps:          0       3       0       0       0
  2916 ;;      Totals:         0       3       0       0       0
  2917 ;;Total ram usage:        3 bytes
  2918 ;; Hardware stack levels used:    1
  2919 ;; Hardware stack levels required when called:    2
  2920 ;; This function calls:
  2921 ;;		Nothing
  2922 ;; This function is called by:
  2923 ;;		_si4703_init
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           
  2928                           ;psect for function _si4703_setup_2wire
  2929  0C15                     _si4703_setup_2wire:	
  2930                           
  2931                           ;si4703.c: 24: PORTCbits.RC4 = 0;
  2932                           
  2933                           ;incstack = 0
  2934                           ; Regs used in _si4703_setup_2wire: [wreg]
  2935  0C15  1283               	bcf	3,5	;RP0=0, select bank0
  2936  0C16  1303               	bcf	3,6	;RP1=0, select bank0
  2937  0C17  1207               	bcf	7,4	;volatile
  2938                           
  2939                           ;si4703.c: 26: _delay((unsigned long)((1000)*(20000000/4000000.0)));
  2940  0C18  3007               	movlw	7
  2941  0C19  00A1               	movwf	??_si4703_setup_2wire+1
  2942  0C1A  307D               	movlw	125
  2943  0C1B  00A0               	movwf	??_si4703_setup_2wire
  2944  0C1C                     u4157:	
  2945  0C1C  0BA0               	decfsz	??_si4703_setup_2wire,f
  2946  0C1D  2C1C               	goto	u4157
  2947  0C1E  0BA1               	decfsz	??_si4703_setup_2wire+1,f
  2948  0C1F  2C1C               	goto	u4157
  2949                           
  2950                           ;si4703.c: 27: PORTCbits.RC1 = 0;
  2951  0C20  1283               	bcf	3,5	;RP0=0, select bank0
  2952  0C21  1303               	bcf	3,6	;RP1=0, select bank0
  2953  0C22  1087               	bcf	7,1	;volatile
  2954                           
  2955                           ;si4703.c: 29: _delay((unsigned long)((1000)*(20000000/4000000.0)));
  2956  0C23  3007               	movlw	7
  2957  0C24  00A1               	movwf	??_si4703_setup_2wire+1
  2958  0C25  307D               	movlw	125
  2959  0C26  00A0               	movwf	??_si4703_setup_2wire
  2960  0C27                     u4167:	
  2961  0C27  0BA0               	decfsz	??_si4703_setup_2wire,f
  2962  0C28  2C27               	goto	u4167
  2963  0C29  0BA1               	decfsz	??_si4703_setup_2wire+1,f
  2964  0C2A  2C27               	goto	u4167
  2965                           
  2966                           ;si4703.c: 30: PORTCbits.RC1 = 1;
  2967  0C2B  1283               	bcf	3,5	;RP0=0, select bank0
  2968  0C2C  1303               	bcf	3,6	;RP1=0, select bank0
  2969  0C2D  1487               	bsf	7,1	;volatile
  2970                           
  2971                           ;si4703.c: 32: _delay((unsigned long)((100000)*(20000000/4000000.0)));
  2972  0C2E  3003               	movlw	3
  2973  0C2F  00A2               	movwf	??_si4703_setup_2wire+2
  2974  0C30  308A               	movlw	138
  2975  0C31  00A1               	movwf	??_si4703_setup_2wire+1
  2976  0C32  3056               	movlw	86
  2977  0C33  00A0               	movwf	??_si4703_setup_2wire
  2978  0C34                     u4177:	
  2979  0C34  0BA0               	decfsz	??_si4703_setup_2wire,f
  2980  0C35  2C34               	goto	u4177
  2981  0C36  0BA1               	decfsz	??_si4703_setup_2wire+1,f
  2982  0C37  2C34               	goto	u4177
  2983  0C38  0BA2               	decfsz	??_si4703_setup_2wire+2,f
  2984  0C39  2C34               	goto	u4177
  2985  0C3A  2C3B               	nop2
  2986  0C3B  0008               	return
  2987  0C3C                     __end_of_si4703_setup_2wire:	
  2988                           
  2989                           	psect	text9
  2990  0B75                     __ptext9:	
  2991 ;; *************** function _si4703_set_volume *****************
  2992 ;; Defined at:
  2993 ;;		line 210 in file "si4703.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;  val             1    wreg     unsigned char 
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;  val             1   45[BANK0 ] unsigned char 
  2998 ;; Return value:  Size  Location     Type
  2999 ;;		None               void
  3000 ;; Registers used:
  3001 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3007 ;;      Params:         0       0       0       0       0
  3008 ;;      Locals:         0       1       0       0       0
  3009 ;;      Temps:          0       2       0       0       0
  3010 ;;      Totals:         0       3       0       0       0
  3011 ;;Total ram usage:        3 bytes
  3012 ;; Hardware stack levels used:    1
  3013 ;; Hardware stack levels required when called:    5
  3014 ;; This function calls:
  3015 ;;		_si4703_read_regs
  3016 ;;		_si4703_write_regs
  3017 ;; This function is called by:
  3018 ;;		_si4703_init
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           
  3023                           ;psect for function _si4703_set_volume
  3024  0B75                     _si4703_set_volume:	
  3025                           
  3026                           ;incstack = 0
  3027                           ; Regs used in _si4703_set_volume: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3028                           ;si4703_set_volume@val stored from wreg
  3029  0B75  1283               	bcf	3,5	;RP0=0, select bank0
  3030  0B76  1303               	bcf	3,6	;RP1=0, select bank0
  3031  0B77  00CD               	movwf	si4703_set_volume@val
  3032                           
  3033                           ;si4703.c: 213: si4703_regs[0x5] |= (0x0F & val);
  3034  0B78  084D               	movf	si4703_set_volume@val,w
  3035  0B79  390F               	andlw	15
  3036  0B7A  00CB               	movwf	??_si4703_set_volume
  3037  0B7B  01CC               	clrf	??_si4703_set_volume+1
  3038  0B7C  084B               	movf	??_si4703_set_volume,w
  3039  0B7D  1683               	bsf	3,5	;RP0=1, select bank1
  3040  0B7E  1303               	bcf	3,6	;RP1=0, select bank1
  3041  0B7F  04D1               	iorwf	(_si4703_regs^(0+128)+10),f
  3042  0B80  1283               	bcf	3,5	;RP0=0, select bank0
  3043  0B81  1303               	bcf	3,6	;RP1=0, select bank0
  3044  0B82  084C               	movf	??_si4703_set_volume+1,w
  3045  0B83  1683               	bsf	3,5	;RP0=1, select bank1
  3046  0B84  1303               	bcf	3,6	;RP1=0, select bank1
  3047  0B85  04D2               	iorwf	((_si4703_regs+1)^(0+128)+10),f
  3048                           
  3049                           ;si4703.c: 214: si4703_write_regs(si4703_regs);
  3050  0B86  30C7               	movlw	(low (_si4703_regs| 0))& (0+255)
  3051  0B87  120A  158A  2628  120A  158A  	fcall	_si4703_write_regs
  3052                           
  3053                           ;si4703.c: 215: si4703_read_regs(si4703_regs);
  3054  0B8C  30C7               	movlw	(low (_si4703_regs| 0))& (0+255)
  3055  0B8D  120A  158A  26F1   	fcall	_si4703_read_regs
  3056  0B90  0008               	return
  3057  0B91                     __end_of_si4703_set_volume:	
  3058                           
  3059                           	psect	text10
  3060  0E28                     __ptext10:	
  3061 ;; *************** function _si4703_write_regs *****************
  3062 ;; Defined at:
  3063 ;;		line 159 in file "si4703.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;  r               1    wreg     PTR unsigned int 
  3066 ;;		 -> si4703_regs(32), 
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;  r               1    7[BANK0 ] PTR unsigned int 
  3069 ;;		 -> si4703_regs(32), 
  3070 ;;  i               1    6[BANK0 ] unsigned char 
  3071 ;; Return value:  Size  Location     Type
  3072 ;;		None               void
  3073 ;; Registers used:
  3074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3080 ;;      Params:         0       0       0       0       0
  3081 ;;      Locals:         0       2       0       0       0
  3082 ;;      Temps:          0       4       0       0       0
  3083 ;;      Totals:         0       6       0       0       0
  3084 ;;Total ram usage:        6 bytes
  3085 ;; Hardware stack levels used:    1
  3086 ;; Hardware stack levels required when called:    4
  3087 ;; This function calls:
  3088 ;;		_i2c_read_ack
  3089 ;;		_i2c_send_controlbyte
  3090 ;;		_i2c_send_data
  3091 ;;		_i2c_start
  3092 ;;		_i2c_stop
  3093 ;; This function is called by:
  3094 ;;		_si4703_init
  3095 ;;		_si4703_tune
  3096 ;;		_si4703_set_volume
  3097 ;;		_si4703_seek
  3098 ;;		_si4703_volume_up
  3099 ;;		_si4703_volume_down
  3100 ;;		_si4703_powerdown
  3101 ;;		_si4703_mute
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           
  3106                           ;psect for function _si4703_write_regs
  3107  0E28                     _si4703_write_regs:	
  3108                           
  3109                           ;incstack = 0
  3110                           ; Regs used in _si4703_write_regs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3111                           ;si4703_write_regs@r stored from wreg
  3112  0E28  1283               	bcf	3,5	;RP0=0, select bank0
  3113  0E29  1303               	bcf	3,6	;RP1=0, select bank0
  3114  0E2A  00A7               	movwf	si4703_write_regs@r
  3115                           
  3116                           ;si4703.c: 161: uint8_t i;
  3117                           ;si4703.c: 163: (GIE = 0);
  3118  0E2B  138B               	bcf	11,7	;volatile
  3119                           
  3120                           ;si4703.c: 164: i2c_start();
  3121  0E2C  120A  158A  22DE  120A  158A  	fcall	_i2c_start
  3122                           
  3123                           ;si4703.c: 166: i2c_send_controlbyte(0x10, 0);
  3124  0E31  01F5               	clrf	i2c_send_controlbyte@rw_bit
  3125  0E32  3010               	movlw	16
  3126  0E33  120A  158A  22F6  120A  158A  	fcall	_i2c_send_controlbyte
  3127                           
  3128                           ;si4703.c: 167: i2c_read_ack();
  3129  0E38  120A  158A  2232  120A  158A  	fcall	_i2c_read_ack
  3130                           
  3131                           ;si4703.c: 169: for(i=0x02;i<0x08;i++){
  3132  0E3D  3002               	movlw	2
  3133  0E3E  1283               	bcf	3,5	;RP0=0, select bank0
  3134  0E3F  1303               	bcf	3,6	;RP1=0, select bank0
  3135  0E40  00A2               	movwf	??_si4703_write_regs
  3136  0E41  0822               	movf	??_si4703_write_regs,w
  3137  0E42  00A6               	movwf	si4703_write_regs@i
  3138  0E43  3008               	movlw	8
  3139  0E44  0226               	subwf	si4703_write_regs@i,w
  3140  0E45  1803               	btfsc	3,0
  3141  0E46  2E7E               	goto	l3063
  3142  0E47                     l3053:	
  3143                           
  3144                           ;si4703.c: 171: i2c_send_data( (*(r + i) >> 8) );
  3145  0E47  0826               	movf	si4703_write_regs@i,w
  3146  0E48  00A2               	movwf	??_si4703_write_regs
  3147  0E49  0722               	addwf	??_si4703_write_regs,w
  3148  0E4A  0727               	addwf	si4703_write_regs@r,w
  3149  0E4B  00A3               	movwf	??_si4703_write_regs+1
  3150  0E4C  0823               	movf	??_si4703_write_regs+1,w
  3151  0E4D  0084               	movwf	4
  3152  0E4E  1383               	bcf	3,7	;select IRP bank0
  3153  0E4F  0800               	movf	0,w
  3154  0E50  00A4               	movwf	??_si4703_write_regs+2
  3155  0E51  0A84               	incf	4,f
  3156  0E52  0800               	movf	0,w
  3157  0E53  00A5               	movwf	??_si4703_write_regs+3
  3158  0E54  0825               	movf	??_si4703_write_regs+3,w
  3159  0E55  120A  158A  22C6  120A  158A  	fcall	_i2c_send_data
  3160                           
  3161                           ;si4703.c: 172: i2c_read_ack();
  3162  0E5A  120A  158A  2232  120A  158A  	fcall	_i2c_read_ack
  3163                           
  3164                           ;si4703.c: 173: i2c_send_data( *(r + i) & 0x00FF );
  3165  0E5F  1283               	bcf	3,5	;RP0=0, select bank0
  3166  0E60  1303               	bcf	3,6	;RP1=0, select bank0
  3167  0E61  0826               	movf	si4703_write_regs@i,w
  3168  0E62  00A2               	movwf	??_si4703_write_regs
  3169  0E63  0722               	addwf	??_si4703_write_regs,w
  3170  0E64  0727               	addwf	si4703_write_regs@r,w
  3171  0E65  00A3               	movwf	??_si4703_write_regs+1
  3172  0E66  0823               	movf	??_si4703_write_regs+1,w
  3173  0E67  0084               	movwf	4
  3174  0E68  1383               	bcf	3,7	;select IRP bank0
  3175  0E69  0800               	movf	0,w
  3176  0E6A  120A  158A  22C6  120A  158A  	fcall	_i2c_send_data
  3177                           
  3178                           ;si4703.c: 174: i2c_read_ack();
  3179  0E6F  120A  158A  2232  120A  158A  	fcall	_i2c_read_ack
  3180  0E74  3001               	movlw	1
  3181  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  3182  0E76  1303               	bcf	3,6	;RP1=0, select bank0
  3183  0E77  00A2               	movwf	??_si4703_write_regs
  3184  0E78  0822               	movf	??_si4703_write_regs,w
  3185  0E79  07A6               	addwf	si4703_write_regs@i,f
  3186  0E7A  3008               	movlw	8
  3187  0E7B  0226               	subwf	si4703_write_regs@i,w
  3188  0E7C  1C03               	skipc
  3189  0E7D  2E47               	goto	l3053
  3190  0E7E                     l3063:	
  3191                           
  3192                           ;si4703.c: 175: }
  3193                           ;si4703.c: 177: i2c_stop();
  3194  0E7E  120A  158A  23F1   	fcall	_i2c_stop
  3195                           
  3196                           ;si4703.c: 178: (GIE = 1);
  3197  0E81  178B               	bsf	11,7	;volatile
  3198  0E82  0008               	return
  3199  0E83                     __end_of_si4703_write_regs:	
  3200                           
  3201                           	psect	text11
  3202  0EF1                     __ptext11:	
  3203 ;; *************** function _si4703_read_regs *****************
  3204 ;; Defined at:
  3205 ;;		line 119 in file "si4703.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;  r               1    wreg     PTR unsigned int 
  3208 ;;		 -> si4703_regs(32), 
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;  r               1   41[BANK0 ] PTR unsigned int 
  3211 ;;		 -> si4703_regs(32), 
  3212 ;;  buff           32    7[BANK0 ] unsigned char [32]
  3213 ;;  i               1   42[BANK0 ] unsigned char 
  3214 ;;  x               1   40[BANK0 ] unsigned char 
  3215 ;;  tmp             1   39[BANK0 ] unsigned char 
  3216 ;; Return value:  Size  Location     Type
  3217 ;;		None               void
  3218 ;; Registers used:
  3219 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3225 ;;      Params:         0       0       0       0       0
  3226 ;;      Locals:         0      36       0       0       0
  3227 ;;      Temps:          0       5       0       0       0
  3228 ;;      Totals:         0      41       0       0       0
  3229 ;;Total ram usage:       41 bytes
  3230 ;; Hardware stack levels used:    1
  3231 ;; Hardware stack levels required when called:    4
  3232 ;; This function calls:
  3233 ;;		_i2c_read_ack
  3234 ;;		_i2c_read_data
  3235 ;;		_i2c_send_ack
  3236 ;;		_i2c_send_controlbyte
  3237 ;;		_i2c_send_nack
  3238 ;;		_i2c_start
  3239 ;;		_i2c_stop
  3240 ;; This function is called by:
  3241 ;;		_si4703_init
  3242 ;;		_si4703_tune
  3243 ;;		_si4703_set_volume
  3244 ;;		_si4703_seek
  3245 ;;		_si4703_volume_up
  3246 ;;		_si4703_volume_down
  3247 ;;		_si4703_mute
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           
  3252                           ;psect for function _si4703_read_regs
  3253  0EF1                     _si4703_read_regs:	
  3254                           
  3255                           ;incstack = 0
  3256                           ; Regs used in _si4703_read_regs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3257                           ;si4703_read_regs@r stored from wreg
  3258  0EF1  1283               	bcf	3,5	;RP0=0, select bank0
  3259  0EF2  1303               	bcf	3,6	;RP1=0, select bank0
  3260  0EF3  00C9               	movwf	si4703_read_regs@r
  3261                           
  3262                           ;si4703.c: 121: uint8_t i = 0, tmp = 1, buff[32];
  3263  0EF4  01CA               	clrf	si4703_read_regs@i
  3264  0EF5  01C7               	clrf	si4703_read_regs@tmp
  3265  0EF6  0AC7               	incf	si4703_read_regs@tmp,f
  3266                           
  3267                           ;si4703.c: 124: (GIE = 0);
  3268  0EF7  138B               	bcf	11,7	;volatile
  3269                           
  3270                           ;si4703.c: 125: i2c_start();
  3271  0EF8  120A  158A  22DE  120A  158A  	fcall	_i2c_start
  3272                           
  3273                           ;si4703.c: 127: i2c_send_controlbyte(0x10, 1);
  3274  0EFD  01F5               	clrf	i2c_send_controlbyte@rw_bit
  3275  0EFE  0AF5               	incf	i2c_send_controlbyte@rw_bit,f
  3276  0EFF  3010               	movlw	16
  3277  0F00  120A  158A  22F6  120A  158A  	fcall	_i2c_send_controlbyte
  3278                           
  3279                           ;si4703.c: 128: i2c_read_ack();
  3280  0F05  120A  158A  2232  120A  158A  	fcall	_i2c_read_ack
  3281                           
  3282                           ;si4703.c: 130: for(i=0;i<32;i++){
  3283  0F0A  1283               	bcf	3,5	;RP0=0, select bank0
  3284  0F0B  1303               	bcf	3,6	;RP1=0, select bank0
  3285  0F0C  01CA               	clrf	si4703_read_regs@i
  3286  0F0D  3020               	movlw	32
  3287  0F0E  024A               	subwf	si4703_read_regs@i,w
  3288  0F0F  1803               	btfsc	3,0
  3289  0F10  2F38               	goto	l3021
  3290  0F11                     l3009:	
  3291                           
  3292                           ;si4703.c: 131: buff[i] = i2c_read_data();
  3293  0F11  120A  158A  23AF  120A  158A  	fcall	_i2c_read_data
  3294  0F16  1283               	bcf	3,5	;RP0=0, select bank0
  3295  0F17  1303               	bcf	3,6	;RP1=0, select bank0
  3296  0F18  00A2               	movwf	??_si4703_read_regs
  3297  0F19  084A               	movf	si4703_read_regs@i,w
  3298  0F1A  3E27               	addlw	(low (si4703_read_regs@buff| 0))& (0+255)
  3299  0F1B  0084               	movwf	4
  3300  0F1C  0822               	movf	??_si4703_read_regs,w
  3301  0F1D  1383               	bcf	3,7	;select IRP bank0
  3302  0F1E  0080               	movwf	0
  3303                           
  3304                           ;si4703.c: 132: if(i < 31)
  3305  0F1F  301F               	movlw	31
  3306  0F20  024A               	subwf	si4703_read_regs@i,w
  3307  0F21  1803               	skipnc
  3308  0F22  2F29               	goto	l3015
  3309                           
  3310                           ;si4703.c: 133: i2c_send_ack();
  3311  0F23  120A  158A  230F  120A  158A  	fcall	_i2c_send_ack
  3312  0F28  2F2E               	goto	l3017
  3313  0F29                     l3015:	
  3314                           
  3315                           ;si4703.c: 134: else
  3316                           ;si4703.c: 135: i2c_send_nack();
  3317  0F29  120A  158A  2328  120A  158A  	fcall	_i2c_send_nack
  3318  0F2E                     l3017:	
  3319  0F2E  3001               	movlw	1
  3320  0F2F  1283               	bcf	3,5	;RP0=0, select bank0
  3321  0F30  1303               	bcf	3,6	;RP1=0, select bank0
  3322  0F31  00A2               	movwf	??_si4703_read_regs
  3323  0F32  0822               	movf	??_si4703_read_regs,w
  3324  0F33  07CA               	addwf	si4703_read_regs@i,f
  3325  0F34  3020               	movlw	32
  3326  0F35  024A               	subwf	si4703_read_regs@i,w
  3327  0F36  1C03               	skipc
  3328  0F37  2F11               	goto	l3009
  3329  0F38                     l3021:	
  3330                           
  3331                           ;si4703.c: 136: }
  3332                           ;si4703.c: 138: i2c_stop();
  3333  0F38  120A  158A  23F1  120A  158A  	fcall	_i2c_stop
  3334                           
  3335                           ;si4703.c: 140: (GIE = 1);
  3336  0F3D  178B               	bsf	11,7	;volatile
  3337                           
  3338                           ;si4703.c: 144: uint8_t x = 0xA;
  3339  0F3E  300A               	movlw	10
  3340  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  3341  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  3342  0F41  00A2               	movwf	??_si4703_read_regs
  3343  0F42  0822               	movf	??_si4703_read_regs,w
  3344  0F43  00C8               	movwf	si4703_read_regs@x
  3345                           
  3346                           ;si4703.c: 145: for(i=0;i<16;i++){
  3347  0F44  01CA               	clrf	si4703_read_regs@i
  3348  0F45                     L1:	
  3349  0F45  3010               	movlw	16
  3350  0F46  024A               	subwf	si4703_read_regs@i,w
  3351  0F47  1803               	btfsc	3,0
  3352  0F48  0008               	return
  3353                           
  3354                           ;si4703.c: 147: *(r + x) = (uint16_t)buff[i * 2] << 8 | buff[(i * 2) + 1];
  3355  0F49  1403               	setc
  3356  0F4A  0D4A               	rlf	si4703_read_regs@i,w
  3357  0F4B  3E27               	addlw	(low (si4703_read_regs@buff| 0))& (0+255)
  3358  0F4C  0084               	movwf	4
  3359  0F4D  1383               	bcf	3,7	;select IRP bank0
  3360  0F4E  0800               	movf	0,w
  3361  0F4F  00A2               	movwf	??_si4703_read_regs
  3362  0F50  084A               	movf	si4703_read_regs@i,w
  3363  0F51  00A3               	movwf	??_si4703_read_regs+1
  3364  0F52  0723               	addwf	??_si4703_read_regs+1,w
  3365  0F53  3E27               	addlw	(low (si4703_read_regs@buff| 0))& (0+255)
  3366  0F54  0084               	movwf	4
  3367  0F55  0800               	movf	0,w
  3368  0F56  00A4               	movwf	??_si4703_read_regs+2
  3369  0F57  0848               	movf	si4703_read_regs@x,w
  3370  0F58  00A5               	movwf	??_si4703_read_regs+3
  3371  0F59  0725               	addwf	??_si4703_read_regs+3,w
  3372  0F5A  0749               	addwf	si4703_read_regs@r,w
  3373  0F5B  00A6               	movwf	??_si4703_read_regs+4
  3374  0F5C  0826               	movf	??_si4703_read_regs+4,w
  3375  0F5D  0084               	movwf	4
  3376  0F5E  0822               	movf	??_si4703_read_regs,w
  3377  0F5F  0080               	movwf	0
  3378  0F60  0A84               	incf	4,f
  3379  0F61  0824               	movf	??_si4703_read_regs+2,w
  3380  0F62  0080               	movwf	0
  3381                           
  3382                           ;si4703.c: 149: if( x == 0xF ){
  3383  0F63  300F               	movlw	15
  3384  0F64  0648               	xorwf	si4703_read_regs@x,w
  3385  0F65  1D03               	btfss	3,2
  3386  0F66  2F69               	goto	l3039
  3387                           
  3388                           ;si4703.c: 150: x = 0;
  3389  0F67  01C8               	clrf	si4703_read_regs@x
  3390                           
  3391                           ;si4703.c: 151: }else{
  3392  0F68  2F6D               	goto	l285
  3393  0F69                     l3039:	
  3394                           
  3395                           ;si4703.c: 152: x++;
  3396  0F69  3001               	movlw	1
  3397  0F6A  00A2               	movwf	??_si4703_read_regs
  3398  0F6B  0822               	movf	??_si4703_read_regs,w
  3399  0F6C  07C8               	addwf	si4703_read_regs@x,f
  3400  0F6D                     l285:	
  3401  0F6D  3001               	movlw	1
  3402  0F6E  00A2               	movwf	??_si4703_read_regs
  3403  0F6F  0822               	movf	??_si4703_read_regs,w
  3404  0F70  07CA               	addwf	si4703_read_regs@i,f
  3405  0F71  2F45               	goto	L1
  3406  0F72                     __end_of_si4703_read_regs:	
  3407                           
  3408                           	psect	text12
  3409  0B5B                     __ptext12:	
  3410 ;; *************** function _i2c_init *****************
  3411 ;; Defined at:
  3412 ;;		line 9 in file "i2c.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;		None               void
  3419 ;; Registers used:
  3420 ;;		wreg
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3426 ;;      Params:         0       0       0       0       0
  3427 ;;      Locals:         0       0       0       0       0
  3428 ;;      Temps:          0       2       0       0       0
  3429 ;;      Totals:         0       2       0       0       0
  3430 ;;Total ram usage:        2 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; Hardware stack levels required when called:    2
  3433 ;; This function calls:
  3434 ;;		Nothing
  3435 ;; This function is called by:
  3436 ;;		_si4703_init
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           
  3441                           ;psect for function _i2c_init
  3442  0B5B                     _i2c_init:	
  3443                           
  3444                           ;i2c.c: 12: TRISCbits.TRISC3 = 1;
  3445                           
  3446                           ;incstack = 0
  3447                           ; Regs used in _i2c_init: [wreg]
  3448  0B5B  1683               	bsf	3,5	;RP0=1, select bank1
  3449  0B5C  1303               	bcf	3,6	;RP1=0, select bank1
  3450  0B5D  1587               	bsf	7,3	;volatile
  3451                           
  3452                           ;i2c.c: 13: TRISCbits.TRISC4 = 1;
  3453  0B5E  1607               	bsf	7,4	;volatile
  3454                           
  3455                           ;i2c.c: 16: SSPCON = 0b00101000;
  3456  0B5F  3028               	movlw	40
  3457  0B60  1283               	bcf	3,5	;RP0=0, select bank0
  3458  0B61  1303               	bcf	3,6	;RP1=0, select bank0
  3459  0B62  0094               	movwf	20	;volatile
  3460                           
  3461                           ;i2c.c: 18: SSPSTAT = 0b10000000;
  3462  0B63  3080               	movlw	128
  3463  0B64  1683               	bsf	3,5	;RP0=1, select bank1
  3464  0B65  1303               	bcf	3,6	;RP1=0, select bank1
  3465  0B66  0094               	movwf	20	;volatile
  3466                           
  3467                           ;i2c.c: 20: SSPADD = (20000 / (4 * 100)) - 1;
  3468  0B67  3031               	movlw	49
  3469  0B68  0093               	movwf	19	;volatile
  3470                           
  3471                           ;i2c.c: 22: _delay((unsigned long)((10)*(20000000/4000.0)));
  3472  0B69  3041               	movlw	65
  3473  0B6A  1283               	bcf	3,5	;RP0=0, select bank0
  3474  0B6B  1303               	bcf	3,6	;RP1=0, select bank0
  3475  0B6C  00A1               	movwf	??_i2c_init+1
  3476  0B6D  30EE               	movlw	238
  3477  0B6E  00A0               	movwf	??_i2c_init
  3478  0B6F                     u4187:	
  3479  0B6F  0BA0               	decfsz	??_i2c_init,f
  3480  0B70  2B6F               	goto	u4187
  3481  0B71  0BA1               	decfsz	??_i2c_init+1,f
  3482  0B72  2B6F               	goto	u4187
  3483  0B73  0000               	nop
  3484  0B74  0008               	return
  3485  0B75                     __end_of_i2c_init:	
  3486                           
  3487                           	psect	text13
  3488  0D07                     __ptext13:	
  3489 ;; *************** function _si4703_getrssi *****************
  3490 ;; Defined at:
  3491 ;;		line 240 in file "si4703.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;		None
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;  buff            2    5[BANK0 ] unsigned char [2]
  3496 ;; Return value:  Size  Location     Type
  3497 ;;                  2    2[BANK0 ] unsigned int 
  3498 ;; Registers used:
  3499 ;;		wreg, status,2, status,0, pclath, cstack
  3500 ;; Tracked objects:
  3501 ;;		On entry : 0/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3505 ;;      Params:         0       2       0       0       0
  3506 ;;      Locals:         0       2       0       0       0
  3507 ;;      Temps:          0       1       0       0       0
  3508 ;;      Totals:         0       5       0       0       0
  3509 ;;Total ram usage:        5 bytes
  3510 ;; Hardware stack levels used:    1
  3511 ;; Hardware stack levels required when called:    4
  3512 ;; This function calls:
  3513 ;;		_i2c_read_ack
  3514 ;;		_i2c_read_data
  3515 ;;		_i2c_send_ack
  3516 ;;		_i2c_send_controlbyte
  3517 ;;		_i2c_send_nack
  3518 ;;		_i2c_start
  3519 ;;		_i2c_stop
  3520 ;; This function is called by:
  3521 ;;		_main
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           
  3526                           ;psect for function _si4703_getrssi
  3527  0D07                     _si4703_getrssi:	
  3528                           
  3529                           ;si4703.c: 242: uint8_t buff[2];
  3530                           ;si4703.c: 244: (GIE = 0);
  3531                           
  3532                           ;incstack = 0
  3533                           ; Regs used in _si4703_getrssi: [wreg+status,2+status,0+pclath+cstack]
  3534  0D07  138B               	bcf	11,7	;volatile
  3535                           
  3536                           ;si4703.c: 245: i2c_start();
  3537  0D08  120A  158A  22DE  120A  158A  	fcall	_i2c_start
  3538                           
  3539                           ;si4703.c: 247: i2c_send_controlbyte(0x10, 1);
  3540  0D0D  01F5               	clrf	i2c_send_controlbyte@rw_bit
  3541  0D0E  0AF5               	incf	i2c_send_controlbyte@rw_bit,f
  3542  0D0F  3010               	movlw	16
  3543  0D10  120A  158A  22F6  120A  158A  	fcall	_i2c_send_controlbyte
  3544                           
  3545                           ;si4703.c: 248: i2c_read_ack();
  3546  0D15  120A  158A  2232  120A  158A  	fcall	_i2c_read_ack
  3547                           
  3548                           ;si4703.c: 250: buff[0] = i2c_read_data();
  3549  0D1A  120A  158A  23AF  120A  158A  	fcall	_i2c_read_data
  3550  0D1F  1283               	bcf	3,5	;RP0=0, select bank0
  3551  0D20  1303               	bcf	3,6	;RP1=0, select bank0
  3552  0D21  00A4               	movwf	??_si4703_getrssi
  3553  0D22  0824               	movf	??_si4703_getrssi,w
  3554  0D23  00A5               	movwf	si4703_getrssi@buff
  3555                           
  3556                           ;si4703.c: 251: i2c_send_ack();
  3557  0D24  120A  158A  230F  120A  158A  	fcall	_i2c_send_ack
  3558                           
  3559                           ;si4703.c: 253: buff[1] = i2c_read_data();
  3560  0D29  120A  158A  23AF  120A  158A  	fcall	_i2c_read_data
  3561  0D2E  1283               	bcf	3,5	;RP0=0, select bank0
  3562  0D2F  1303               	bcf	3,6	;RP1=0, select bank0
  3563  0D30  00A4               	movwf	??_si4703_getrssi
  3564  0D31  0824               	movf	??_si4703_getrssi,w
  3565  0D32  00A6               	movwf	si4703_getrssi@buff+1
  3566                           
  3567                           ;si4703.c: 254: i2c_send_nack();
  3568  0D33  120A  158A  2328  120A  158A  	fcall	_i2c_send_nack
  3569                           
  3570                           ;si4703.c: 257: i2c_stop();
  3571  0D38  120A  158A  23F1   	fcall	_i2c_stop
  3572                           
  3573                           ;si4703.c: 259: (GIE = 1);
  3574  0D3B  178B               	bsf	11,7	;volatile
  3575                           
  3576                           ;si4703.c: 261: return ((buff[0] << 8 | buff[1]) & 0x01FF);
  3577  0D3C  30FF               	movlw	255
  3578  0D3D  1283               	bcf	3,5	;RP0=0, select bank0
  3579  0D3E  1303               	bcf	3,6	;RP1=0, select bank0
  3580  0D3F  0526               	andwf	si4703_getrssi@buff+1,w
  3581  0D40  00A2               	movwf	?_si4703_getrssi
  3582  0D41  3001               	movlw	1
  3583  0D42  0525               	andwf	si4703_getrssi@buff,w
  3584  0D43  00A3               	movwf	?_si4703_getrssi+1
  3585  0D44  0008               	return
  3586  0D45                     __end_of_si4703_getrssi:	
  3587                           
  3588                           	psect	text14
  3589  0B28                     __ptext14:	
  3590 ;; *************** function _i2c_send_nack *****************
  3591 ;; Defined at:
  3592 ;;		line 139 in file "i2c.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;		None
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;		None
  3597 ;; Return value:  Size  Location     Type
  3598 ;;		None               void
  3599 ;; Registers used:
  3600 ;;		wreg, status,2, status,0
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3606 ;;      Params:         0       0       0       0       0
  3607 ;;      Locals:         0       0       0       0       0
  3608 ;;      Temps:          1       0       0       0       0
  3609 ;;      Totals:         1       0       0       0       0
  3610 ;;Total ram usage:        1 bytes
  3611 ;; Hardware stack levels used:    1
  3612 ;; Hardware stack levels required when called:    2
  3613 ;; This function calls:
  3614 ;;		Nothing
  3615 ;; This function is called by:
  3616 ;;		_si4703_read_regs
  3617 ;;		_si4703_getrssi
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           
  3622                           ;psect for function _i2c_send_nack
  3623  0B28                     _i2c_send_nack:	
  3624                           
  3625                           ;i2c.c: 141: PIR1bits.SSPIF = 0;
  3626                           
  3627                           ;incstack = 0
  3628                           ; Regs used in _i2c_send_nack: [wreg+status,2+status,0]
  3629  0B28  1283               	bcf	3,5	;RP0=0, select bank0
  3630  0B29  1303               	bcf	3,6	;RP1=0, select bank0
  3631  0B2A  118C               	bcf	12,3	;volatile
  3632                           
  3633                           ;i2c.c: 142: SSPCON2bits.ACKDT = 1;
  3634  0B2B  1683               	bsf	3,5	;RP0=1, select bank1
  3635  0B2C  1303               	bcf	3,6	;RP1=0, select bank1
  3636  0B2D  1691               	bsf	17,5	;volatile
  3637                           
  3638                           ;i2c.c: 143: SSPCON2bits.ACKEN = 1;
  3639  0B2E  1611               	bsf	17,4	;volatile
  3640                           
  3641                           ;i2c.c: 144: tries = 0;
  3642  0B2F  01F8               	clrf	_tries
  3643  0B30                     l178:	
  3644                           ;i2c.c: 145: while( !PIR1bits.SSPIF && tries++ < 50 ){
  3645                           
  3646  0B30  1283               	bcf	3,5	;RP0=0, select bank0
  3647  0B31  1303               	bcf	3,6	;RP1=0, select bank0
  3648  0B32  198C               	btfsc	12,3	;volatile
  3649  0B33  0008               	return
  3650  0B34  3001               	movlw	1
  3651  0B35  07F8               	addwf	_tries,f
  3652  0B36  30FF               	movlw	-1
  3653  0B37  0778               	addwf	_tries,w
  3654  0B38  00F5               	movwf	??_i2c_send_nack
  3655  0B39  3032               	movlw	50
  3656  0B3A  0275               	subwf	??_i2c_send_nack,w
  3657  0B3B  1803               	btfsc	3,0
  3658  0B3C  0008               	return
  3659                           
  3660                           ;i2c.c: 146: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3661  0B3D  2B3E               	nop2	;2 cycle nop
  3662  0B3E  2B3F               	nop2	;2 cycle nop
  3663  0B3F  0000               	nop
  3664  0B40  2B30               	goto	l178
  3665  0B41                     __end_of_i2c_send_nack:	
  3666                           ;i2c.c: 150: return;
  3667                           
  3668                           
  3669                           	psect	text15
  3670  0B0F                     __ptext15:	
  3671 ;; *************** function _i2c_send_ack *****************
  3672 ;; Defined at:
  3673 ;;		line 124 in file "i2c.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;		None
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;		None
  3678 ;; Return value:  Size  Location     Type
  3679 ;;		None               void
  3680 ;; Registers used:
  3681 ;;		wreg, status,2, status,0
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3687 ;;      Params:         0       0       0       0       0
  3688 ;;      Locals:         0       0       0       0       0
  3689 ;;      Temps:          1       0       0       0       0
  3690 ;;      Totals:         1       0       0       0       0
  3691 ;;Total ram usage:        1 bytes
  3692 ;; Hardware stack levels used:    1
  3693 ;; Hardware stack levels required when called:    2
  3694 ;; This function calls:
  3695 ;;		Nothing
  3696 ;; This function is called by:
  3697 ;;		_si4703_read_regs
  3698 ;;		_si4703_getrssi
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           
  3703                           ;psect for function _i2c_send_ack
  3704  0B0F                     _i2c_send_ack:	
  3705                           
  3706                           ;i2c.c: 126: PIR1bits.SSPIF = 0;
  3707                           
  3708                           ;incstack = 0
  3709                           ; Regs used in _i2c_send_ack: [wreg+status,2+status,0]
  3710  0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  3711  0B10  1303               	bcf	3,6	;RP1=0, select bank0
  3712  0B11  118C               	bcf	12,3	;volatile
  3713                           
  3714                           ;i2c.c: 127: SSPCON2bits.ACKDT = 0;
  3715  0B12  1683               	bsf	3,5	;RP0=1, select bank1
  3716  0B13  1303               	bcf	3,6	;RP1=0, select bank1
  3717  0B14  1291               	bcf	17,5	;volatile
  3718                           
  3719                           ;i2c.c: 128: SSPCON2bits.ACKEN = 1;
  3720  0B15  1611               	bsf	17,4	;volatile
  3721                           
  3722                           ;i2c.c: 129: tries = 0;
  3723  0B16  01F8               	clrf	_tries
  3724  0B17                     l169:	
  3725                           ;i2c.c: 130: while( !PIR1bits.SSPIF && tries++ < 50 ){
  3726                           
  3727  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  3728  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  3729  0B19  198C               	btfsc	12,3	;volatile
  3730  0B1A  0008               	return
  3731  0B1B  3001               	movlw	1
  3732  0B1C  07F8               	addwf	_tries,f
  3733  0B1D  30FF               	movlw	-1
  3734  0B1E  0778               	addwf	_tries,w
  3735  0B1F  00F5               	movwf	??_i2c_send_ack
  3736  0B20  3032               	movlw	50
  3737  0B21  0275               	subwf	??_i2c_send_ack,w
  3738  0B22  1803               	btfsc	3,0
  3739  0B23  0008               	return
  3740                           
  3741                           ;i2c.c: 131: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3742  0B24  2B25               	nop2	;2 cycle nop
  3743  0B25  2B26               	nop2	;2 cycle nop
  3744  0B26  0000               	nop
  3745  0B27  2B17               	goto	l169
  3746  0B28                     __end_of_i2c_send_ack:	
  3747                           ;i2c.c: 135: return;
  3748                           
  3749                           
  3750                           	psect	text16
  3751  0BAF                     __ptext16:	
  3752 ;; *************** function _i2c_read_data *****************
  3753 ;; Defined at:
  3754 ;;		line 89 in file "i2c.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;		None
  3757 ;; Auto vars:     Size  Location     Type
  3758 ;;		None
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  1    wreg      unsigned char 
  3761 ;; Registers used:
  3762 ;;		wreg, status,2, status,0
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3768 ;;      Params:         0       0       0       0       0
  3769 ;;      Locals:         0       0       0       0       0
  3770 ;;      Temps:          1       0       0       0       0
  3771 ;;      Totals:         1       0       0       0       0
  3772 ;;Total ram usage:        1 bytes
  3773 ;; Hardware stack levels used:    1
  3774 ;; Hardware stack levels required when called:    2
  3775 ;; This function calls:
  3776 ;;		Nothing
  3777 ;; This function is called by:
  3778 ;;		_si4703_read_regs
  3779 ;;		_si4703_getrssi
  3780 ;; This function uses a non-reentrant model
  3781 ;;
  3782                           
  3783                           
  3784                           ;psect for function _i2c_read_data
  3785  0BAF                     _i2c_read_data:	
  3786                           
  3787                           ;i2c.c: 93: PIR1bits.SSPIF = 0;
  3788                           
  3789                           ;incstack = 0
  3790                           ; Regs used in _i2c_read_data: [wreg+status,2+status,0]
  3791  0BAF  1283               	bcf	3,5	;RP0=0, select bank0
  3792  0BB0  1303               	bcf	3,6	;RP1=0, select bank0
  3793  0BB1  118C               	bcf	12,3	;volatile
  3794                           
  3795                           ;i2c.c: 94: SSPCON2bits.RCEN = 1;
  3796  0BB2  1683               	bsf	3,5	;RP0=1, select bank1
  3797  0BB3  1303               	bcf	3,6	;RP1=0, select bank1
  3798  0BB4  1591               	bsf	17,3	;volatile
  3799                           
  3800                           ;i2c.c: 95: tries = 0;
  3801  0BB5  01F8               	clrf	_tries
  3802                           
  3803                           ;i2c.c: 96: while( !PIR1bits.SSPIF && tries++ < 50 ){
  3804  0BB6  2BBA               	goto	l151
  3805  0BB7                     l152:	
  3806                           
  3807                           ;i2c.c: 97: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3808  0BB7  2BB8               	nop2	;2 cycle nop
  3809  0BB8  2BB9               	nop2	;2 cycle nop
  3810  0BB9  0000               	nop
  3811  0BBA                     l151:	
  3812  0BBA  1283               	bcf	3,5	;RP0=0, select bank0
  3813  0BBB  1303               	bcf	3,6	;RP1=0, select bank0
  3814  0BBC  198C               	btfsc	12,3	;volatile
  3815  0BBD  2BC7               	goto	l2957
  3816  0BBE  3001               	movlw	1
  3817  0BBF  07F8               	addwf	_tries,f
  3818  0BC0  30FF               	movlw	-1
  3819  0BC1  0778               	addwf	_tries,w
  3820  0BC2  00F5               	movwf	??_i2c_read_data
  3821  0BC3  3032               	movlw	50
  3822  0BC4  0275               	subwf	??_i2c_read_data,w
  3823  0BC5  1C03               	skipc
  3824  0BC6  2BB7               	goto	l152
  3825  0BC7                     l2957:	
  3826                           
  3827                           ;i2c.c: 98: }
  3828                           ;i2c.c: 100: if( tries == 50 ){
  3829  0BC7  3032               	movlw	50
  3830  0BC8  0678               	xorwf	_tries,w
  3831  0BC9  1D03               	btfss	3,2
  3832  0BCA  2BCD               	goto	l2963
  3833                           
  3834                           ;i2c.c: 102: return 0;
  3835  0BCB  3000               	movlw	0
  3836  0BCC  0008               	return
  3837  0BCD                     l2963:	
  3838                           
  3839                           ;i2c.c: 103: }
  3840                           ;i2c.c: 105: return SSPBUF;
  3841  0BCD  0813               	movf	19,w	;volatile
  3842  0BCE  0008               	return
  3843  0BCF                     __end_of_i2c_read_data:	
  3844                           
  3845                           	psect	text17
  3846  0A54                     __ptext17:	
  3847 ;; *************** function _si4703_getchannel *****************
  3848 ;; Defined at:
  3849 ;;		line 264 in file "si4703.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;		None
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;		None
  3854 ;; Return value:  Size  Location     Type
  3855 ;;                  2    0[BANK0 ] unsigned int 
  3856 ;; Registers used:
  3857 ;;		wreg
  3858 ;; Tracked objects:
  3859 ;;		On entry : 0/0
  3860 ;;		On exit  : 0/0
  3861 ;;		Unchanged: 0/0
  3862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3863 ;;      Params:         0       2       0       0       0
  3864 ;;      Locals:         0       0       0       0       0
  3865 ;;      Temps:          0       0       0       0       0
  3866 ;;      Totals:         0       2       0       0       0
  3867 ;;Total ram usage:        2 bytes
  3868 ;; Hardware stack levels used:    1
  3869 ;; Hardware stack levels required when called:    2
  3870 ;; This function calls:
  3871 ;;		Nothing
  3872 ;; This function is called by:
  3873 ;;		_main
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           
  3878                           ;psect for function _si4703_getchannel
  3879  0A54                     _si4703_getchannel:	
  3880                           
  3881                           ;si4703.c: 266: return (si4703_regs[0xB] & 0x03FF);
  3882                           
  3883                           ;incstack = 0
  3884                           ; Regs used in _si4703_getchannel: [wreg]
  3885  0A54  30FF               	movlw	255
  3886  0A55  1683               	bsf	3,5	;RP0=1, select bank1
  3887  0A56  1303               	bcf	3,6	;RP1=0, select bank1
  3888  0A57  055D               	andwf	(_si4703_regs^(0+128)+22),w
  3889  0A58  1283               	bcf	3,5	;RP0=0, select bank0
  3890  0A59  1303               	bcf	3,6	;RP1=0, select bank0
  3891  0A5A  00A0               	movwf	?_si4703_getchannel
  3892  0A5B  3003               	movlw	3
  3893  0A5C  1683               	bsf	3,5	;RP0=1, select bank1
  3894  0A5D  1303               	bcf	3,6	;RP1=0, select bank1
  3895  0A5E  055E               	andwf	((_si4703_regs+1)^(0+128)+22),w
  3896  0A5F  1283               	bcf	3,5	;RP0=0, select bank0
  3897  0A60  1303               	bcf	3,6	;RP1=0, select bank0
  3898  0A61  00A1               	movwf	?_si4703_getchannel+1
  3899  0A62  0008               	return
  3900  0A63                     __end_of_si4703_getchannel:	
  3901                           
  3902                           	psect	text18
  3903  0B41                     __ptext18:	
  3904 ;; *************** function _init *****************
  3905 ;; Defined at:
  3906 ;;		line 21 in file "main.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;		None
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;		None
  3911 ;; Return value:  Size  Location     Type
  3912 ;;		None               void
  3913 ;; Registers used:
  3914 ;;		status,2
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3920 ;;      Params:         0       0       0       0       0
  3921 ;;      Locals:         0       0       0       0       0
  3922 ;;      Temps:          0       0       0       0       0
  3923 ;;      Totals:         0       0       0       0       0
  3924 ;;Total ram usage:        0 bytes
  3925 ;; Hardware stack levels used:    1
  3926 ;; Hardware stack levels required when called:    2
  3927 ;; This function calls:
  3928 ;;		Nothing
  3929 ;; This function is called by:
  3930 ;;		_main
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           
  3935                           ;psect for function _init
  3936  0B41                     _init:	
  3937                           
  3938                           ;main.c: 24: ADCON0bits.ADON = 0;
  3939                           
  3940                           ;incstack = 0
  3941                           ; Regs used in _init: [status,2]
  3942  0B41  1283               	bcf	3,5	;RP0=0, select bank0
  3943  0B42  1303               	bcf	3,6	;RP1=0, select bank0
  3944  0B43  101F               	bcf	31,0	;volatile
  3945                           
  3946                           ;main.c: 27: TRISD = 0x00;
  3947  0B44  1683               	bsf	3,5	;RP0=1, select bank1
  3948  0B45  1303               	bcf	3,6	;RP1=0, select bank1
  3949  0B46  0188               	clrf	8	;volatile
  3950                           
  3951                           ;main.c: 28: PORTD = 0x00;
  3952  0B47  1283               	bcf	3,5	;RP0=0, select bank0
  3953  0B48  1303               	bcf	3,6	;RP1=0, select bank0
  3954  0B49  0188               	clrf	8	;volatile
  3955                           
  3956                           ;main.c: 30: TRISBbits.TRISB0 = 1;
  3957  0B4A  1683               	bsf	3,5	;RP0=1, select bank1
  3958  0B4B  1303               	bcf	3,6	;RP1=0, select bank1
  3959  0B4C  1406               	bsf	6,0	;volatile
  3960                           
  3961                           ;main.c: 31: TRISBbits.TRISB1 = 1;
  3962  0B4D  1486               	bsf	6,1	;volatile
  3963                           
  3964                           ;main.c: 32: TRISBbits.TRISB2 = 0;
  3965  0B4E  1106               	bcf	6,2	;volatile
  3966                           
  3967                           ;main.c: 34: PORTBbits.RB2 = 0;
  3968  0B4F  1283               	bcf	3,5	;RP0=0, select bank0
  3969  0B50  1303               	bcf	3,6	;RP1=0, select bank0
  3970  0B51  1106               	bcf	6,2	;volatile
  3971                           
  3972                           ;main.c: 37: T1CONbits.TMR1ON = 1;
  3973  0B52  1410               	bsf	16,0	;volatile
  3974                           
  3975                           ;main.c: 38: T1CONbits.T1CKPS0 = 1;
  3976  0B53  1610               	bsf	16,4	;volatile
  3977                           
  3978                           ;main.c: 39: T1CONbits.T1CKPS1 = 1;
  3979  0B54  1690               	bsf	16,5	;volatile
  3980                           
  3981                           ;main.c: 41: PIE1bits.TMR1IE = 1;
  3982  0B55  1683               	bsf	3,5	;RP0=1, select bank1
  3983  0B56  1303               	bcf	3,6	;RP1=0, select bank1
  3984  0B57  140C               	bsf	12,0	;volatile
  3985                           
  3986                           ;main.c: 42: INTCONbits.PEIE = 1;
  3987  0B58  170B               	bsf	11,6	;volatile
  3988                           
  3989                           ;main.c: 43: INTCONbits.GIE = 1;
  3990  0B59  178B               	bsf	11,7	;volatile
  3991  0B5A  0008               	return
  3992  0B5B                     __end_of_init:	
  3993                           
  3994                           	psect	text19
  3995  0A73                     __ptext19:	
  3996 ;; *************** function _hd44780_puts_at *****************
  3997 ;; Defined at:
  3998 ;;		line 272 in file "hd44780i2c.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  ch              1    wreg     PTR unsigned char 
  4001 ;;		 -> main@buff(16), 
  4002 ;;  loc             1   11[BANK0 ] unsigned char 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;  ch              1   12[BANK0 ] PTR unsigned char 
  4005 ;;		 -> main@buff(16), 
  4006 ;; Return value:  Size  Location     Type
  4007 ;;		None               void
  4008 ;; Registers used:
  4009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4015 ;;      Params:         0       1       0       0       0
  4016 ;;      Locals:         0       1       0       0       0
  4017 ;;      Temps:          0       0       0       0       0
  4018 ;;      Totals:         0       2       0       0       0
  4019 ;;Total ram usage:        2 bytes
  4020 ;; Hardware stack levels used:    1
  4021 ;; Hardware stack levels required when called:    6
  4022 ;; This function calls:
  4023 ;;		_hd44780_puts
  4024 ;;		_hd44780_write
  4025 ;; This function is called by:
  4026 ;;		_main
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           
  4031                           ;psect for function _hd44780_puts_at
  4032  0A73                     _hd44780_puts_at:	
  4033                           
  4034                           ;incstack = 0
  4035                           ; Regs used in _hd44780_puts_at: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4036                           ;hd44780_puts_at@ch stored from wreg
  4037  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  4038  0A74  1303               	bcf	3,6	;RP1=0, select bank0
  4039  0A75  00AC               	movwf	hd44780_puts_at@ch
  4040                           
  4041                           ;hd44780i2c.c: 274: hd44780_write( 0x80 | loc, 0 );
  4042  0A76  01A2               	clrf	hd44780_write@rs_flag
  4043  0A77  082B               	movf	hd44780_puts_at@loc,w
  4044  0A78  3880               	iorlw	128
  4045  0A79  120A  118A  272D  120A  158A  	fcall	_hd44780_write
  4046                           
  4047                           ;hd44780i2c.c: 275: hd44780_puts(ch);
  4048  0A7E  1283               	bcf	3,5	;RP0=0, select bank0
  4049  0A7F  1303               	bcf	3,6	;RP1=0, select bank0
  4050  0A80  082C               	movf	hd44780_puts_at@ch,w
  4051  0A81  120A  158A  2469   	fcall	_hd44780_puts
  4052  0A84  0008               	return
  4053  0A85                     __end_of_hd44780_puts_at:	
  4054                           
  4055                           	psect	text20
  4056  0C69                     __ptext20:	
  4057 ;; *************** function _hd44780_puts *****************
  4058 ;; Defined at:
  4059 ;;		line 258 in file "hd44780i2c.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;  ch              1    wreg     PTR unsigned char 
  4062 ;;		 -> main@buff(16), 
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;  ch              1   10[BANK0 ] PTR unsigned char 
  4065 ;;		 -> main@buff(16), 
  4066 ;; Return value:  Size  Location     Type
  4067 ;;		None               void
  4068 ;; Registers used:
  4069 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4075 ;;      Params:         0       0       0       0       0
  4076 ;;      Locals:         0       1       0       0       0
  4077 ;;      Temps:          0       1       0       0       0
  4078 ;;      Totals:         0       2       0       0       0
  4079 ;;Total ram usage:        2 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; Hardware stack levels required when called:    5
  4082 ;; This function calls:
  4083 ;;		_hd44780_write
  4084 ;; This function is called by:
  4085 ;;		_hd44780_puts_at
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           
  4090                           ;psect for function _hd44780_puts
  4091  0C69                     _hd44780_puts:	
  4092                           
  4093                           ;incstack = 0
  4094                           ; Regs used in _hd44780_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4095                           ;hd44780_puts@ch stored from wreg
  4096  0C69  1283               	bcf	3,5	;RP0=0, select bank0
  4097  0C6A  1303               	bcf	3,6	;RP1=0, select bank0
  4098  0C6B  00AA               	movwf	hd44780_puts@ch
  4099  0C6C                     l3151:	
  4100                           ;hd44780i2c.c: 260: while( *ch != '\0' ){
  4101                           
  4102  0C6C  082A               	movf	hd44780_puts@ch,w
  4103  0C6D  0084               	movwf	4
  4104  0C6E  1383               	bcf	3,7	;select IRP bank0
  4105  0C6F  0800               	movf	0,w
  4106  0C70  1903               	btfsc	3,2
  4107  0C71  0008               	return
  4108                           
  4109                           ;hd44780i2c.c: 261: if( *ch == '\n' ){
  4110  0C72  082A               	movf	hd44780_puts@ch,w
  4111  0C73  0084               	movwf	4
  4112  0C74  300A               	movlw	10
  4113  0C75  1383               	bcf	3,7	;select IRP bank0
  4114  0C76  0600               	xorwf	0,w
  4115  0C77  1D03               	btfss	3,2
  4116  0C78  2C7C               	goto	l3143
  4117                           
  4118                           ;hd44780i2c.c: 262: hd44780_write( 0xC0, 0 );
  4119  0C79  01A2               	clrf	hd44780_write@rs_flag
  4120  0C7A  30C0               	movlw	192
  4121  0C7B  2C90               	goto	L2
  4122  0C7C                     l3143:	
  4123                           ;hd44780i2c.c: 263: }else if(*ch == '\r'){
  4124                           
  4125  0C7C  1283               	bcf	3,5	;RP0=0, select bank0
  4126  0C7D  1303               	bcf	3,6	;RP1=0, select bank0
  4127  0C7E  082A               	movf	hd44780_puts@ch,w
  4128  0C7F  0084               	movwf	4
  4129  0C80  300D               	movlw	13
  4130  0C81  1383               	bcf	3,7	;select IRP bank0
  4131  0C82  0600               	xorwf	0,w
  4132  0C83  1D03               	btfss	3,2
  4133  0C84  2C88               	goto	l3147
  4134                           
  4135                           ;hd44780i2c.c: 264: hd44780_write( 0x80, 0 );
  4136  0C85  01A2               	clrf	hd44780_write@rs_flag
  4137  0C86  3080               	movlw	128
  4138  0C87  2C90               	goto	L2
  4139  0C88                     l3147:	
  4140                           ;hd44780i2c.c: 265: }else{
  4141                           
  4142                           
  4143                           ;hd44780i2c.c: 266: hd44780_write( *ch, 1 );
  4144  0C88  1283               	bcf	3,5	;RP0=0, select bank0
  4145  0C89  1303               	bcf	3,6	;RP1=0, select bank0
  4146  0C8A  01A2               	clrf	hd44780_write@rs_flag
  4147  0C8B  0AA2               	incf	hd44780_write@rs_flag,f
  4148  0C8C  082A               	movf	hd44780_puts@ch,w
  4149  0C8D  0084               	movwf	4
  4150  0C8E  1383               	bcf	3,7	;select IRP bank0
  4151  0C8F  0800               	movf	0,w
  4152  0C90                     L2:	
  4153  0C90  120A  118A  272D  120A  158A  	fcall	_hd44780_write
  4154                           
  4155                           ;hd44780i2c.c: 267: }
  4156                           ;hd44780i2c.c: 268: ch++;
  4157  0C95  3001               	movlw	1
  4158  0C96  1283               	bcf	3,5	;RP0=0, select bank0
  4159  0C97  1303               	bcf	3,6	;RP1=0, select bank0
  4160  0C98  00A9               	movwf	??_hd44780_puts
  4161  0C99  0829               	movf	??_hd44780_puts,w
  4162  0C9A  07AA               	addwf	hd44780_puts@ch,f
  4163  0C9B  2C6C               	goto	l3151
  4164  0C9C                     __end_of_hd44780_puts:	
  4165                           
  4166                           	psect	text21
  4167  0A2D                     __ptext21:	
  4168 ;; *************** function _hd44780_lighton *****************
  4169 ;; Defined at:
  4170 ;;		line 283 in file "hd44780i2c.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;		None
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;		None
  4175 ;; Return value:  Size  Location     Type
  4176 ;;		None               void
  4177 ;; Registers used:
  4178 ;;		wreg
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4184 ;;      Params:         0       0       0       0       0
  4185 ;;      Locals:         0       0       0       0       0
  4186 ;;      Temps:          1       0       0       0       0
  4187 ;;      Totals:         1       0       0       0       0
  4188 ;;Total ram usage:        1 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:    2
  4191 ;; This function calls:
  4192 ;;		Nothing
  4193 ;; This function is called by:
  4194 ;;		_main
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           
  4199                           ;psect for function _hd44780_lighton
  4200  0A2D                     _hd44780_lighton:	
  4201                           
  4202                           ;hd44780i2c.c: 285: light_status = 0b10000000;
  4203                           
  4204                           ;incstack = 0
  4205                           ; Regs used in _hd44780_lighton: [wreg]
  4206  0A2D  3080               	movlw	128
  4207  0A2E  00F5               	movwf	??_hd44780_lighton
  4208  0A2F  0875               	movf	??_hd44780_lighton,w
  4209  0A30  00F7               	movwf	_light_status
  4210  0A31  0008               	return
  4211  0A32                     __end_of_hd44780_lighton:	
  4212                           
  4213                           	psect	text22
  4214  0236                     __ptext22:	
  4215 ;; *************** function _hd44780_init *****************
  4216 ;; Defined at:
  4217 ;;		line 16 in file "hd44780i2c.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;		None
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;  ack             1   11[BANK0 ] unsigned char 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;		None               void
  4224 ;; Registers used:
  4225 ;;		wreg, status,2, status,0, pclath, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4231 ;;      Params:         0       0       0       0       0
  4232 ;;      Locals:         0       1       0       0       0
  4233 ;;      Temps:          0       2       0       0       0
  4234 ;;      Totals:         0       3       0       0       0
  4235 ;;Total ram usage:        3 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; Hardware stack levels required when called:    5
  4238 ;; This function calls:
  4239 ;;		_hd44780_write
  4240 ;;		_i2c_read_ack
  4241 ;;		_i2c_send_controlbyte
  4242 ;;		_i2c_send_data
  4243 ;;		_i2c_start
  4244 ;;		_i2c_stop
  4245 ;; This function is called by:
  4246 ;;		_main
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250                           
  4251                           ;psect for function _hd44780_init
  4252  0236                     _hd44780_init:	
  4253                           
  4254                           ;hd44780i2c.c: 18: uint8_t ack = 1;
  4255                           
  4256                           ;incstack = 0
  4257                           ; Regs used in _hd44780_init: [wreg+status,2+status,0+pclath+cstack]
  4258  0236  1283               	bcf	3,5	;RP0=0, select bank0
  4259  0237  1303               	bcf	3,6	;RP1=0, select bank0
  4260  0238  01AB               	clrf	hd44780_init@ack
  4261  0239  0AAB               	incf	hd44780_init@ack,f
  4262                           
  4263                           ;hd44780i2c.c: 20: i2c_start();
  4264  023A  120A  158A  22DE  120A  118A  	fcall	_i2c_start
  4265                           
  4266                           ;hd44780i2c.c: 21: i2c_send_controlbyte(0x20, 0);
  4267  023F  01F5               	clrf	i2c_send_controlbyte@rw_bit
  4268  0240  3020               	movlw	32
  4269  0241  120A  158A  22F6  120A  118A  	fcall	_i2c_send_controlbyte
  4270                           
  4271                           ;hd44780i2c.c: 22: ack = i2c_read_ack();
  4272  0246  120A  158A  2232  120A  118A  	fcall	_i2c_read_ack
  4273  024B  1283               	bcf	3,5	;RP0=0, select bank0
  4274  024C  1303               	bcf	3,6	;RP1=0, select bank0
  4275  024D  00A9               	movwf	??_hd44780_init
  4276  024E  0829               	movf	??_hd44780_init,w
  4277  024F  00AB               	movwf	hd44780_init@ack
  4278                           
  4279                           ;hd44780i2c.c: 23: i2c_send_data( 0b0000000 );
  4280  0250  3000               	movlw	0
  4281  0251  120A  158A  22C6  120A  118A  	fcall	_i2c_send_data
  4282                           
  4283                           ;hd44780i2c.c: 24: i2c_read_ack();
  4284  0256  120A  158A  2232  120A  118A  	fcall	_i2c_read_ack
  4285                           
  4286                           ;hd44780i2c.c: 25: i2c_stop();
  4287  025B  120A  158A  23F1  120A  118A  	fcall	_i2c_stop
  4288                           
  4289                           ;hd44780i2c.c: 33: _delay((unsigned long)((20)*(20000000/4000.0)));
  4290  0260  3082               	movlw	130
  4291  0261  1283               	bcf	3,5	;RP0=0, select bank0
  4292  0262  1303               	bcf	3,6	;RP1=0, select bank0
  4293  0263  00AA               	movwf	??_hd44780_init+1
  4294  0264  30DD               	movlw	221
  4295  0265  00A9               	movwf	??_hd44780_init
  4296  0266                     u4197:	
  4297  0266  0BA9               	decfsz	??_hd44780_init,f
  4298  0267  2A66               	goto	u4197
  4299  0268  0BAA               	decfsz	??_hd44780_init+1,f
  4300  0269  2A66               	goto	u4197
  4301  026A  2A6B               	nop2
  4302                           
  4303                           ;hd44780i2c.c: 35: i2c_start();
  4304  026B  120A  158A  22DE  120A  118A  	fcall	_i2c_start
  4305                           
  4306                           ;hd44780i2c.c: 36: i2c_send_controlbyte(0x20, 0);
  4307  0270  01F5               	clrf	i2c_send_controlbyte@rw_bit
  4308  0271  3020               	movlw	32
  4309  0272  120A  158A  22F6  120A  118A  	fcall	_i2c_send_controlbyte
  4310                           
  4311                           ;hd44780i2c.c: 37: ack = i2c_read_ack();
  4312  0277  120A  158A  2232  120A  118A  	fcall	_i2c_read_ack
  4313  027C  1283               	bcf	3,5	;RP0=0, select bank0
  4314  027D  1303               	bcf	3,6	;RP1=0, select bank0
  4315  027E  00A9               	movwf	??_hd44780_init
  4316  027F  0829               	movf	??_hd44780_init,w
  4317  0280  00AB               	movwf	hd44780_init@ack
  4318                           
  4319                           ;hd44780i2c.c: 38: i2c_send_data( 0b00100011 );
  4320  0281  3023               	movlw	35
  4321  0282  120A  158A  22C6  120A  118A  	fcall	_i2c_send_data
  4322                           
  4323                           ;hd44780i2c.c: 39: i2c_read_ack();
  4324  0287  120A  158A  2232  120A  118A  	fcall	_i2c_read_ack
  4325                           
  4326                           ;hd44780i2c.c: 40: i2c_send_data( 0b00000011 );
  4327  028C  3003               	movlw	3
  4328  028D  120A  158A  22C6  120A  118A  	fcall	_i2c_send_data
  4329                           
  4330                           ;hd44780i2c.c: 41: i2c_read_ack();
  4331  0292  120A  158A  2232  120A  118A  	fcall	_i2c_read_ack
  4332                           
  4333                           ;hd44780i2c.c: 42: i2c_stop();
  4334  0297  120A  158A  23F1  120A  118A  	fcall	_i2c_stop
  4335                           
  4336                           ;hd44780i2c.c: 45: _delay((unsigned long)((5)*(20000000/4000.0)));
  4337  029C  3021               	movlw	33
  4338  029D  1283               	bcf	3,5	;RP0=0, select bank0
  4339  029E  1303               	bcf	3,6	;RP1=0, select bank0
  4340  029F  00AA               	movwf	??_hd44780_init+1
  4341  02A0  3076               	movlw	118
  4342  02A1  00A9               	movwf	??_hd44780_init
  4343  02A2                     u4207:	
  4344  02A2  0BA9               	decfsz	??_hd44780_init,f
  4345  02A3  2AA2               	goto	u4207
  4346  02A4  0BAA               	decfsz	??_hd44780_init+1,f
  4347  02A5  2AA2               	goto	u4207
  4348  02A6  0000               	nop
  4349                           
  4350                           ;hd44780i2c.c: 47: i2c_start();
  4351  02A7  120A  158A  22DE  120A  118A  	fcall	_i2c_start
  4352                           
  4353                           ;hd44780i2c.c: 48: i2c_send_controlbyte(0x20, 0);
  4354  02AC  01F5               	clrf	i2c_send_controlbyte@rw_bit
  4355  02AD  3020               	movlw	32
  4356  02AE  120A  158A  22F6  120A  118A  	fcall	_i2c_send_controlbyte
  4357                           
  4358                           ;hd44780i2c.c: 49: ack = i2c_read_ack();
  4359  02B3  120A  158A  2232  120A  118A  	fcall	_i2c_read_ack
  4360  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  4361  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  4362  02BA  00A9               	movwf	??_hd44780_init
  4363  02BB  0829               	movf	??_hd44780_init,w
  4364  02BC  00AB               	movwf	hd44780_init@ack
  4365                           
  4366                           ;hd44780i2c.c: 50: i2c_send_data( 0b00100011 );
  4367  02BD  3023               	movlw	35
  4368  02BE  120A  158A  22C6  120A  118A  	fcall	_i2c_send_data
  4369                           
  4370                           ;hd44780i2c.c: 51: i2c_read_ack();
  4371  02C3  120A  158A  2232  120A  118A  	fcall	_i2c_read_ack
  4372                           
  4373                           ;hd44780i2c.c: 52: i2c_send_data( 0b00000011 );
  4374  02C8  3003               	movlw	3
  4375  02C9  120A  158A  22C6  120A  118A  	fcall	_i2c_send_data
  4376                           
  4377                           ;hd44780i2c.c: 53: i2c_read_ack();
  4378  02CE  120A  158A  2232  120A  118A  	fcall	_i2c_read_ack
  4379                           
  4380                           ;hd44780i2c.c: 54: i2c_stop();
  4381  02D3  120A  158A  23F1  120A  118A  	fcall	_i2c_stop
  4382                           
  4383                           ;hd44780i2c.c: 55: _delay((unsigned long)((120)*(20000000/4000000.0)));
  4384  02D8  30C7               	movlw	199
  4385  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  4386  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  4387  02DB  00A9               	movwf	??_hd44780_init
  4388  02DC                     u4217:	
  4389  02DC  0BA9               	decfsz	??_hd44780_init,f
  4390  02DD  2ADC               	goto	u4217
  4391  02DE  2ADF               	nop2	;nop
  4392                           
  4393                           ;hd44780i2c.c: 57: i2c_start();
  4394  02DF  120A  158A  22DE  120A  118A  	fcall	_i2c_start
  4395                           
  4396                           ;hd44780i2c.c: 58: i2c_send_controlbyte(0x20, 0);
  4397  02E4  01F5               	clrf	i2c_send_controlbyte@rw_bit
  4398  02E5  3020               	movlw	32
  4399  02E6  120A  158A  22F6  120A  118A  	fcall	_i2c_send_controlbyte
  4400                           
  4401                           ;hd44780i2c.c: 59: ack = i2c_read_ack();
  4402  02EB  120A  158A  2232  120A  118A  	fcall	_i2c_read_ack
  4403  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  4404  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  4405  02F2  00A9               	movwf	??_hd44780_init
  4406  02F3  0829               	movf	??_hd44780_init,w
  4407  02F4  00AB               	movwf	hd44780_init@ack
  4408                           
  4409                           ;hd44780i2c.c: 60: i2c_send_data( 0b00100011 );
  4410  02F5  3023               	movlw	35
  4411  02F6  120A  158A  22C6  120A  118A  	fcall	_i2c_send_data
  4412                           
  4413                           ;hd44780i2c.c: 61: i2c_read_ack();
  4414  02FB  120A  158A  2232  120A  118A  	fcall	_i2c_read_ack
  4415                           
  4416                           ;hd44780i2c.c: 62: i2c_send_data( 0b00000011 );
  4417  0300  3003               	movlw	3
  4418  0301  120A  158A  22C6  120A  118A  	fcall	_i2c_send_data
  4419                           
  4420                           ;hd44780i2c.c: 63: i2c_read_ack();
  4421  0306  120A  158A  2232  120A  118A  	fcall	_i2c_read_ack
  4422                           
  4423                           ;hd44780i2c.c: 64: i2c_stop();
  4424  030B  120A  158A  23F1  120A  118A  	fcall	_i2c_stop
  4425                           
  4426                           ;hd44780i2c.c: 65: _delay((unsigned long)((5)*(20000000/4000.0)));
  4427  0310  3021               	movlw	33
  4428  0311  1283               	bcf	3,5	;RP0=0, select bank0
  4429  0312  1303               	bcf	3,6	;RP1=0, select bank0
  4430  0313  00AA               	movwf	??_hd44780_init+1
  4431  0314  3076               	movlw	118
  4432  0315  00A9               	movwf	??_hd44780_init
  4433  0316                     u4227:	
  4434  0316  0BA9               	decfsz	??_hd44780_init,f
  4435  0317  2B16               	goto	u4227
  4436  0318  0BAA               	decfsz	??_hd44780_init+1,f
  4437  0319  2B16               	goto	u4227
  4438  031A  0000               	nop
  4439                           
  4440                           ;hd44780i2c.c: 67: i2c_start();
  4441  031B  120A  158A  22DE  120A  118A  	fcall	_i2c_start
  4442                           
  4443                           ;hd44780i2c.c: 68: i2c_send_controlbyte(0x20, 0);
  4444  0320  01F5               	clrf	i2c_send_controlbyte@rw_bit
  4445  0321  3020               	movlw	32
  4446  0322  120A  158A  22F6  120A  118A  	fcall	_i2c_send_controlbyte
  4447                           
  4448                           ;hd44780i2c.c: 69: ack = i2c_read_ack();
  4449  0327  120A  158A  2232  120A  118A  	fcall	_i2c_read_ack
  4450  032C  1283               	bcf	3,5	;RP0=0, select bank0
  4451  032D  1303               	bcf	3,6	;RP1=0, select bank0
  4452  032E  00A9               	movwf	??_hd44780_init
  4453  032F  0829               	movf	??_hd44780_init,w
  4454  0330  00AB               	movwf	hd44780_init@ack
  4455                           
  4456                           ;hd44780i2c.c: 71: i2c_send_data( 0b00100010 );
  4457  0331  3022               	movlw	34
  4458  0332  120A  158A  22C6  120A  118A  	fcall	_i2c_send_data
  4459                           
  4460                           ;hd44780i2c.c: 72: i2c_read_ack();
  4461  0337  120A  158A  2232  120A  118A  	fcall	_i2c_read_ack
  4462                           
  4463                           ;hd44780i2c.c: 73: i2c_send_data( 0b00000010 );
  4464  033C  3002               	movlw	2
  4465  033D  120A  158A  22C6  120A  118A  	fcall	_i2c_send_data
  4466                           
  4467                           ;hd44780i2c.c: 74: i2c_read_ack();
  4468  0342  120A  158A  2232  120A  118A  	fcall	_i2c_read_ack
  4469                           
  4470                           ;hd44780i2c.c: 137: i2c_stop();
  4471  0347  120A  158A  23F1  120A  118A  	fcall	_i2c_stop
  4472                           
  4473                           ;hd44780i2c.c: 139: _delay((unsigned long)((5)*(20000000/4000.0)));
  4474  034C  3021               	movlw	33
  4475  034D  1283               	bcf	3,5	;RP0=0, select bank0
  4476  034E  1303               	bcf	3,6	;RP1=0, select bank0
  4477  034F  00AA               	movwf	??_hd44780_init+1
  4478  0350  3076               	movlw	118
  4479  0351  00A9               	movwf	??_hd44780_init
  4480  0352                     u4237:	
  4481  0352  0BA9               	decfsz	??_hd44780_init,f
  4482  0353  2B52               	goto	u4237
  4483  0354  0BAA               	decfsz	??_hd44780_init+1,f
  4484  0355  2B52               	goto	u4237
  4485  0356  0000               	nop
  4486                           
  4487                           ;hd44780i2c.c: 177: hd44780_write( 0b00101000, 0 );
  4488  0357  1283               	bcf	3,5	;RP0=0, select bank0
  4489  0358  1303               	bcf	3,6	;RP1=0, select bank0
  4490  0359  01A2               	clrf	hd44780_write@rs_flag
  4491  035A  3028               	movlw	40
  4492  035B  120A  118A  272D  120A  118A  	fcall	_hd44780_write
  4493                           
  4494                           ;hd44780i2c.c: 179: hd44780_write( 0b00001100, 0 );
  4495  0360  1283               	bcf	3,5	;RP0=0, select bank0
  4496  0361  1303               	bcf	3,6	;RP1=0, select bank0
  4497  0362  01A2               	clrf	hd44780_write@rs_flag
  4498  0363  300C               	movlw	12
  4499  0364  120A  118A  272D  120A  118A  	fcall	_hd44780_write
  4500                           
  4501                           ;hd44780i2c.c: 180: hd44780_write( 0b00000001, 0 );
  4502  0369  1283               	bcf	3,5	;RP0=0, select bank0
  4503  036A  1303               	bcf	3,6	;RP1=0, select bank0
  4504  036B  01A2               	clrf	hd44780_write@rs_flag
  4505  036C  3001               	movlw	1
  4506  036D  120A  118A  272D  120A  118A  	fcall	_hd44780_write
  4507                           
  4508                           ;hd44780i2c.c: 181: hd44780_write( 0b00000110, 0 );
  4509  0372  1283               	bcf	3,5	;RP0=0, select bank0
  4510  0373  1303               	bcf	3,6	;RP1=0, select bank0
  4511  0374  01A2               	clrf	hd44780_write@rs_flag
  4512  0375  3006               	movlw	6
  4513  0376  120A  118A  272D   	fcall	_hd44780_write
  4514  0379  0008               	return
  4515  037A                     __end_of_hd44780_init:	
  4516                           
  4517                           	psect	text23
  4518  072D                     __ptext23:	
  4519 ;; *************** function _hd44780_write *****************
  4520 ;; Defined at:
  4521 ;;		line 202 in file "hd44780i2c.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;  bt              1    wreg     unsigned char 
  4524 ;;  rs_flag         1    2[BANK0 ] unsigned char 
  4525 ;; Auto vars:     Size  Location     Type
  4526 ;;  bt              1    6[BANK0 ] unsigned char 
  4527 ;;  tmp1            1    8[BANK0 ] unsigned char 
  4528 ;;  tmp2            1    7[BANK0 ] unsigned char 
  4529 ;;  ack             1    5[BANK0 ] unsigned char 
  4530 ;; Return value:  Size  Location     Type
  4531 ;;		None               void
  4532 ;; Registers used:
  4533 ;;		wreg, status,2, status,0, pclath, cstack
  4534 ;; Tracked objects:
  4535 ;;		On entry : 0/0
  4536 ;;		On exit  : 0/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4539 ;;      Params:         0       1       0       0       0
  4540 ;;      Locals:         0       4       0       0       0
  4541 ;;      Temps:          0       2       0       0       0
  4542 ;;      Totals:         0       7       0       0       0
  4543 ;;Total ram usage:        7 bytes
  4544 ;; Hardware stack levels used:    1
  4545 ;; Hardware stack levels required when called:    4
  4546 ;; This function calls:
  4547 ;;		_i2c_read_ack
  4548 ;;		_i2c_send_controlbyte
  4549 ;;		_i2c_send_data
  4550 ;;		_i2c_start
  4551 ;;		_i2c_stop
  4552 ;; This function is called by:
  4553 ;;		_hd44780_init
  4554 ;;		_hd44780_puts
  4555 ;;		_hd44780_puts_at
  4556 ;;		_hd44780_putchar
  4557 ;;		_hd44780_newline
  4558 ;;		_hd44780_putchar_at
  4559 ;;		_hd44780_clear
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563                           
  4564                           ;psect for function _hd44780_write
  4565  072D                     _hd44780_write:	
  4566                           
  4567                           ;incstack = 0
  4568                           ; Regs used in _hd44780_write: [wreg+status,2+status,0+pclath+cstack]
  4569                           ;hd44780_write@bt stored from wreg
  4570  072D  1283               	bcf	3,5	;RP0=0, select bank0
  4571  072E  1303               	bcf	3,6	;RP1=0, select bank0
  4572  072F  00A6               	movwf	hd44780_write@bt
  4573                           
  4574                           ;hd44780i2c.c: 204: uint8_t tmp1, tmp2;
  4575                           ;hd44780i2c.c: 206: tmp1 = bt & 0xF0;
  4576  0730  0826               	movf	hd44780_write@bt,w
  4577  0731  39F0               	andlw	240
  4578  0732  00A3               	movwf	??_hd44780_write
  4579  0733  0823               	movf	??_hd44780_write,w
  4580  0734  00A8               	movwf	hd44780_write@tmp1
  4581                           
  4582                           ;hd44780i2c.c: 207: tmp1 = tmp1 >> 4;
  4583  0735  0828               	movf	hd44780_write@tmp1,w
  4584  0736  00A3               	movwf	??_hd44780_write
  4585  0737  3004               	movlw	4
  4586  0738                     u3175:	
  4587  0738  1003               	clrc
  4588  0739  0CA3               	rrf	??_hd44780_write,f
  4589  073A  3EFF               	addlw	-1
  4590  073B  1D03               	skipz
  4591  073C  2F38               	goto	u3175
  4592  073D  0823               	movf	??_hd44780_write,w
  4593  073E  00A4               	movwf	??_hd44780_write+1
  4594  073F  0824               	movf	??_hd44780_write+1,w
  4595  0740  00A8               	movwf	hd44780_write@tmp1
  4596                           
  4597                           ;hd44780i2c.c: 208: tmp2 = bt & 0x0F;
  4598  0741  0826               	movf	hd44780_write@bt,w
  4599  0742  390F               	andlw	15
  4600  0743  00A3               	movwf	??_hd44780_write
  4601  0744  0823               	movf	??_hd44780_write,w
  4602  0745  00A7               	movwf	hd44780_write@tmp2
  4603                           
  4604                           ;hd44780i2c.c: 210: if(rs_flag == 1){
  4605  0746  0322               	decf	hd44780_write@rs_flag,w
  4606  0747  1D03               	btfss	3,2
  4607  0748  2F53               	goto	l3075
  4608                           
  4609                           ;hd44780i2c.c: 211: tmp1 = tmp1 | 0x10;
  4610  0749  0828               	movf	hd44780_write@tmp1,w
  4611  074A  3810               	iorlw	16
  4612  074B  00A3               	movwf	??_hd44780_write
  4613  074C  0823               	movf	??_hd44780_write,w
  4614  074D  00A8               	movwf	hd44780_write@tmp1
  4615                           
  4616                           ;hd44780i2c.c: 212: tmp2 = tmp2 | 0x10;
  4617  074E  0827               	movf	hd44780_write@tmp2,w
  4618  074F  3810               	iorlw	16
  4619  0750  00A3               	movwf	??_hd44780_write
  4620  0751  0823               	movf	??_hd44780_write,w
  4621  0752  00A7               	movwf	hd44780_write@tmp2
  4622  0753                     l3075:	
  4623                           
  4624                           ;hd44780i2c.c: 213: }
  4625                           ;hd44780i2c.c: 215: i2c_start();
  4626  0753  120A  158A  22DE  120A  118A  	fcall	_i2c_start
  4627                           
  4628                           ;hd44780i2c.c: 216: i2c_send_controlbyte(0x20, 0);
  4629  0758  01F5               	clrf	i2c_send_controlbyte@rw_bit
  4630  0759  3020               	movlw	32
  4631  075A  120A  158A  22F6  120A  118A  	fcall	_i2c_send_controlbyte
  4632                           
  4633                           ;hd44780i2c.c: 217: i2c_read_ack();
  4634  075F  120A  158A  2232  120A  118A  	fcall	_i2c_read_ack
  4635                           
  4636                           ;hd44780i2c.c: 218: i2c_send_data( light_status | 0b00100000 | tmp1 );
  4637  0764  0877               	movf	_light_status,w
  4638  0765  1283               	bcf	3,5	;RP0=0, select bank0
  4639  0766  1303               	bcf	3,6	;RP1=0, select bank0
  4640  0767  0428               	iorwf	hd44780_write@tmp1,w
  4641  0768  3820               	iorlw	32
  4642  0769  120A  158A  22C6  120A  118A  	fcall	_i2c_send_data
  4643                           
  4644                           ;hd44780i2c.c: 219: i2c_read_ack();
  4645  076E  120A  158A  2232  120A  118A  	fcall	_i2c_read_ack
  4646                           
  4647                           ;hd44780i2c.c: 220: i2c_send_data( light_status | 0b00000000 | tmp1 );
  4648  0773  0877               	movf	_light_status,w
  4649  0774  1283               	bcf	3,5	;RP0=0, select bank0
  4650  0775  1303               	bcf	3,6	;RP1=0, select bank0
  4651  0776  0428               	iorwf	hd44780_write@tmp1,w
  4652  0777  120A  158A  22C6  120A  118A  	fcall	_i2c_send_data
  4653                           
  4654                           ;hd44780i2c.c: 221: i2c_read_ack();
  4655  077C  120A  158A  2232  120A  118A  	fcall	_i2c_read_ack
  4656                           
  4657                           ;hd44780i2c.c: 224: i2c_send_data( light_status | 0b00100000 | tmp2 );
  4658  0781  0877               	movf	_light_status,w
  4659  0782  1283               	bcf	3,5	;RP0=0, select bank0
  4660  0783  1303               	bcf	3,6	;RP1=0, select bank0
  4661  0784  0427               	iorwf	hd44780_write@tmp2,w
  4662  0785  3820               	iorlw	32
  4663  0786  120A  158A  22C6  120A  118A  	fcall	_i2c_send_data
  4664                           
  4665                           ;hd44780i2c.c: 225: i2c_read_ack();
  4666  078B  120A  158A  2232  120A  118A  	fcall	_i2c_read_ack
  4667                           
  4668                           ;hd44780i2c.c: 226: i2c_send_data( light_status | 0b00000000 | tmp2 );
  4669  0790  0877               	movf	_light_status,w
  4670  0791  1283               	bcf	3,5	;RP0=0, select bank0
  4671  0792  1303               	bcf	3,6	;RP1=0, select bank0
  4672  0793  0427               	iorwf	hd44780_write@tmp2,w
  4673  0794  120A  158A  22C6  120A  118A  	fcall	_i2c_send_data
  4674                           
  4675                           ;hd44780i2c.c: 227: uint8_t ack = i2c_read_ack();
  4676  0799  120A  158A  2232  120A  118A  	fcall	_i2c_read_ack
  4677  079E  1283               	bcf	3,5	;RP0=0, select bank0
  4678  079F  1303               	bcf	3,6	;RP1=0, select bank0
  4679  07A0  00A3               	movwf	??_hd44780_write
  4680  07A1  0823               	movf	??_hd44780_write,w
  4681  07A2  00A5               	movwf	hd44780_write@ack
  4682                           
  4683                           ;hd44780i2c.c: 229: i2c_send_data( light_status | 0b00000000 | (tmp2 & ~(1 << 4)) );
  4684  07A3  0827               	movf	hd44780_write@tmp2,w
  4685  07A4  39EF               	andlw	239
  4686  07A5  0477               	iorwf	_light_status,w
  4687  07A6  120A  158A  22C6  120A  118A  	fcall	_i2c_send_data
  4688                           
  4689                           ;hd44780i2c.c: 230: i2c_read_ack();
  4690  07AB  120A  158A  2232  120A  118A  	fcall	_i2c_read_ack
  4691                           
  4692                           ;hd44780i2c.c: 232: i2c_stop();
  4693  07B0  120A  158A  23F1  120A  118A  	fcall	_i2c_stop
  4694                           
  4695                           ;hd44780i2c.c: 237: _delay((unsigned long)((5)*(20000000/4000.0)));
  4696  07B5  3021               	movlw	33
  4697  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  4698  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  4699  07B8  00A4               	movwf	??_hd44780_write+1
  4700  07B9  3076               	movlw	118
  4701  07BA  00A3               	movwf	??_hd44780_write
  4702  07BB                     u4247:	
  4703  07BB  0BA3               	decfsz	??_hd44780_write,f
  4704  07BC  2FBB               	goto	u4247
  4705  07BD  0BA4               	decfsz	??_hd44780_write+1,f
  4706  07BE  2FBB               	goto	u4247
  4707  07BF  0000               	nop
  4708  07C0  0008               	return
  4709  07C1                     __end_of_hd44780_write:	
  4710                           
  4711                           	psect	text24
  4712  0BF1                     __ptext24:	
  4713 ;; *************** function _i2c_stop *****************
  4714 ;; Defined at:
  4715 ;;		line 40 in file "i2c.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;		None
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;		None
  4720 ;; Return value:  Size  Location     Type
  4721 ;;		None               void
  4722 ;; Registers used:
  4723 ;;		wreg, status,2, status,0, pclath, cstack
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4729 ;;      Params:         0       0       0       0       0
  4730 ;;      Locals:         0       0       0       0       0
  4731 ;;      Temps:          0       1       0       0       0
  4732 ;;      Totals:         0       1       0       0       0
  4733 ;;Total ram usage:        1 bytes
  4734 ;; Hardware stack levels used:    1
  4735 ;; Hardware stack levels required when called:    3
  4736 ;; This function calls:
  4737 ;;		_i2c_check_overflow
  4738 ;;		_i2c_enable
  4739 ;; This function is called by:
  4740 ;;		_si4703_read_regs
  4741 ;;		_si4703_write_regs
  4742 ;;		_si4703_getrssi
  4743 ;;		_hd44780_init
  4744 ;;		_hd44780_write
  4745 ;; This function uses a non-reentrant model
  4746 ;;
  4747                           
  4748                           
  4749                           ;psect for function _i2c_stop
  4750  0BF1                     _i2c_stop:	
  4751                           
  4752                           ;i2c.c: 42: if( i2c_check_overflow() ){
  4753                           
  4754                           ;incstack = 0
  4755                           ; Regs used in _i2c_stop: [wreg+status,2+status,0+pclath+cstack]
  4756  0BF1  120A  158A  223A  120A  158A  	fcall	_i2c_check_overflow
  4757  0BF6  3A00               	xorlw	0
  4758  0BF7  1903               	skipnz
  4759  0BF8  2BFD               	goto	l123
  4760                           
  4761                           ;i2c.c: 44: i2c_enable();
  4762  0BF9  120A  158A  2229   	fcall	_i2c_enable
  4763                           
  4764                           ;i2c.c: 45: }else{
  4765  0BFC  0008               	return
  4766  0BFD                     l123:	
  4767                           
  4768                           ;i2c.c: 46: PIR1bits.SSPIF = 0;
  4769  0BFD  1283               	bcf	3,5	;RP0=0, select bank0
  4770  0BFE  1303               	bcf	3,6	;RP1=0, select bank0
  4771  0BFF  118C               	bcf	12,3	;volatile
  4772                           
  4773                           ;i2c.c: 47: SSPCON2bits.PEN = 1;
  4774  0C00  1683               	bsf	3,5	;RP0=1, select bank1
  4775  0C01  1303               	bcf	3,6	;RP1=0, select bank1
  4776  0C02  1511               	bsf	17,2	;volatile
  4777                           
  4778                           ;i2c.c: 48: tries = 0;
  4779  0C03  01F8               	clrf	_tries
  4780  0C04                     l125:	
  4781                           ;i2c.c: 49: while( !PIR1bits.SSPIF && tries++ < 50 ){
  4782                           
  4783  0C04  1283               	bcf	3,5	;RP0=0, select bank0
  4784  0C05  1303               	bcf	3,6	;RP1=0, select bank0
  4785  0C06  198C               	btfsc	12,3	;volatile
  4786  0C07  0008               	return
  4787  0C08  3001               	movlw	1
  4788  0C09  07F8               	addwf	_tries,f
  4789  0C0A  30FF               	movlw	-1
  4790  0C0B  0778               	addwf	_tries,w
  4791  0C0C  00A0               	movwf	??_i2c_stop
  4792  0C0D  3032               	movlw	50
  4793  0C0E  0220               	subwf	??_i2c_stop,w
  4794  0C0F  1803               	btfsc	3,0
  4795  0C10  0008               	return
  4796                           
  4797                           ;i2c.c: 50: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4798  0C11  2C12               	nop2	;2 cycle nop
  4799  0C12  2C13               	nop2	;2 cycle nop
  4800  0C13  0000               	nop
  4801  0C14  2C04               	goto	l125
  4802  0C15                     __end_of_i2c_stop:	
  4803                           
  4804                           	psect	text25
  4805  0A29                     __ptext25:	
  4806 ;; *************** function _i2c_enable *****************
  4807 ;; Defined at:
  4808 ;;		line 164 in file "i2c.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;		None
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;		None
  4813 ;; Return value:  Size  Location     Type
  4814 ;;		None               void
  4815 ;; Registers used:
  4816 ;;		None
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4822 ;;      Params:         0       0       0       0       0
  4823 ;;      Locals:         0       0       0       0       0
  4824 ;;      Temps:          0       0       0       0       0
  4825 ;;      Totals:         0       0       0       0       0
  4826 ;;Total ram usage:        0 bytes
  4827 ;; Hardware stack levels used:    1
  4828 ;; Hardware stack levels required when called:    2
  4829 ;; This function calls:
  4830 ;;		Nothing
  4831 ;; This function is called by:
  4832 ;;		_i2c_stop
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           
  4837                           ;psect for function _i2c_enable
  4838  0A29                     _i2c_enable:	
  4839                           
  4840                           ;i2c.c: 166: SSPCONbits.SSPEN = 1;
  4841                           
  4842                           ;incstack = 0
  4843                           ; Regs used in _i2c_enable: []
  4844  0A29  1283               	bcf	3,5	;RP0=0, select bank0
  4845  0A2A  1303               	bcf	3,6	;RP1=0, select bank0
  4846  0A2B  1694               	bsf	20,5	;volatile
  4847  0A2C  0008               	return
  4848  0A2D                     __end_of_i2c_enable:	
  4849                           
  4850                           	psect	text26
  4851  0A3A                     __ptext26:	
  4852 ;; *************** function _i2c_check_overflow *****************
  4853 ;; Defined at:
  4854 ;;		line 159 in file "i2c.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;		None
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;		None
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  1    wreg      unsigned char 
  4861 ;; Registers used:
  4862 ;;		wreg, status,2, status,0
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4868 ;;      Params:         0       0       0       0       0
  4869 ;;      Locals:         0       0       0       0       0
  4870 ;;      Temps:          1       0       0       0       0
  4871 ;;      Totals:         1       0       0       0       0
  4872 ;;Total ram usage:        1 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; Hardware stack levels required when called:    2
  4875 ;; This function calls:
  4876 ;;		Nothing
  4877 ;; This function is called by:
  4878 ;;		_i2c_stop
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882                           
  4883                           ;psect for function _i2c_check_overflow
  4884  0A3A                     _i2c_check_overflow:	
  4885                           
  4886                           ;i2c.c: 161: return SSPCONbits.SSPOV;
  4887                           
  4888                           ;incstack = 0
  4889                           ; Regs used in _i2c_check_overflow: [wreg+status,2+status,0]
  4890  0A3A  1283               	bcf	3,5	;RP0=0, select bank0
  4891  0A3B  1303               	bcf	3,6	;RP1=0, select bank0
  4892  0A3C  0E14               	swapf	20,w	;volatile
  4893  0A3D  00F5               	movwf	??_i2c_check_overflow
  4894  0A3E  0CF5               	rrf	??_i2c_check_overflow,f
  4895  0A3F  0C75               	rrf	??_i2c_check_overflow,w
  4896  0A40  3901               	andlw	1
  4897  0A41  0008               	return
  4898  0A42                     __end_of_i2c_check_overflow:	
  4899                           
  4900                           	psect	text27
  4901  0ADE                     __ptext27:	
  4902 ;; *************** function _i2c_start *****************
  4903 ;; Defined at:
  4904 ;;		line 25 in file "i2c.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;		None
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;		None
  4909 ;; Return value:  Size  Location     Type
  4910 ;;		None               void
  4911 ;; Registers used:
  4912 ;;		wreg, status,2
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4918 ;;      Params:         0       0       0       0       0
  4919 ;;      Locals:         0       0       0       0       0
  4920 ;;      Temps:          1       0       0       0       0
  4921 ;;      Totals:         1       0       0       0       0
  4922 ;;Total ram usage:        1 bytes
  4923 ;; Hardware stack levels used:    1
  4924 ;; Hardware stack levels required when called:    2
  4925 ;; This function calls:
  4926 ;;		Nothing
  4927 ;; This function is called by:
  4928 ;;		_si4703_read_regs
  4929 ;;		_si4703_write_regs
  4930 ;;		_si4703_getrssi
  4931 ;;		_hd44780_init
  4932 ;;		_hd44780_write
  4933 ;; This function uses a non-reentrant model
  4934 ;;
  4935                           
  4936                           
  4937                           ;psect for function _i2c_start
  4938  0ADE                     _i2c_start:	
  4939                           
  4940                           ;i2c.c: 27: PIR1bits.SSPIF = 0;
  4941                           
  4942                           ;incstack = 0
  4943                           ; Regs used in _i2c_start: [wreg+status,2]
  4944  0ADE  1283               	bcf	3,5	;RP0=0, select bank0
  4945  0ADF  1303               	bcf	3,6	;RP1=0, select bank0
  4946  0AE0  118C               	bcf	12,3	;volatile
  4947                           
  4948                           ;i2c.c: 28: SSPCON2bits.SEN = 1;
  4949  0AE1  1683               	bsf	3,5	;RP0=1, select bank1
  4950  0AE2  1303               	bcf	3,6	;RP1=0, select bank1
  4951  0AE3  1411               	bsf	17,0	;volatile
  4952                           
  4953                           ;i2c.c: 29: tries = 0;
  4954  0AE4  01F8               	clrf	_tries
  4955  0AE5                     l115:	
  4956                           ;i2c.c: 30: while( !PIR1bits.SSPIF && tries++ < 50 ){
  4957                           
  4958  0AE5  1283               	bcf	3,5	;RP0=0, select bank0
  4959  0AE6  1303               	bcf	3,6	;RP1=0, select bank0
  4960  0AE7  198C               	btfsc	12,3	;volatile
  4961  0AE8  0008               	return
  4962  0AE9  3001               	movlw	1
  4963  0AEA  07F8               	addwf	_tries,f
  4964  0AEB  30FF               	movlw	-1
  4965  0AEC  0778               	addwf	_tries,w
  4966  0AED  00F5               	movwf	??_i2c_start
  4967  0AEE  3032               	movlw	50
  4968  0AEF  0275               	subwf	??_i2c_start,w
  4969  0AF0  1803               	btfsc	3,0
  4970  0AF1  0008               	return
  4971                           
  4972                           ;i2c.c: 31: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4973  0AF2  2AF3               	nop2	;2 cycle nop
  4974  0AF3  2AF4               	nop2	;2 cycle nop
  4975  0AF4  0000               	nop
  4976  0AF5  2AE5               	goto	l115
  4977  0AF6                     __end_of_i2c_start:	
  4978                           
  4979                           	psect	text28
  4980  0AC6                     __ptext28:	
  4981 ;; *************** function _i2c_send_data *****************
  4982 ;; Defined at:
  4983 ;;		line 74 in file "i2c.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;  dta             1    wreg     unsigned char 
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;  dta             1    0[BANK0 ] unsigned char 
  4988 ;; Return value:  Size  Location     Type
  4989 ;;		None               void
  4990 ;; Registers used:
  4991 ;;		wreg, status,2, status,0
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4997 ;;      Params:         0       0       0       0       0
  4998 ;;      Locals:         0       1       0       0       0
  4999 ;;      Temps:          1       0       0       0       0
  5000 ;;      Totals:         1       1       0       0       0
  5001 ;;Total ram usage:        2 bytes
  5002 ;; Hardware stack levels used:    1
  5003 ;; Hardware stack levels required when called:    2
  5004 ;; This function calls:
  5005 ;;		Nothing
  5006 ;; This function is called by:
  5007 ;;		_si4703_write_regs
  5008 ;;		_hd44780_init
  5009 ;;		_hd44780_write
  5010 ;; This function uses a non-reentrant model
  5011 ;;
  5012                           
  5013                           
  5014                           ;psect for function _i2c_send_data
  5015  0AC6                     _i2c_send_data:	
  5016                           
  5017                           ;incstack = 0
  5018                           ; Regs used in _i2c_send_data: [wreg+status,2+status,0]
  5019                           ;i2c_send_data@dta stored from wreg
  5020  0AC6  1283               	bcf	3,5	;RP0=0, select bank0
  5021  0AC7  1303               	bcf	3,6	;RP1=0, select bank0
  5022  0AC8  00A0               	movwf	i2c_send_data@dta
  5023                           
  5024                           ;i2c.c: 76: PIR1bits.SSPIF = 0;
  5025  0AC9  118C               	bcf	12,3	;volatile
  5026                           
  5027                           ;i2c.c: 77: SSPBUF = dta;
  5028  0ACA  0820               	movf	i2c_send_data@dta,w
  5029  0ACB  0093               	movwf	19	;volatile
  5030                           
  5031                           ;i2c.c: 78: tries = 0;
  5032  0ACC  01F8               	clrf	_tries
  5033  0ACD                     l142:	
  5034                           ;i2c.c: 80: while( !PIR1bits.SSPIF && tries++ < 50 ){
  5035                           
  5036  0ACD  1283               	bcf	3,5	;RP0=0, select bank0
  5037  0ACE  1303               	bcf	3,6	;RP1=0, select bank0
  5038  0ACF  198C               	btfsc	12,3	;volatile
  5039  0AD0  0008               	return
  5040  0AD1  3001               	movlw	1
  5041  0AD2  07F8               	addwf	_tries,f
  5042  0AD3  30FF               	movlw	-1
  5043  0AD4  0778               	addwf	_tries,w
  5044  0AD5  00F5               	movwf	??_i2c_send_data
  5045  0AD6  3032               	movlw	50
  5046  0AD7  0275               	subwf	??_i2c_send_data,w
  5047  0AD8  1803               	btfsc	3,0
  5048  0AD9  0008               	return
  5049                           
  5050                           ;i2c.c: 81: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5051  0ADA  2ADB               	nop2	;2 cycle nop
  5052  0ADB  2ADC               	nop2	;2 cycle nop
  5053  0ADC  0000               	nop
  5054  0ADD  2ACD               	goto	l142
  5055  0ADE                     __end_of_i2c_send_data:	
  5056                           ;i2c.c: 85: return;
  5057                           
  5058                           
  5059                           	psect	text29
  5060  0AF6                     __ptext29:	
  5061 ;; *************** function _i2c_send_controlbyte *****************
  5062 ;; Defined at:
  5063 ;;		line 60 in file "i2c.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;  addr            1    wreg     unsigned char 
  5066 ;;  rw_bit          1    5[COMMON] unsigned char 
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;  addr            1    1[BANK0 ] unsigned char 
  5069 ;; Return value:  Size  Location     Type
  5070 ;;		None               void
  5071 ;; Registers used:
  5072 ;;		wreg, status,2, status,0
  5073 ;; Tracked objects:
  5074 ;;		On entry : 0/0
  5075 ;;		On exit  : 0/0
  5076 ;;		Unchanged: 0/0
  5077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5078 ;;      Params:         1       0       0       0       0
  5079 ;;      Locals:         0       1       0       0       0
  5080 ;;      Temps:          0       1       0       0       0
  5081 ;;      Totals:         1       2       0       0       0
  5082 ;;Total ram usage:        3 bytes
  5083 ;; Hardware stack levels used:    1
  5084 ;; Hardware stack levels required when called:    2
  5085 ;; This function calls:
  5086 ;;		Nothing
  5087 ;; This function is called by:
  5088 ;;		_si4703_read_regs
  5089 ;;		_si4703_write_regs
  5090 ;;		_si4703_getrssi
  5091 ;;		_hd44780_init
  5092 ;;		_hd44780_write
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096                           
  5097                           ;psect for function _i2c_send_controlbyte
  5098  0AF6                     _i2c_send_controlbyte:	
  5099                           
  5100                           ;incstack = 0
  5101                           ; Regs used in _i2c_send_controlbyte: [wreg+status,2+status,0]
  5102                           ;i2c_send_controlbyte@addr stored from wreg
  5103  0AF6  1283               	bcf	3,5	;RP0=0, select bank0
  5104  0AF7  1303               	bcf	3,6	;RP1=0, select bank0
  5105  0AF8  00A1               	movwf	i2c_send_controlbyte@addr
  5106                           
  5107                           ;i2c.c: 62: PIR1bits.SSPIF = 0;
  5108  0AF9  118C               	bcf	12,3	;volatile
  5109                           
  5110                           ;i2c.c: 63: SSPBUF = (addr << 1) | (rw_bit & 1);
  5111  0AFA  0C75               	rrf	i2c_send_controlbyte@rw_bit,w
  5112  0AFB  0D21               	rlf	i2c_send_controlbyte@addr,w
  5113  0AFC  0093               	movwf	19	;volatile
  5114                           
  5115                           ;i2c.c: 64: tries = 0;
  5116  0AFD  01F8               	clrf	_tries
  5117  0AFE                     l133:	
  5118                           ;i2c.c: 65: while( !PIR1bits.SSPIF && tries++ < 50 ){
  5119                           
  5120  0AFE  1283               	bcf	3,5	;RP0=0, select bank0
  5121  0AFF  1303               	bcf	3,6	;RP1=0, select bank0
  5122  0B00  198C               	btfsc	12,3	;volatile
  5123  0B01  0008               	return
  5124  0B02  3001               	movlw	1
  5125  0B03  07F8               	addwf	_tries,f
  5126  0B04  30FF               	movlw	-1
  5127  0B05  0778               	addwf	_tries,w
  5128  0B06  00A0               	movwf	??_i2c_send_controlbyte
  5129  0B07  3032               	movlw	50
  5130  0B08  0220               	subwf	??_i2c_send_controlbyte,w
  5131  0B09  1803               	btfsc	3,0
  5132  0B0A  0008               	return
  5133                           
  5134                           ;i2c.c: 66: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5135  0B0B  2B0C               	nop2	;2 cycle nop
  5136  0B0C  2B0D               	nop2	;2 cycle nop
  5137  0B0D  0000               	nop
  5138  0B0E  2AFE               	goto	l133
  5139  0B0F                     __end_of_i2c_send_controlbyte:	
  5140                           ;i2c.c: 70: return;
  5141                           
  5142                           
  5143                           	psect	text30
  5144  0A32                     __ptext30:	
  5145 ;; *************** function _i2c_read_ack *****************
  5146 ;; Defined at:
  5147 ;;		line 154 in file "i2c.c"
  5148 ;; Parameters:    Size  Location     Type
  5149 ;;		None
  5150 ;; Auto vars:     Size  Location     Type
  5151 ;;		None
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  1    wreg      unsigned char 
  5154 ;; Registers used:
  5155 ;;		wreg, status,2, status,0
  5156 ;; Tracked objects:
  5157 ;;		On entry : 0/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5161 ;;      Params:         0       0       0       0       0
  5162 ;;      Locals:         0       0       0       0       0
  5163 ;;      Temps:          1       0       0       0       0
  5164 ;;      Totals:         1       0       0       0       0
  5165 ;;Total ram usage:        1 bytes
  5166 ;; Hardware stack levels used:    1
  5167 ;; Hardware stack levels required when called:    2
  5168 ;; This function calls:
  5169 ;;		Nothing
  5170 ;; This function is called by:
  5171 ;;		_si4703_read_regs
  5172 ;;		_si4703_write_regs
  5173 ;;		_si4703_getrssi
  5174 ;;		_hd44780_init
  5175 ;;		_hd44780_write
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           
  5180                           ;psect for function _i2c_read_ack
  5181  0A32                     _i2c_read_ack:	
  5182                           
  5183                           ;i2c.c: 156: return SSPCON2bits.ACKSTAT;
  5184                           
  5185                           ;incstack = 0
  5186                           ; Regs used in _i2c_read_ack: [wreg+status,2+status,0]
  5187  0A32  1683               	bsf	3,5	;RP0=1, select bank1
  5188  0A33  1303               	bcf	3,6	;RP1=0, select bank1
  5189  0A34  0E11               	swapf	17,w	;volatile
  5190  0A35  00F5               	movwf	??_i2c_read_ack
  5191  0A36  0CF5               	rrf	??_i2c_read_ack,f
  5192  0A37  0C75               	rrf	??_i2c_read_ack,w
  5193  0A38  3901               	andlw	1
  5194  0A39  0008               	return
  5195  0A3A                     __end_of_i2c_read_ack:	
  5196                           
  5197                           	psect	text31
  5198  0C3C                     __ptext31:	
  5199 ;; *************** function _debounce *****************
  5200 ;; Defined at:
  5201 ;;		line 87 in file "main.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;  port            1    wreg     unsigned char 
  5204 ;;  pin             1    5[COMMON] unsigned char 
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;  port            1    2[BANK0 ] unsigned char 
  5207 ;;  count           1    3[BANK0 ] unsigned char 
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  1    wreg      unsigned char 
  5210 ;; Registers used:
  5211 ;;		wreg, status,2, status,0
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5217 ;;      Params:         1       0       0       0       0
  5218 ;;      Locals:         0       2       0       0       0
  5219 ;;      Temps:          0       2       0       0       0
  5220 ;;      Totals:         1       4       0       0       0
  5221 ;;Total ram usage:        5 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; Hardware stack levels required when called:    2
  5224 ;; This function calls:
  5225 ;;		Nothing
  5226 ;; This function is called by:
  5227 ;;		_main
  5228 ;; This function uses a non-reentrant model
  5229 ;;
  5230                           
  5231                           
  5232                           ;psect for function _debounce
  5233  0C3C                     _debounce:	
  5234                           
  5235                           ;incstack = 0
  5236                           ; Regs used in _debounce: [wreg+status,2+status,0]
  5237                           ;debounce@port stored from wreg
  5238  0C3C  1283               	bcf	3,5	;RP0=0, select bank0
  5239  0C3D  1303               	bcf	3,6	;RP1=0, select bank0
  5240  0C3E  00A2               	movwf	debounce@port
  5241                           
  5242                           ;main.c: 89: uint8_t count = 0;
  5243  0C3F  01A3               	clrf	debounce@count
  5244                           
  5245                           ;main.c: 91: while( !(port & (1 << pin)) && count < 5 ){
  5246  0C40  2C50               	goto	l3261
  5247  0C41                     l3257:	
  5248                           
  5249                           ;main.c: 93: _delay((unsigned long)((10)*(20000000/4000.0)));
  5250  0C41  3041               	movlw	65
  5251  0C42  00A1               	movwf	??_debounce+1
  5252  0C43  30EE               	movlw	238
  5253  0C44  00A0               	movwf	??_debounce
  5254  0C45                     u4257:	
  5255  0C45  0BA0               	decfsz	??_debounce,f
  5256  0C46  2C45               	goto	u4257
  5257  0C47  0BA1               	decfsz	??_debounce+1,f
  5258  0C48  2C45               	goto	u4257
  5259  0C49  0000               	nop
  5260                           
  5261                           ;main.c: 94: count++;
  5262  0C4A  3001               	movlw	1
  5263  0C4B  1283               	bcf	3,5	;RP0=0, select bank0
  5264  0C4C  1303               	bcf	3,6	;RP1=0, select bank0
  5265  0C4D  00A0               	movwf	??_debounce
  5266  0C4E  0820               	movf	??_debounce,w
  5267  0C4F  07A3               	addwf	debounce@count,f
  5268  0C50                     l3261:	
  5269  0C50  3001               	movlw	1
  5270  0C51  00A0               	movwf	??_debounce
  5271  0C52  0A75               	incf	debounce@pin,w
  5272  0C53  2C56               	goto	u3494
  5273  0C54                     u3495:	
  5274  0C54  1003               	clrc
  5275  0C55  0DA0               	rlf	??_debounce,f
  5276  0C56                     u3494:	
  5277  0C56  3EFF               	addlw	-1
  5278  0C57  1D03               	skipz
  5279  0C58  2C54               	goto	u3495
  5280  0C59  0820               	movf	??_debounce,w
  5281  0C5A  0522               	andwf	debounce@port,w
  5282  0C5B  1D03               	btfss	3,2
  5283  0C5C  2C61               	goto	l3265
  5284  0C5D  3005               	movlw	5
  5285  0C5E  0223               	subwf	debounce@count,w
  5286  0C5F  1C03               	skipc
  5287  0C60  2C41               	goto	l3257
  5288  0C61                     l3265:	
  5289                           
  5290                           ;main.c: 95: }
  5291                           ;main.c: 97: if(count == 5){
  5292  0C61  3005               	movlw	5
  5293  0C62  0623               	xorwf	debounce@count,w
  5294  0C63  1D03               	btfss	3,2
  5295  0C64  2C67               	goto	l3273
  5296                           
  5297                           ;main.c: 98: return 1;
  5298  0C65  3001               	movlw	1
  5299                           
  5300                           ;main.c: 99: }else{
  5301  0C66  0008               	return
  5302  0C67                     l3273:	
  5303                           
  5304                           ;main.c: 100: return 0;
  5305  0C67  3000               	movlw	0
  5306  0C68  0008               	return
  5307  0C69                     __end_of_debounce:	
  5308                           
  5309                           	psect	text32
  5310  0AAE                     __ptext32:	
  5311 ;; *************** function ___lwtoft *****************
  5312 ;; Defined at:
  5313 ;;		line 28 in file "/opt/microchip/xc8/v1.35/sources/common/lwtoft.c"
  5314 ;; Parameters:    Size  Location     Type
  5315 ;;  c               2    8[BANK0 ] unsigned int 
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;		None
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  3    8[BANK0 ] float 
  5320 ;; Registers used:
  5321 ;;		wreg, status,2, status,0, pclath, cstack
  5322 ;; Tracked objects:
  5323 ;;		On entry : 0/0
  5324 ;;		On exit  : 0/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5327 ;;      Params:         0       3       0       0       0
  5328 ;;      Locals:         0       0       0       0       0
  5329 ;;      Temps:          1       0       0       0       0
  5330 ;;      Totals:         1       3       0       0       0
  5331 ;;Total ram usage:        4 bytes
  5332 ;; Hardware stack levels used:    1
  5333 ;; Hardware stack levels required when called:    3
  5334 ;; This function calls:
  5335 ;;		___ftpack
  5336 ;; This function is called by:
  5337 ;;		_main
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           
  5341                           
  5342                           ;psect for function ___lwtoft
  5343  0AAE                     ___lwtoft:	
  5344                           
  5345                           ;incstack = 0
  5346                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  5347  0AAE  1283               	bcf	3,5	;RP0=0, select bank0
  5348  0AAF  1303               	bcf	3,6	;RP1=0, select bank0
  5349  0AB0  0828               	movf	___lwtoft@c,w
  5350  0AB1  00A0               	movwf	___ftpack@arg
  5351  0AB2  0829               	movf	___lwtoft@c+1,w
  5352  0AB3  00A1               	movwf	___ftpack@arg+1
  5353  0AB4  01A2               	clrf	___ftpack@arg+2
  5354  0AB5  308E               	movlw	142
  5355  0AB6  00F5               	movwf	??___lwtoft
  5356  0AB7  0875               	movf	??___lwtoft,w
  5357  0AB8  00A3               	movwf	___ftpack@exp
  5358  0AB9  01A4               	clrf	___ftpack@sign
  5359  0ABA  120A  158A  2683   	fcall	___ftpack
  5360  0ABD  1283               	bcf	3,5	;RP0=0, select bank0
  5361  0ABE  1303               	bcf	3,6	;RP1=0, select bank0
  5362  0ABF  0820               	movf	?___ftpack,w
  5363  0AC0  00A8               	movwf	?___lwtoft
  5364  0AC1  0821               	movf	?___ftpack+1,w
  5365  0AC2  00A9               	movwf	?___lwtoft+1
  5366  0AC3  0822               	movf	?___ftpack+2,w
  5367  0AC4  00AA               	movwf	?___lwtoft+2
  5368  0AC5  0008               	return
  5369  0AC6                     __end_of___lwtoft:	
  5370                           
  5371                           	psect	text33
  5372  0B91                     __ptext33:	
  5373 ;; *************** function ___lbtoft *****************
  5374 ;; Defined at:
  5375 ;;		line 27 in file "/opt/microchip/xc8/v1.35/sources/common/lbtoft.c"
  5376 ;; Parameters:    Size  Location     Type
  5377 ;;  c               1    wreg     unsigned char 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;  c               1    5[COMMON] unsigned char 
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  3    8[BANK0 ] float 
  5382 ;; Registers used:
  5383 ;;		wreg, status,2, status,0, pclath, cstack
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5389 ;;      Params:         0       3       0       0       0
  5390 ;;      Locals:         1       0       0       0       0
  5391 ;;      Temps:          0       4       0       0       0
  5392 ;;      Totals:         1       7       0       0       0
  5393 ;;Total ram usage:        8 bytes
  5394 ;; Hardware stack levels used:    1
  5395 ;; Hardware stack levels required when called:    3
  5396 ;; This function calls:
  5397 ;;		___ftpack
  5398 ;; This function is called by:
  5399 ;;		_main
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403                           
  5404                           ;psect for function ___lbtoft
  5405  0B91                     ___lbtoft:	
  5406                           
  5407                           ;incstack = 0
  5408                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  5409                           ;___lbtoft@c stored from wreg
  5410  0B91  00F5               	movwf	___lbtoft@c
  5411  0B92  0875               	movf	___lbtoft@c,w
  5412  0B93  1283               	bcf	3,5	;RP0=0, select bank0
  5413  0B94  1303               	bcf	3,6	;RP1=0, select bank0
  5414  0B95  00AB               	movwf	??___lbtoft
  5415  0B96  01AC               	clrf	??___lbtoft+1
  5416  0B97  01AD               	clrf	??___lbtoft+2
  5417  0B98  082B               	movf	??___lbtoft,w
  5418  0B99  00A0               	movwf	___ftpack@arg
  5419  0B9A  082C               	movf	??___lbtoft+1,w
  5420  0B9B  00A1               	movwf	___ftpack@arg+1
  5421  0B9C  082D               	movf	??___lbtoft+2,w
  5422  0B9D  00A2               	movwf	___ftpack@arg+2
  5423  0B9E  308E               	movlw	142
  5424  0B9F  00AE               	movwf	??___lbtoft+3
  5425  0BA0  082E               	movf	??___lbtoft+3,w
  5426  0BA1  00A3               	movwf	___ftpack@exp
  5427  0BA2  01A4               	clrf	___ftpack@sign
  5428  0BA3  120A  158A  2683   	fcall	___ftpack
  5429  0BA6  1283               	bcf	3,5	;RP0=0, select bank0
  5430  0BA7  1303               	bcf	3,6	;RP1=0, select bank0
  5431  0BA8  0820               	movf	?___ftpack,w
  5432  0BA9  00A8               	movwf	?___lbtoft
  5433  0BAA  0821               	movf	?___ftpack+1,w
  5434  0BAB  00A9               	movwf	?___lbtoft+1
  5435  0BAC  0822               	movf	?___ftpack+2,w
  5436  0BAD  00AA               	movwf	?___lbtoft+2
  5437  0BAE  0008               	return
  5438  0BAF                     __end_of___lbtoft:	
  5439                           
  5440                           	psect	text34
  5441  0A63                     __ptext34:	
  5442 ;; *************** function ___itoee *****************
  5443 ;; Defined at:
  5444 ;;		line 87 in file "/opt/microchip/xc8/v1.35/sources/pic/eeprom.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;  addr            1    wreg     PTR eeprom void 
  5447 ;;		 -> last_channel(2), 
  5448 ;;  data            2    4[BANK0 ] unsigned int 
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;  addr            1    8[BANK0 ] PTR eeprom void 
  5451 ;;		 -> last_channel(2), 
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  2    4[BANK0 ] unsigned int 
  5454 ;; Registers used:
  5455 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5461 ;;      Params:         0       2       0       0       0
  5462 ;;      Locals:         0       1       0       0       0
  5463 ;;      Temps:          0       2       0       0       0
  5464 ;;      Totals:         0       5       0       0       0
  5465 ;;Total ram usage:        5 bytes
  5466 ;; Hardware stack levels used:    1
  5467 ;; Hardware stack levels required when called:    3
  5468 ;; This function calls:
  5469 ;;		_memcpyee
  5470 ;; This function is called by:
  5471 ;;		_main
  5472 ;; This function uses a non-reentrant model
  5473 ;;
  5474                           
  5475                           
  5476                           ;psect for function ___itoee
  5477  0A63                     ___itoee:	
  5478                           
  5479                           ;incstack = 0
  5480                           ; Regs used in ___itoee: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5481                           ;___itoee@addr stored from wreg
  5482  0A63  1283               	bcf	3,5	;RP0=0, select bank0
  5483  0A64  1303               	bcf	3,6	;RP1=0, select bank0
  5484  0A65  00A8               	movwf	___itoee@addr
  5485  0A66  3024               	movlw	(low (___itoee@data| 0))& (0+255)
  5486  0A67  00A6               	movwf	??___itoee
  5487  0A68  0826               	movf	??___itoee,w
  5488  0A69  00A0               	movwf	memcpyee@from
  5489  0A6A  3002               	movlw	2
  5490  0A6B  00A7               	movwf	??___itoee+1
  5491  0A6C  0827               	movf	??___itoee+1,w
  5492  0A6D  00A1               	movwf	memcpyee@size
  5493  0A6E  0828               	movf	___itoee@addr,w
  5494  0A6F  120A  158A  2589   	fcall	_memcpyee
  5495  0A72  0008               	return
  5496  0A73                     __end_of___itoee:	
  5497                           ;	Return value of ___itoee is never used
  5498                           
  5499                           
  5500                           	psect	text35
  5501  0D89                     __ptext35:	
  5502 ;; *************** function _memcpyee *****************
  5503 ;; Defined at:
  5504 ;;		line 24 in file "/opt/microchip/xc8/v1.35/sources/pic/eeprom.c"
  5505 ;; Parameters:    Size  Location     Type
  5506 ;;  to              1    wreg     PTR eeprom unsigned char
  5507 ;;		 -> last_channel(2), 
  5508 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  5509 ;;		 -> __fltoee@data(3), __fttoee@data(3), __ltoee@data(4), __mtoee@data(3), 
  5510 ;;		 -> __itoee@data(2), __ctoee@data(1), 
  5511 ;;  size            1    1[BANK0 ] unsigned char 
  5512 ;; Auto vars:     Size  Location     Type
  5513 ;;  to              1    3[BANK0 ] PTR eeprom unsigned char
  5514 ;;		 -> last_channel(2), 
  5515 ;;  ptr             1    2[BANK0 ] PTR const unsigned char 
  5516 ;;		 -> __fltoee@data(3), __fttoee@data(3), __ltoee@data(4), __mtoee@data(3), 
  5517 ;;		 -> __itoee@data(2), __ctoee@data(1), 
  5518 ;; Return value:  Size  Location     Type
  5519 ;;		None               void
  5520 ;; Registers used:
  5521 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5522 ;; Tracked objects:
  5523 ;;		On entry : 0/0
  5524 ;;		On exit  : 0/0
  5525 ;;		Unchanged: 0/0
  5526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5527 ;;      Params:         0       2       0       0       0
  5528 ;;      Locals:         0       2       0       0       0
  5529 ;;      Temps:          1       0       0       0       0
  5530 ;;      Totals:         1       4       0       0       0
  5531 ;;Total ram usage:        5 bytes
  5532 ;; Hardware stack levels used:    1
  5533 ;; Hardware stack levels required when called:    2
  5534 ;; This function calls:
  5535 ;;		Nothing
  5536 ;; This function is called by:
  5537 ;;		___itoee
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           
  5542                           ;psect for function _memcpyee
  5543  0D89                     _memcpyee:	
  5544                           
  5545                           ;incstack = 0
  5546                           ; Regs used in _memcpyee: [wreg-fsr0h+status,2+status,0]
  5547                           ;memcpyee@to stored from wreg
  5548  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  5549  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  5550  0D8B  00A3               	movwf	memcpyee@to
  5551  0D8C  0820               	movf	memcpyee@from,w
  5552  0D8D  00F5               	movwf	??_memcpyee
  5553  0D8E  0875               	movf	??_memcpyee,w
  5554  0D8F  00A2               	movwf	memcpyee@ptr
  5555  0D90                     l448:	
  5556  0D90  1683               	bsf	3,5	;RP0=1, select bank3
  5557  0D91  1703               	bsf	3,6	;RP1=1, select bank3
  5558  0D92  188C               	btfsc	12,1	;volsfr
  5559  0D93  2D90               	goto	l448
  5560  0D94  1283               	bcf	3,5	;RP0=0, select bank0
  5561  0D95  1303               	bcf	3,6	;RP1=0, select bank0
  5562  0D96  0823               	movf	memcpyee@to,w
  5563  0D97  3EFF               	addlw	255
  5564  0D98  1283               	bcf	3,5	;RP0=0, select bank2
  5565  0D99  1703               	bsf	3,6	;RP1=1, select bank2
  5566  0D9A  008D               	movwf	13	;volatile
  5567  0D9B  307F               	movlw	127
  5568  0D9C  00F5               	movwf	??_memcpyee
  5569  0D9D  0875               	movf	??_memcpyee,w
  5570  0D9E  1683               	bsf	3,5	;RP0=1, select bank3
  5571  0D9F  1703               	bsf	3,6	;RP1=1, select bank3
  5572  0DA0  058C               	andwf	12,f	;volsfr
  5573  0DA1                     l3195:	
  5574  0DA1  3001               	movlw	1
  5575  0DA2  1283               	bcf	3,5	;RP0=0, select bank0
  5576  0DA3  1303               	bcf	3,6	;RP1=0, select bank0
  5577  0DA4  02A1               	subwf	memcpyee@size,f
  5578  0DA5  0A21               	incf	memcpyee@size,w
  5579  0DA6  1903               	btfsc	3,2
  5580  0DA7  0008               	return
  5581  0DA8                     l453:	
  5582  0DA8  1683               	bsf	3,5	;RP0=1, select bank3
  5583  0DA9  1703               	bsf	3,6	;RP1=1, select bank3
  5584  0DAA  188C               	btfsc	12,1	;volsfr
  5585  0DAB  2DA8               	goto	l453
  5586  0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  5587  0DAD  1303               	bcf	3,6	;RP1=0, select bank0
  5588  0DAE  0822               	movf	memcpyee@ptr,w
  5589  0DAF  0084               	movwf	4
  5590  0DB0  1383               	bcf	3,7	;select IRP bank0
  5591  0DB1  0800               	movf	0,w
  5592  0DB2  1283               	bcf	3,5	;RP0=0, select bank2
  5593  0DB3  1703               	bsf	3,6	;RP1=1, select bank2
  5594  0DB4  008C               	movwf	12	;volatile
  5595  0DB5  3001               	movlw	1
  5596  0DB6  00F5               	movwf	??_memcpyee
  5597  0DB7  0875               	movf	??_memcpyee,w
  5598  0DB8  1283               	bcf	3,5	;RP0=0, select bank0
  5599  0DB9  1303               	bcf	3,6	;RP1=0, select bank0
  5600  0DBA  07A2               	addwf	memcpyee@ptr,f
  5601  0DBB  3001               	movlw	1
  5602  0DBC  00F5               	movwf	??_memcpyee
  5603  0DBD  0875               	movf	??_memcpyee,w
  5604  0DBE  1283               	bcf	3,5	;RP0=0, select bank2
  5605  0DBF  1703               	bsf	3,6	;RP1=1, select bank2
  5606  0DC0  078D               	addwf	13,f	;volatile
  5607  0DC1  1283               	bcf	3,5	;RP0=0, select bank0
  5608  0DC2  1303               	bcf	3,6	;RP1=0, select bank0
  5609  0DC3  1003               	bcf	3,0	;volatile
  5610  0DC4  1B8B               	btfsc	11,7	;volatile
  5611  0DC5  1403               	bsf	3,0	;volatile
  5612  0DC6  138B               	bcf	11,7	;volatile
  5613  0DC7  1683               	bsf	3,5	;RP0=1, select bank3
  5614  0DC8  1703               	bsf	3,6	;RP1=1, select bank3
  5615  0DC9  150C               	bsf	12,2	;volsfr
  5616  0DCA  3055               	movlw	85
  5617  0DCB  008D               	movwf	13	;volsfr
  5618  0DCC  30AA               	movlw	170
  5619  0DCD  008D               	movwf	13	;volsfr
  5620  0DCE  148C               	bsf	12,1	;volsfr
  5621  0DCF  110C               	bcf	12,2	;volsfr
  5622  0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  5623  0DD1  1303               	bcf	3,6	;RP1=0, select bank0
  5624  0DD2  1C03               	btfss	3,0	;volatile
  5625  0DD3  2DA1               	goto	l3195
  5626  0DD4  178B               	bsf	11,7	;volatile
  5627  0DD5  2DA1               	goto	l3195
  5628  0DD6                     __end_of_memcpyee:	
  5629                           
  5630                           	psect	text36
  5631  0F72                     __ptext36:	
  5632 ;; *************** function ___fttol *****************
  5633 ;; Defined at:
  5634 ;;		line 44 in file "/opt/microchip/xc8/v1.35/sources/common/fttol.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;  f1              3   27[BANK0 ] float 
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;  lval            4   36[BANK0 ] unsigned long 
  5639 ;;  exp1            1   40[BANK0 ] unsigned char 
  5640 ;;  sign1           1   35[BANK0 ] unsigned char 
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  4   27[BANK0 ] long 
  5643 ;; Registers used:
  5644 ;;		wreg, status,2, status,0
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5650 ;;      Params:         0       4       0       0       0
  5651 ;;      Locals:         0       6       0       0       0
  5652 ;;      Temps:          0       4       0       0       0
  5653 ;;      Totals:         0      14       0       0       0
  5654 ;;Total ram usage:       14 bytes
  5655 ;; Hardware stack levels used:    1
  5656 ;; Hardware stack levels required when called:    2
  5657 ;; This function calls:
  5658 ;;		Nothing
  5659 ;; This function is called by:
  5660 ;;		_main
  5661 ;; This function uses a non-reentrant model
  5662 ;;
  5663                           
  5664                           
  5665                           ;psect for function ___fttol
  5666  0F72                     ___fttol:	
  5667                           
  5668                           ;incstack = 0
  5669                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5670  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  5671  0F73  1303               	bcf	3,6	;RP1=0, select bank0
  5672  0F74  083B               	movf	___fttol@f1,w
  5673  0F75  00BF               	movwf	??___fttol
  5674  0F76  083C               	movf	___fttol@f1+1,w
  5675  0F77  00C0               	movwf	??___fttol+1
  5676  0F78  083D               	movf	___fttol@f1+2,w
  5677  0F79  00C1               	movwf	??___fttol+2
  5678  0F7A  1003               	clrc
  5679  0F7B  0D40               	rlf	??___fttol+1,w
  5680  0F7C  0D41               	rlf	??___fttol+2,w
  5681  0F7D  00C2               	movwf	??___fttol+3
  5682  0F7E  0842               	movf	??___fttol+3,w
  5683  0F7F  00C8               	movwf	___fttol@exp1
  5684  0F80  0848               	movf	___fttol@exp1,w
  5685  0F81  1D03               	btfss	3,2
  5686  0F82  2F8C               	goto	l2677
  5687  0F83  3000               	movlw	0
  5688  0F84  00BE               	movwf	?___fttol+3
  5689  0F85  3000               	movlw	0
  5690  0F86  00BD               	movwf	?___fttol+2
  5691  0F87  3000               	movlw	0
  5692  0F88  00BC               	movwf	?___fttol+1
  5693  0F89  3000               	movlw	0
  5694  0F8A  00BB               	movwf	?___fttol
  5695  0F8B  0008               	return
  5696  0F8C                     l2677:	
  5697  0F8C  083B               	movf	___fttol@f1,w
  5698  0F8D  00BF               	movwf	??___fttol
  5699  0F8E  083C               	movf	___fttol@f1+1,w
  5700  0F8F  00C0               	movwf	??___fttol+1
  5701  0F90  083D               	movf	___fttol@f1+2,w
  5702  0F91  00C1               	movwf	??___fttol+2
  5703  0F92  3017               	movlw	23
  5704  0F93                     u2645:	
  5705  0F93  1003               	clrc
  5706  0F94  0CC1               	rrf	??___fttol+2,f
  5707  0F95  0CC0               	rrf	??___fttol+1,f
  5708  0F96  0CBF               	rrf	??___fttol,f
  5709  0F97  3EFF               	addlw	-1
  5710  0F98  1D03               	skipz
  5711  0F99  2F93               	goto	u2645
  5712  0F9A  083F               	movf	??___fttol,w
  5713  0F9B  00C2               	movwf	??___fttol+3
  5714  0F9C  0842               	movf	??___fttol+3,w
  5715  0F9D  00C3               	movwf	___fttol@sign1
  5716  0F9E  17BC               	bsf	___fttol@f1+1,7
  5717  0F9F  30FF               	movlw	255
  5718  0FA0  05BB               	andwf	___fttol@f1,f
  5719  0FA1  30FF               	movlw	255
  5720  0FA2  05BC               	andwf	___fttol@f1+1,f
  5721  0FA3  3000               	movlw	0
  5722  0FA4  05BD               	andwf	___fttol@f1+2,f
  5723  0FA5  083B               	movf	___fttol@f1,w
  5724  0FA6  00C4               	movwf	___fttol@lval
  5725  0FA7  083C               	movf	___fttol@f1+1,w
  5726  0FA8  00C5               	movwf	___fttol@lval+1
  5727  0FA9  083D               	movf	___fttol@f1+2,w
  5728  0FAA  00C6               	movwf	___fttol@lval+2
  5729  0FAB  01C7               	clrf	___fttol@lval+3
  5730  0FAC  308E               	movlw	142
  5731  0FAD  02C8               	subwf	___fttol@exp1,f
  5732  0FAE  1FC8               	btfss	___fttol@exp1,7
  5733  0FAF  2FCE               	goto	l2697
  5734  0FB0  0848               	movf	___fttol@exp1,w
  5735  0FB1  3A80               	xorlw	128
  5736  0FB2  3E8F               	addlw	143
  5737  0FB3  1803               	skipnc
  5738  0FB4  2FBE               	goto	l2695
  5739  0FB5  3000               	movlw	0
  5740  0FB6  00BE               	movwf	?___fttol+3
  5741  0FB7  3000               	movlw	0
  5742  0FB8  00BD               	movwf	?___fttol+2
  5743  0FB9  3000               	movlw	0
  5744  0FBA  00BC               	movwf	?___fttol+1
  5745  0FBB  3000               	movlw	0
  5746  0FBC  00BB               	movwf	?___fttol
  5747  0FBD  0008               	return
  5748  0FBE                     l2695:	
  5749  0FBE  3001               	movlw	1
  5750  0FBF                     u2675:	
  5751  0FBF  1003               	clrc
  5752  0FC0  0CC7               	rrf	___fttol@lval+3,f
  5753  0FC1  0CC6               	rrf	___fttol@lval+2,f
  5754  0FC2  0CC5               	rrf	___fttol@lval+1,f
  5755  0FC3  0CC4               	rrf	___fttol@lval,f
  5756  0FC4  3EFF               	addlw	-1
  5757  0FC5  1D03               	skipz
  5758  0FC6  2FBF               	goto	u2675
  5759  0FC7  3001               	movlw	1
  5760  0FC8  00BF               	movwf	??___fttol
  5761  0FC9  083F               	movf	??___fttol,w
  5762  0FCA  07C8               	addwf	___fttol@exp1,f
  5763  0FCB  1903               	btfsc	3,2
  5764  0FCC  2FE9               	goto	l2705
  5765  0FCD  2FBE               	goto	l2695
  5766  0FCE                     l2697:	
  5767  0FCE  3018               	movlw	24
  5768  0FCF  0248               	subwf	___fttol@exp1,w
  5769  0FD0  1C03               	skipc
  5770  0FD1  2FE6               	goto	l751
  5771  0FD2  3000               	movlw	0
  5772  0FD3  00BE               	movwf	?___fttol+3
  5773  0FD4  3000               	movlw	0
  5774  0FD5  00BD               	movwf	?___fttol+2
  5775  0FD6  3000               	movlw	0
  5776  0FD7  00BC               	movwf	?___fttol+1
  5777  0FD8  3000               	movlw	0
  5778  0FD9  00BB               	movwf	?___fttol
  5779  0FDA  0008               	return
  5780  0FDB                     l2703:	
  5781  0FDB  3001               	movlw	1
  5782  0FDC  00BF               	movwf	??___fttol
  5783  0FDD                     u2705:	
  5784  0FDD  1003               	clrc
  5785  0FDE  0DC4               	rlf	___fttol@lval,f
  5786  0FDF  0DC5               	rlf	___fttol@lval+1,f
  5787  0FE0  0DC6               	rlf	___fttol@lval+2,f
  5788  0FE1  0DC7               	rlf	___fttol@lval+3,f
  5789  0FE2  0BBF               	decfsz	??___fttol,f
  5790  0FE3  2FDD               	goto	u2705
  5791  0FE4  3001               	movlw	1
  5792  0FE5  02C8               	subwf	___fttol@exp1,f
  5793  0FE6                     l751:	
  5794  0FE6  0848               	movf	___fttol@exp1,w
  5795  0FE7  1D03               	btfss	3,2
  5796  0FE8  2FDB               	goto	l2703
  5797  0FE9                     l2705:	
  5798  0FE9  0843               	movf	___fttol@sign1,w
  5799  0FEA  1903               	btfsc	3,2
  5800  0FEB  2FF7               	goto	l2709
  5801  0FEC  09C4               	comf	___fttol@lval,f
  5802  0FED  09C5               	comf	___fttol@lval+1,f
  5803  0FEE  09C6               	comf	___fttol@lval+2,f
  5804  0FEF  09C7               	comf	___fttol@lval+3,f
  5805  0FF0  0AC4               	incf	___fttol@lval,f
  5806  0FF1  1903               	skipnz
  5807  0FF2  0AC5               	incf	___fttol@lval+1,f
  5808  0FF3  1903               	skipnz
  5809  0FF4  0AC6               	incf	___fttol@lval+2,f
  5810  0FF5  1903               	skipnz
  5811  0FF6  0AC7               	incf	___fttol@lval+3,f
  5812  0FF7                     l2709:	
  5813  0FF7  0847               	movf	___fttol@lval+3,w
  5814  0FF8  00BE               	movwf	?___fttol+3
  5815  0FF9  0846               	movf	___fttol@lval+2,w
  5816  0FFA  00BD               	movwf	?___fttol+2
  5817  0FFB  0845               	movf	___fttol@lval+1,w
  5818  0FFC  00BC               	movwf	?___fttol+1
  5819  0FFD  0844               	movf	___fttol@lval,w
  5820  0FFE  00BB               	movwf	?___fttol
  5821  0FFF  0008               	return
  5822  1000                     __end_of___fttol:	
  5823                           
  5824                           	psect	text37
  5825  0A4A                     __ptext37:	
  5826 ;; *************** function ___ftneg *****************
  5827 ;; Defined at:
  5828 ;;		line 15 in file "/opt/microchip/xc8/v1.35/sources/common/ftneg.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;  f1              3   15[BANK0 ] float 
  5831 ;; Auto vars:     Size  Location     Type
  5832 ;;		None
  5833 ;; Return value:  Size  Location     Type
  5834 ;;                  3   15[BANK0 ] float 
  5835 ;; Registers used:
  5836 ;;		wreg
  5837 ;; Tracked objects:
  5838 ;;		On entry : 0/0
  5839 ;;		On exit  : 0/0
  5840 ;;		Unchanged: 0/0
  5841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5842 ;;      Params:         0       3       0       0       0
  5843 ;;      Locals:         0       0       0       0       0
  5844 ;;      Temps:          0       0       0       0       0
  5845 ;;      Totals:         0       3       0       0       0
  5846 ;;Total ram usage:        3 bytes
  5847 ;; Hardware stack levels used:    1
  5848 ;; Hardware stack levels required when called:    2
  5849 ;; This function calls:
  5850 ;;		Nothing
  5851 ;; This function is called by:
  5852 ;;		_main
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           
  5857                           ;psect for function ___ftneg
  5858  0A4A                     ___ftneg:	
  5859                           
  5860                           ;incstack = 0
  5861                           ; Regs used in ___ftneg: [wreg]
  5862  0A4A  1283               	bcf	3,5	;RP0=0, select bank0
  5863  0A4B  1303               	bcf	3,6	;RP1=0, select bank0
  5864  0A4C  0831               	movf	___ftneg@f1+2,w
  5865  0A4D  0430               	iorwf	___ftneg@f1+1,w
  5866  0A4E  042F               	iorwf	___ftneg@f1,w
  5867  0A4F  1903               	skipnz
  5868  0A50  0008               	return
  5869  0A51  3080               	movlw	128
  5870  0A52  06B1               	xorwf	___ftneg@f1+2,f
  5871  0A53  0008               	return
  5872  0A54                     __end_of___ftneg:	
  5873                           
  5874                           	psect	text38
  5875  065A                     __ptext38:	
  5876 ;; *************** function ___ftmul *****************
  5877 ;; Defined at:
  5878 ;;		line 62 in file "/opt/microchip/xc8/v1.35/sources/common/ftmul.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;  f1              3   11[BANK0 ] float 
  5881 ;;  f2              3   14[BANK0 ] float 
  5882 ;; Auto vars:     Size  Location     Type
  5883 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
  5884 ;;  sign            1   26[BANK0 ] unsigned char 
  5885 ;;  cntr            1   25[BANK0 ] unsigned char 
  5886 ;;  exp             1   21[BANK0 ] unsigned char 
  5887 ;; Return value:  Size  Location     Type
  5888 ;;                  3   11[BANK0 ] float 
  5889 ;; Registers used:
  5890 ;;		wreg, status,2, status,0, pclath, cstack
  5891 ;; Tracked objects:
  5892 ;;		On entry : 0/0
  5893 ;;		On exit  : 0/0
  5894 ;;		Unchanged: 0/0
  5895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5896 ;;      Params:         0       6       0       0       0
  5897 ;;      Locals:         0       6       0       0       0
  5898 ;;      Temps:          0       4       0       0       0
  5899 ;;      Totals:         0      16       0       0       0
  5900 ;;Total ram usage:       16 bytes
  5901 ;; Hardware stack levels used:    1
  5902 ;; Hardware stack levels required when called:    3
  5903 ;; This function calls:
  5904 ;;		___ftpack
  5905 ;; This function is called by:
  5906 ;;		_main
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910                           
  5911                           ;psect for function ___ftmul
  5912  065A                     ___ftmul:	
  5913                           
  5914                           ;incstack = 0
  5915                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5916  065A  1283               	bcf	3,5	;RP0=0, select bank0
  5917  065B  1303               	bcf	3,6	;RP1=0, select bank0
  5918  065C  082B               	movf	___ftmul@f1,w
  5919  065D  00B1               	movwf	??___ftmul
  5920  065E  082C               	movf	___ftmul@f1+1,w
  5921  065F  00B2               	movwf	??___ftmul+1
  5922  0660  082D               	movf	___ftmul@f1+2,w
  5923  0661  00B3               	movwf	??___ftmul+2
  5924  0662  1003               	clrc
  5925  0663  0D32               	rlf	??___ftmul+1,w
  5926  0664  0D33               	rlf	??___ftmul+2,w
  5927  0665  00B4               	movwf	??___ftmul+3
  5928  0666  0834               	movf	??___ftmul+3,w
  5929  0667  00B5               	movwf	___ftmul@exp
  5930  0668  0835               	movf	___ftmul@exp,w
  5931  0669  1D03               	btfss	3,2
  5932  066A  2E72               	goto	l3581
  5933  066B  3000               	movlw	0
  5934  066C  00AB               	movwf	?___ftmul
  5935  066D  3000               	movlw	0
  5936  066E  00AC               	movwf	?___ftmul+1
  5937  066F  3000               	movlw	0
  5938  0670  00AD               	movwf	?___ftmul+2
  5939  0671  0008               	return
  5940  0672                     l3581:	
  5941  0672  082E               	movf	___ftmul@f2,w
  5942  0673  00B1               	movwf	??___ftmul
  5943  0674  082F               	movf	___ftmul@f2+1,w
  5944  0675  00B2               	movwf	??___ftmul+1
  5945  0676  0830               	movf	___ftmul@f2+2,w
  5946  0677  00B3               	movwf	??___ftmul+2
  5947  0678  1003               	clrc
  5948  0679  0D32               	rlf	??___ftmul+1,w
  5949  067A  0D33               	rlf	??___ftmul+2,w
  5950  067B  00B4               	movwf	??___ftmul+3
  5951  067C  0834               	movf	??___ftmul+3,w
  5952  067D  00BA               	movwf	___ftmul@sign
  5953  067E  083A               	movf	___ftmul@sign,w
  5954  067F  1D03               	btfss	3,2
  5955  0680  2E88               	goto	l3587
  5956  0681  3000               	movlw	0
  5957  0682  00AB               	movwf	?___ftmul
  5958  0683  3000               	movlw	0
  5959  0684  00AC               	movwf	?___ftmul+1
  5960  0685  3000               	movlw	0
  5961  0686  00AD               	movwf	?___ftmul+2
  5962  0687  0008               	return
  5963  0688                     l3587:	
  5964  0688  083A               	movf	___ftmul@sign,w
  5965  0689  3E7B               	addlw	123
  5966  068A  00B1               	movwf	??___ftmul
  5967  068B  0831               	movf	??___ftmul,w
  5968  068C  07B5               	addwf	___ftmul@exp,f
  5969  068D  082B               	movf	___ftmul@f1,w
  5970  068E  00B1               	movwf	??___ftmul
  5971  068F  082C               	movf	___ftmul@f1+1,w
  5972  0690  00B2               	movwf	??___ftmul+1
  5973  0691  082D               	movf	___ftmul@f1+2,w
  5974  0692  00B3               	movwf	??___ftmul+2
  5975  0693  3010               	movlw	16
  5976  0694                     u3935:	
  5977  0694  1003               	clrc
  5978  0695  0CB3               	rrf	??___ftmul+2,f
  5979  0696  0CB2               	rrf	??___ftmul+1,f
  5980  0697  0CB1               	rrf	??___ftmul,f
  5981  0698  3EFF               	addlw	-1
  5982  0699  1D03               	skipz
  5983  069A  2E94               	goto	u3935
  5984  069B  0831               	movf	??___ftmul,w
  5985  069C  00B4               	movwf	??___ftmul+3
  5986  069D  0834               	movf	??___ftmul+3,w
  5987  069E  00BA               	movwf	___ftmul@sign
  5988  069F  082E               	movf	___ftmul@f2,w
  5989  06A0  00B1               	movwf	??___ftmul
  5990  06A1  082F               	movf	___ftmul@f2+1,w
  5991  06A2  00B2               	movwf	??___ftmul+1
  5992  06A3  0830               	movf	___ftmul@f2+2,w
  5993  06A4  00B3               	movwf	??___ftmul+2
  5994  06A5  3010               	movlw	16
  5995  06A6                     u3945:	
  5996  06A6  1003               	clrc
  5997  06A7  0CB3               	rrf	??___ftmul+2,f
  5998  06A8  0CB2               	rrf	??___ftmul+1,f
  5999  06A9  0CB1               	rrf	??___ftmul,f
  6000  06AA  3EFF               	addlw	-1
  6001  06AB  1D03               	skipz
  6002  06AC  2EA6               	goto	u3945
  6003  06AD  0831               	movf	??___ftmul,w
  6004  06AE  00B4               	movwf	??___ftmul+3
  6005  06AF  0834               	movf	??___ftmul+3,w
  6006  06B0  06BA               	xorwf	___ftmul@sign,f
  6007  06B1  3080               	movlw	128
  6008  06B2  00B1               	movwf	??___ftmul
  6009  06B3  0831               	movf	??___ftmul,w
  6010  06B4  05BA               	andwf	___ftmul@sign,f
  6011  06B5  17AC               	bsf	___ftmul@f1+1,7
  6012  06B6  17AF               	bsf	___ftmul@f2+1,7
  6013  06B7  30FF               	movlw	255
  6014  06B8  05AE               	andwf	___ftmul@f2,f
  6015  06B9  30FF               	movlw	255
  6016  06BA  05AF               	andwf	___ftmul@f2+1,f
  6017  06BB  3000               	movlw	0
  6018  06BC  05B0               	andwf	___ftmul@f2+2,f
  6019  06BD  3000               	movlw	0
  6020  06BE  00B6               	movwf	___ftmul@f3_as_product
  6021  06BF  3000               	movlw	0
  6022  06C0  00B7               	movwf	___ftmul@f3_as_product+1
  6023  06C1  3000               	movlw	0
  6024  06C2  00B8               	movwf	___ftmul@f3_as_product+2
  6025  06C3  3007               	movlw	7
  6026  06C4  00B1               	movwf	??___ftmul
  6027  06C5  0831               	movf	??___ftmul,w
  6028  06C6  00B9               	movwf	___ftmul@cntr
  6029  06C7                     l3599:	
  6030  06C7  1C2B               	btfss	___ftmul@f1,0
  6031  06C8  2ED7               	goto	l3603
  6032  06C9  082E               	movf	___ftmul@f2,w
  6033  06CA  07B6               	addwf	___ftmul@f3_as_product,f
  6034  06CB  082F               	movf	___ftmul@f2+1,w
  6035  06CC  1103               	clrz
  6036  06CD  1803               	skipnc
  6037  06CE  0A2F               	incf	___ftmul@f2+1,w
  6038  06CF  1D03               	btfss	3,2
  6039  06D0  07B7               	addwf	___ftmul@f3_as_product+1,f
  6040  06D1  0830               	movf	___ftmul@f2+2,w
  6041  06D2  1103               	clrz
  6042  06D3  1803               	skipnc
  6043  06D4  0A30               	incf	___ftmul@f2+2,w
  6044  06D5  1D03               	btfss	3,2
  6045  06D6  07B8               	addwf	___ftmul@f3_as_product+2,f
  6046  06D7                     l3603:	
  6047  06D7  3001               	movlw	1
  6048  06D8                     u3975:	
  6049  06D8  1003               	clrc
  6050  06D9  0CAD               	rrf	___ftmul@f1+2,f
  6051  06DA  0CAC               	rrf	___ftmul@f1+1,f
  6052  06DB  0CAB               	rrf	___ftmul@f1,f
  6053  06DC  3EFF               	addlw	-1
  6054  06DD  1D03               	skipz
  6055  06DE  2ED8               	goto	u3975
  6056  06DF  3001               	movlw	1
  6057  06E0                     u3985:	
  6058  06E0  1003               	clrc
  6059  06E1  0DAE               	rlf	___ftmul@f2,f
  6060  06E2  0DAF               	rlf	___ftmul@f2+1,f
  6061  06E3  0DB0               	rlf	___ftmul@f2+2,f
  6062  06E4  3EFF               	addlw	-1
  6063  06E5  1D03               	skipz
  6064  06E6  2EE0               	goto	u3985
  6065  06E7  3001               	movlw	1
  6066  06E8  02B9               	subwf	___ftmul@cntr,f
  6067  06E9  1D03               	btfss	3,2
  6068  06EA  2EC7               	goto	l3599
  6069  06EB  3009               	movlw	9
  6070  06EC  00B1               	movwf	??___ftmul
  6071  06ED  0831               	movf	??___ftmul,w
  6072  06EE  00B9               	movwf	___ftmul@cntr
  6073  06EF                     l3611:	
  6074  06EF  1C2B               	btfss	___ftmul@f1,0
  6075  06F0  2EFF               	goto	l3615
  6076  06F1  082E               	movf	___ftmul@f2,w
  6077  06F2  07B6               	addwf	___ftmul@f3_as_product,f
  6078  06F3  082F               	movf	___ftmul@f2+1,w
  6079  06F4  1103               	clrz
  6080  06F5  1803               	skipnc
  6081  06F6  0A2F               	incf	___ftmul@f2+1,w
  6082  06F7  1D03               	btfss	3,2
  6083  06F8  07B7               	addwf	___ftmul@f3_as_product+1,f
  6084  06F9  0830               	movf	___ftmul@f2+2,w
  6085  06FA  1103               	clrz
  6086  06FB  1803               	skipnc
  6087  06FC  0A30               	incf	___ftmul@f2+2,w
  6088  06FD  1D03               	btfss	3,2
  6089  06FE  07B8               	addwf	___ftmul@f3_as_product+2,f
  6090  06FF                     l3615:	
  6091  06FF  3001               	movlw	1
  6092  0700                     u4025:	
  6093  0700  1003               	clrc
  6094  0701  0CAD               	rrf	___ftmul@f1+2,f
  6095  0702  0CAC               	rrf	___ftmul@f1+1,f
  6096  0703  0CAB               	rrf	___ftmul@f1,f
  6097  0704  3EFF               	addlw	-1
  6098  0705  1D03               	skipz
  6099  0706  2F00               	goto	u4025
  6100  0707  3001               	movlw	1
  6101  0708                     u4035:	
  6102  0708  1003               	clrc
  6103  0709  0CB8               	rrf	___ftmul@f3_as_product+2,f
  6104  070A  0CB7               	rrf	___ftmul@f3_as_product+1,f
  6105  070B  0CB6               	rrf	___ftmul@f3_as_product,f
  6106  070C  3EFF               	addlw	-1
  6107  070D  1D03               	skipz
  6108  070E  2F08               	goto	u4035
  6109  070F  3001               	movlw	1
  6110  0710  02B9               	subwf	___ftmul@cntr,f
  6111  0711  1D03               	btfss	3,2
  6112  0712  2EEF               	goto	l3611
  6113  0713  0836               	movf	___ftmul@f3_as_product,w
  6114  0714  00A0               	movwf	___ftpack@arg
  6115  0715  0837               	movf	___ftmul@f3_as_product+1,w
  6116  0716  00A1               	movwf	___ftpack@arg+1
  6117  0717  0838               	movf	___ftmul@f3_as_product+2,w
  6118  0718  00A2               	movwf	___ftpack@arg+2
  6119  0719  0835               	movf	___ftmul@exp,w
  6120  071A  00B1               	movwf	??___ftmul
  6121  071B  0831               	movf	??___ftmul,w
  6122  071C  00A3               	movwf	___ftpack@exp
  6123  071D  083A               	movf	___ftmul@sign,w
  6124  071E  00B2               	movwf	??___ftmul+1
  6125  071F  0832               	movf	??___ftmul+1,w
  6126  0720  00A4               	movwf	___ftpack@sign
  6127  0721  120A  158A  2683   	fcall	___ftpack
  6128  0724  1283               	bcf	3,5	;RP0=0, select bank0
  6129  0725  1303               	bcf	3,6	;RP1=0, select bank0
  6130  0726  0820               	movf	?___ftpack,w
  6131  0727  00AB               	movwf	?___ftmul
  6132  0728  0821               	movf	?___ftpack+1,w
  6133  0729  00AC               	movwf	?___ftmul+1
  6134  072A  0822               	movf	?___ftpack+2,w
  6135  072B  00AD               	movwf	?___ftmul+2
  6136  072C  0008               	return
  6137  072D                     __end_of___ftmul:	
  6138                           
  6139                           	psect	text39
  6140  037A                     __ptext39:	
  6141 ;; *************** function ___ftadd *****************
  6142 ;; Defined at:
  6143 ;;		line 86 in file "/opt/microchip/xc8/v1.35/sources/common/ftadd.c"
  6144 ;; Parameters:    Size  Location     Type
  6145 ;;  f1              3   27[BANK0 ] float 
  6146 ;;  f2              3   30[BANK0 ] float 
  6147 ;; Auto vars:     Size  Location     Type
  6148 ;;  exp1            1   39[BANK0 ] unsigned char 
  6149 ;;  exp2            1   38[BANK0 ] unsigned char 
  6150 ;;  sign            1   37[BANK0 ] unsigned char 
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  3   27[BANK0 ] float 
  6153 ;; Registers used:
  6154 ;;		wreg, status,2, status,0, pclath, cstack
  6155 ;; Tracked objects:
  6156 ;;		On entry : 0/0
  6157 ;;		On exit  : 0/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6160 ;;      Params:         0       6       0       0       0
  6161 ;;      Locals:         0       3       0       0       0
  6162 ;;      Temps:          0       4       0       0       0
  6163 ;;      Totals:         0      13       0       0       0
  6164 ;;Total ram usage:       13 bytes
  6165 ;; Hardware stack levels used:    1
  6166 ;; Hardware stack levels required when called:    3
  6167 ;; This function calls:
  6168 ;;		___ftpack
  6169 ;; This function is called by:
  6170 ;;		_main
  6171 ;; This function uses a non-reentrant model
  6172 ;;
  6173                           
  6174                           
  6175                           ;psect for function ___ftadd
  6176  037A                     ___ftadd:	
  6177                           
  6178                           ;incstack = 0
  6179                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6180  037A  1283               	bcf	3,5	;RP0=0, select bank0
  6181  037B  1303               	bcf	3,6	;RP1=0, select bank0
  6182  037C  083B               	movf	___ftadd@f1,w
  6183  037D  00C1               	movwf	??___ftadd
  6184  037E  083C               	movf	___ftadd@f1+1,w
  6185  037F  00C2               	movwf	??___ftadd+1
  6186  0380  083D               	movf	___ftadd@f1+2,w
  6187  0381  00C3               	movwf	??___ftadd+2
  6188  0382  1003               	clrc
  6189  0383  0D42               	rlf	??___ftadd+1,w
  6190  0384  0D43               	rlf	??___ftadd+2,w
  6191  0385  00C4               	movwf	??___ftadd+3
  6192  0386  0844               	movf	??___ftadd+3,w
  6193  0387  00C7               	movwf	___ftadd@exp1
  6194  0388  083E               	movf	___ftadd@f2,w
  6195  0389  00C1               	movwf	??___ftadd
  6196  038A  083F               	movf	___ftadd@f2+1,w
  6197  038B  00C2               	movwf	??___ftadd+1
  6198  038C  0840               	movf	___ftadd@f2+2,w
  6199  038D  00C3               	movwf	??___ftadd+2
  6200  038E  1003               	clrc
  6201  038F  0D42               	rlf	??___ftadd+1,w
  6202  0390  0D43               	rlf	??___ftadd+2,w
  6203  0391  00C4               	movwf	??___ftadd+3
  6204  0392  0844               	movf	??___ftadd+3,w
  6205  0393  00C6               	movwf	___ftadd@exp2
  6206  0394  0847               	movf	___ftadd@exp1,w
  6207  0395  1903               	btfsc	3,2
  6208  0396  2BA3               	goto	l3511
  6209  0397  0846               	movf	___ftadd@exp2,w
  6210  0398  0247               	subwf	___ftadd@exp1,w
  6211  0399  1803               	skipnc
  6212  039A  2BAA               	goto	l3515
  6213  039B  0347               	decf	___ftadd@exp1,w
  6214  039C  3AFF               	xorlw	255
  6215  039D  0746               	addwf	___ftadd@exp2,w
  6216  039E  00C1               	movwf	??___ftadd
  6217  039F  3019               	movlw	25
  6218  03A0  0241               	subwf	??___ftadd,w
  6219  03A1  1C03               	skipc
  6220  03A2  2BAA               	goto	l3515
  6221  03A3                     l3511:	
  6222  03A3  083E               	movf	___ftadd@f2,w
  6223  03A4  00BB               	movwf	?___ftadd
  6224  03A5  083F               	movf	___ftadd@f2+1,w
  6225  03A6  00BC               	movwf	?___ftadd+1
  6226  03A7  0840               	movf	___ftadd@f2+2,w
  6227  03A8  00BD               	movwf	?___ftadd+2
  6228  03A9  0008               	return
  6229  03AA                     l3515:	
  6230  03AA  0846               	movf	___ftadd@exp2,w
  6231  03AB  1903               	btfsc	3,2
  6232  03AC  0008               	return
  6233  03AD  0847               	movf	___ftadd@exp1,w
  6234  03AE  0246               	subwf	___ftadd@exp2,w
  6235  03AF  1803               	skipnc
  6236  03B0  2BB9               	goto	l3521
  6237  03B1  0346               	decf	___ftadd@exp2,w
  6238  03B2  3AFF               	xorlw	255
  6239  03B3  0747               	addwf	___ftadd@exp1,w
  6240  03B4  00C1               	movwf	??___ftadd
  6241  03B5  3019               	movlw	25
  6242  03B6  0241               	subwf	??___ftadd,w
  6243  03B7  1803               	btfsc	3,0
  6244  03B8  0008               	return
  6245  03B9                     l3521:	
  6246  03B9  3006               	movlw	6
  6247  03BA  00C1               	movwf	??___ftadd
  6248  03BB  0841               	movf	??___ftadd,w
  6249  03BC  00C5               	movwf	___ftadd@sign
  6250  03BD  1BBD               	btfsc	___ftadd@f1+2,7
  6251  03BE  17C5               	bsf	___ftadd@sign,7
  6252  03BF  1BC0               	btfsc	___ftadd@f2+2,7
  6253  03C0  1745               	bsf	___ftadd@sign,6
  6254  03C1  17BC               	bsf	___ftadd@f1+1,7
  6255  03C2  30FF               	movlw	255
  6256  03C3  05BB               	andwf	___ftadd@f1,f
  6257  03C4  30FF               	movlw	255
  6258  03C5  05BC               	andwf	___ftadd@f1+1,f
  6259  03C6  3000               	movlw	0
  6260  03C7  05BD               	andwf	___ftadd@f1+2,f
  6261  03C8  17BF               	bsf	___ftadd@f2+1,7
  6262  03C9  30FF               	movlw	255
  6263  03CA  05BE               	andwf	___ftadd@f2,f
  6264  03CB  30FF               	movlw	255
  6265  03CC  05BF               	andwf	___ftadd@f2+1,f
  6266  03CD  3000               	movlw	0
  6267  03CE  05C0               	andwf	___ftadd@f2+2,f
  6268  03CF  0846               	movf	___ftadd@exp2,w
  6269  03D0  0247               	subwf	___ftadd@exp1,w
  6270  03D1  1803               	skipnc
  6271  03D2  2BF9               	goto	l3543
  6272  03D3                     l3533:	
  6273  03D3  3001               	movlw	1
  6274  03D4                     u3765:	
  6275  03D4  1003               	clrc
  6276  03D5  0DBE               	rlf	___ftadd@f2,f
  6277  03D6  0DBF               	rlf	___ftadd@f2+1,f
  6278  03D7  0DC0               	rlf	___ftadd@f2+2,f
  6279  03D8  3EFF               	addlw	-1
  6280  03D9  1D03               	skipz
  6281  03DA  2BD4               	goto	u3765
  6282  03DB  3001               	movlw	1
  6283  03DC  02C6               	subwf	___ftadd@exp2,f
  6284  03DD  0846               	movf	___ftadd@exp2,w
  6285  03DE  0647               	xorwf	___ftadd@exp1,w
  6286  03DF  1903               	skipnz
  6287  03E0  2BF4               	goto	l3541
  6288  03E1  3001               	movlw	1
  6289  03E2  02C5               	subwf	___ftadd@sign,f
  6290  03E3  0845               	movf	___ftadd@sign,w
  6291  03E4  3907               	andlw	7
  6292  03E5  1903               	btfsc	3,2
  6293  03E6  2BF4               	goto	l3541
  6294  03E7  2BD3               	goto	l3533
  6295  03E8                     l3539:	
  6296  03E8  3001               	movlw	1
  6297  03E9                     u3795:	
  6298  03E9  1003               	clrc
  6299  03EA  0CBD               	rrf	___ftadd@f1+2,f
  6300  03EB  0CBC               	rrf	___ftadd@f1+1,f
  6301  03EC  0CBB               	rrf	___ftadd@f1,f
  6302  03ED  3EFF               	addlw	-1
  6303  03EE  1D03               	skipz
  6304  03EF  2BE9               	goto	u3795
  6305  03F0  3001               	movlw	1
  6306  03F1  00C1               	movwf	??___ftadd
  6307  03F2  0841               	movf	??___ftadd,w
  6308  03F3  07C7               	addwf	___ftadd@exp1,f
  6309  03F4                     l3541:	
  6310  03F4  0847               	movf	___ftadd@exp1,w
  6311  03F5  0646               	xorwf	___ftadd@exp2,w
  6312  03F6  1903               	btfsc	3,2
  6313  03F7  2C22               	goto	l691
  6314  03F8  2BE8               	goto	l3539
  6315  03F9                     l3543:	
  6316  03F9  0847               	movf	___ftadd@exp1,w
  6317  03FA  0246               	subwf	___ftadd@exp2,w
  6318  03FB  1803               	skipnc
  6319  03FC  2C22               	goto	l691
  6320  03FD                     l3545:	
  6321  03FD  3001               	movlw	1
  6322  03FE                     u3825:	
  6323  03FE  1003               	clrc
  6324  03FF  0DBB               	rlf	___ftadd@f1,f
  6325  0400  0DBC               	rlf	___ftadd@f1+1,f
  6326  0401  0DBD               	rlf	___ftadd@f1+2,f
  6327  0402  3EFF               	addlw	-1
  6328  0403  1D03               	skipz
  6329  0404  2BFE               	goto	u3825
  6330  0405  3001               	movlw	1
  6331  0406  02C7               	subwf	___ftadd@exp1,f
  6332  0407  0846               	movf	___ftadd@exp2,w
  6333  0408  0647               	xorwf	___ftadd@exp1,w
  6334  0409  1903               	skipnz
  6335  040A  2C1E               	goto	l3553
  6336  040B  3001               	movlw	1
  6337  040C  02C5               	subwf	___ftadd@sign,f
  6338  040D  0845               	movf	___ftadd@sign,w
  6339  040E  3907               	andlw	7
  6340  040F  1903               	btfsc	3,2
  6341  0410  2C1E               	goto	l3553
  6342  0411  2BFD               	goto	l3545
  6343  0412                     l3551:	
  6344  0412  3001               	movlw	1
  6345  0413                     u3855:	
  6346  0413  1003               	clrc
  6347  0414  0CC0               	rrf	___ftadd@f2+2,f
  6348  0415  0CBF               	rrf	___ftadd@f2+1,f
  6349  0416  0CBE               	rrf	___ftadd@f2,f
  6350  0417  3EFF               	addlw	-1
  6351  0418  1D03               	skipz
  6352  0419  2C13               	goto	u3855
  6353  041A  3001               	movlw	1
  6354  041B  00C1               	movwf	??___ftadd
  6355  041C  0841               	movf	??___ftadd,w
  6356  041D  07C6               	addwf	___ftadd@exp2,f
  6357  041E                     l3553:	
  6358  041E  0847               	movf	___ftadd@exp1,w
  6359  041F  0646               	xorwf	___ftadd@exp2,w
  6360  0420  1D03               	skipz
  6361  0421  2C12               	goto	l3551
  6362  0422                     l691:	
  6363  0422  1FC5               	btfss	___ftadd@sign,7
  6364  0423  2C34               	goto	l3557
  6365  0424  30FF               	movlw	255
  6366  0425  06BB               	xorwf	___ftadd@f1,f
  6367  0426  30FF               	movlw	255
  6368  0427  06BC               	xorwf	___ftadd@f1+1,f
  6369  0428  30FF               	movlw	255
  6370  0429  06BD               	xorwf	___ftadd@f1+2,f
  6371  042A  3001               	movlw	1
  6372  042B  07BB               	addwf	___ftadd@f1,f
  6373  042C  3000               	movlw	0
  6374  042D  1803               	skipnc
  6375  042E  3001               	movlw	1
  6376  042F  07BC               	addwf	___ftadd@f1+1,f
  6377  0430  3000               	movlw	0
  6378  0431  1803               	skipnc
  6379  0432  3001               	movlw	1
  6380  0433  07BD               	addwf	___ftadd@f1+2,f
  6381  0434                     l3557:	
  6382  0434  1F45               	btfss	___ftadd@sign,6
  6383  0435  2C46               	goto	l3561
  6384  0436  30FF               	movlw	255
  6385  0437  06BE               	xorwf	___ftadd@f2,f
  6386  0438  30FF               	movlw	255
  6387  0439  06BF               	xorwf	___ftadd@f2+1,f
  6388  043A  30FF               	movlw	255
  6389  043B  06C0               	xorwf	___ftadd@f2+2,f
  6390  043C  3001               	movlw	1
  6391  043D  07BE               	addwf	___ftadd@f2,f
  6392  043E  3000               	movlw	0
  6393  043F  1803               	skipnc
  6394  0440  3001               	movlw	1
  6395  0441  07BF               	addwf	___ftadd@f2+1,f
  6396  0442  3000               	movlw	0
  6397  0443  1803               	skipnc
  6398  0444  3001               	movlw	1
  6399  0445  07C0               	addwf	___ftadd@f2+2,f
  6400  0446                     l3561:	
  6401  0446  01C5               	clrf	___ftadd@sign
  6402  0447  083B               	movf	___ftadd@f1,w
  6403  0448  07BE               	addwf	___ftadd@f2,f
  6404  0449  083C               	movf	___ftadd@f1+1,w
  6405  044A  1103               	clrz
  6406  044B  1803               	skipnc
  6407  044C  0A3C               	incf	___ftadd@f1+1,w
  6408  044D  1D03               	btfss	3,2
  6409  044E  07BF               	addwf	___ftadd@f2+1,f
  6410  044F  083D               	movf	___ftadd@f1+2,w
  6411  0450  1103               	clrz
  6412  0451  1803               	skipnc
  6413  0452  0A3D               	incf	___ftadd@f1+2,w
  6414  0453  1D03               	btfss	3,2
  6415  0454  07C0               	addwf	___ftadd@f2+2,f
  6416  0455  1FC0               	btfss	___ftadd@f2+2,7
  6417  0456  2C69               	goto	l3571
  6418  0457  30FF               	movlw	255
  6419  0458  06BE               	xorwf	___ftadd@f2,f
  6420  0459  30FF               	movlw	255
  6421  045A  06BF               	xorwf	___ftadd@f2+1,f
  6422  045B  30FF               	movlw	255
  6423  045C  06C0               	xorwf	___ftadd@f2+2,f
  6424  045D  3001               	movlw	1
  6425  045E  07BE               	addwf	___ftadd@f2,f
  6426  045F  3000               	movlw	0
  6427  0460  1803               	skipnc
  6428  0461  3001               	movlw	1
  6429  0462  07BF               	addwf	___ftadd@f2+1,f
  6430  0463  3000               	movlw	0
  6431  0464  1803               	skipnc
  6432  0465  3001               	movlw	1
  6433  0466  07C0               	addwf	___ftadd@f2+2,f
  6434  0467  01C5               	clrf	___ftadd@sign
  6435  0468  0AC5               	incf	___ftadd@sign,f
  6436  0469                     l3571:	
  6437  0469  083E               	movf	___ftadd@f2,w
  6438  046A  00A0               	movwf	___ftpack@arg
  6439  046B  083F               	movf	___ftadd@f2+1,w
  6440  046C  00A1               	movwf	___ftpack@arg+1
  6441  046D  0840               	movf	___ftadd@f2+2,w
  6442  046E  00A2               	movwf	___ftpack@arg+2
  6443  046F  0847               	movf	___ftadd@exp1,w
  6444  0470  00C1               	movwf	??___ftadd
  6445  0471  0841               	movf	??___ftadd,w
  6446  0472  00A3               	movwf	___ftpack@exp
  6447  0473  0845               	movf	___ftadd@sign,w
  6448  0474  00C2               	movwf	??___ftadd+1
  6449  0475  0842               	movf	??___ftadd+1,w
  6450  0476  00A4               	movwf	___ftpack@sign
  6451  0477  120A  158A  2683   	fcall	___ftpack
  6452  047A  1283               	bcf	3,5	;RP0=0, select bank0
  6453  047B  1303               	bcf	3,6	;RP1=0, select bank0
  6454  047C  0820               	movf	?___ftpack,w
  6455  047D  00BB               	movwf	?___ftadd
  6456  047E  0821               	movf	?___ftpack+1,w
  6457  047F  00BC               	movwf	?___ftadd+1
  6458  0480  0822               	movf	?___ftpack+2,w
  6459  0481  00BD               	movwf	?___ftadd+2
  6460  0482  0008               	return
  6461  0483                     __end_of___ftadd:	
  6462                           
  6463                           	psect	text40
  6464  0E83                     __ptext40:	
  6465 ;; *************** function ___ftpack *****************
  6466 ;; Defined at:
  6467 ;;		line 62 in file "/opt/microchip/xc8/v1.35/sources/common/float.c"
  6468 ;; Parameters:    Size  Location     Type
  6469 ;;  arg             3    0[BANK0 ] unsigned um
  6470 ;;  exp             1    3[BANK0 ] unsigned char 
  6471 ;;  sign            1    4[BANK0 ] unsigned char 
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;		None
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  3    0[BANK0 ] float 
  6476 ;; Registers used:
  6477 ;;		wreg, status,2, status,0
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6483 ;;      Params:         0       5       0       0       0
  6484 ;;      Locals:         0       0       0       0       0
  6485 ;;      Temps:          0       3       0       0       0
  6486 ;;      Totals:         0       8       0       0       0
  6487 ;;Total ram usage:        8 bytes
  6488 ;; Hardware stack levels used:    1
  6489 ;; Hardware stack levels required when called:    2
  6490 ;; This function calls:
  6491 ;;		Nothing
  6492 ;; This function is called by:
  6493 ;;		___ftadd
  6494 ;;		___ftmul
  6495 ;;		___lbtoft
  6496 ;;		___lwtoft
  6497 ;; This function uses a non-reentrant model
  6498 ;;
  6499                           
  6500                           
  6501                           ;psect for function ___ftpack
  6502  0E83                     ___ftpack:	
  6503                           
  6504                           ;incstack = 0
  6505                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6506  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  6507  0E84  1303               	bcf	3,6	;RP1=0, select bank0
  6508  0E85  0823               	movf	___ftpack@exp,w
  6509  0E86  1903               	btfsc	3,2
  6510  0E87  2E8D               	goto	l3201
  6511  0E88  0822               	movf	___ftpack@arg+2,w
  6512  0E89  0421               	iorwf	___ftpack@arg+1,w
  6513  0E8A  0420               	iorwf	___ftpack@arg,w
  6514  0E8B  1D03               	skipz
  6515  0E8C  2EA0               	goto	l3207
  6516  0E8D                     l3201:	
  6517  0E8D  3000               	movlw	0
  6518  0E8E  00A0               	movwf	?___ftpack
  6519  0E8F  3000               	movlw	0
  6520  0E90  00A1               	movwf	?___ftpack+1
  6521  0E91  3000               	movlw	0
  6522  0E92  00A2               	movwf	?___ftpack+2
  6523  0E93  0008               	return
  6524  0E94                     l3205:	
  6525  0E94  3001               	movlw	1
  6526  0E95  00A5               	movwf	??___ftpack
  6527  0E96  0825               	movf	??___ftpack,w
  6528  0E97  07A3               	addwf	___ftpack@exp,f
  6529  0E98  3001               	movlw	1
  6530  0E99                     u3325:	
  6531  0E99  1003               	clrc
  6532  0E9A  0CA2               	rrf	___ftpack@arg+2,f
  6533  0E9B  0CA1               	rrf	___ftpack@arg+1,f
  6534  0E9C  0CA0               	rrf	___ftpack@arg,f
  6535  0E9D  3EFF               	addlw	-1
  6536  0E9E  1D03               	skipz
  6537  0E9F  2E99               	goto	u3325
  6538  0EA0                     l3207:	
  6539  0EA0  30FE               	movlw	254
  6540  0EA1  0522               	andwf	___ftpack@arg+2,w
  6541  0EA2  1903               	btfsc	3,2
  6542  0EA3  2EBB               	goto	l660
  6543  0EA4  2E94               	goto	l3205
  6544  0EA5                     l3209:	
  6545  0EA5  3001               	movlw	1
  6546  0EA6  00A5               	movwf	??___ftpack
  6547  0EA7  0825               	movf	??___ftpack,w
  6548  0EA8  07A3               	addwf	___ftpack@exp,f
  6549  0EA9  3001               	movlw	1
  6550  0EAA  07A0               	addwf	___ftpack@arg,f
  6551  0EAB  3000               	movlw	0
  6552  0EAC  1803               	skipnc
  6553  0EAD  3001               	movlw	1
  6554  0EAE  07A1               	addwf	___ftpack@arg+1,f
  6555  0EAF  3000               	movlw	0
  6556  0EB0  1803               	skipnc
  6557  0EB1  3001               	movlw	1
  6558  0EB2  07A2               	addwf	___ftpack@arg+2,f
  6559  0EB3  3001               	movlw	1
  6560  0EB4                     u3345:	
  6561  0EB4  1003               	clrc
  6562  0EB5  0CA2               	rrf	___ftpack@arg+2,f
  6563  0EB6  0CA1               	rrf	___ftpack@arg+1,f
  6564  0EB7  0CA0               	rrf	___ftpack@arg,f
  6565  0EB8  3EFF               	addlw	-1
  6566  0EB9  1D03               	skipz
  6567  0EBA  2EB4               	goto	u3345
  6568  0EBB                     l660:	
  6569  0EBB  30FF               	movlw	255
  6570  0EBC  0522               	andwf	___ftpack@arg+2,w
  6571  0EBD  1903               	btfsc	3,2
  6572  0EBE  2ECA               	goto	l3217
  6573  0EBF  2EA5               	goto	l3209
  6574  0EC0                     l3215:	
  6575  0EC0  3001               	movlw	1
  6576  0EC1  02A3               	subwf	___ftpack@exp,f
  6577  0EC2  3001               	movlw	1
  6578  0EC3                     u3365:	
  6579  0EC3  1003               	clrc
  6580  0EC4  0DA0               	rlf	___ftpack@arg,f
  6581  0EC5  0DA1               	rlf	___ftpack@arg+1,f
  6582  0EC6  0DA2               	rlf	___ftpack@arg+2,f
  6583  0EC7  3EFF               	addlw	-1
  6584  0EC8  1D03               	skipz
  6585  0EC9  2EC3               	goto	u3365
  6586  0ECA                     l3217:	
  6587  0ECA  1BA1               	btfsc	___ftpack@arg+1,7
  6588  0ECB  2ED0               	goto	l667
  6589  0ECC  3002               	movlw	2
  6590  0ECD  0223               	subwf	___ftpack@exp,w
  6591  0ECE  1803               	skipnc
  6592  0ECF  2EC0               	goto	l3215
  6593  0ED0                     l667:	
  6594  0ED0  1823               	btfsc	___ftpack@exp,0
  6595  0ED1  2ED8               	goto	l668
  6596  0ED2  30FF               	movlw	255
  6597  0ED3  05A0               	andwf	___ftpack@arg,f
  6598  0ED4  307F               	movlw	127
  6599  0ED5  05A1               	andwf	___ftpack@arg+1,f
  6600  0ED6  30FF               	movlw	255
  6601  0ED7  05A2               	andwf	___ftpack@arg+2,f
  6602  0ED8                     l668:	
  6603  0ED8  1003               	clrc
  6604  0ED9  0CA3               	rrf	___ftpack@exp,f
  6605  0EDA  0823               	movf	___ftpack@exp,w
  6606  0EDB  00A5               	movwf	??___ftpack
  6607  0EDC  01A6               	clrf	??___ftpack+1
  6608  0EDD  01A7               	clrf	??___ftpack+2
  6609  0EDE  3010               	movlw	16
  6610  0EDF                     u3405:	
  6611  0EDF  1003               	clrc
  6612  0EE0  0DA5               	rlf	??___ftpack,f
  6613  0EE1  0DA6               	rlf	??___ftpack+1,f
  6614  0EE2  0DA7               	rlf	??___ftpack+2,f
  6615  0EE3  3EFF               	addlw	-1
  6616  0EE4  1D03               	skipz
  6617  0EE5  2EDF               	goto	u3405
  6618  0EE6  0825               	movf	??___ftpack,w
  6619  0EE7  04A0               	iorwf	___ftpack@arg,f
  6620  0EE8  0826               	movf	??___ftpack+1,w
  6621  0EE9  04A1               	iorwf	___ftpack@arg+1,f
  6622  0EEA  0827               	movf	??___ftpack+2,w
  6623  0EEB  04A2               	iorwf	___ftpack@arg+2,f
  6624  0EEC  0824               	movf	___ftpack@sign,w
  6625  0EED  1903               	btfsc	3,2
  6626  0EEE  0008               	return
  6627  0EEF  17A2               	bsf	___ftpack@arg+2,7
  6628  0EF0  0008               	return
  6629  0EF1                     __end_of___ftpack:	
  6630                           
  6631                           	psect	text41
  6632  0A98                     __ptext41:	
  6633 ;; *************** function ___eetoi *****************
  6634 ;; Defined at:
  6635 ;;		line 56 in file "/opt/microchip/xc8/v1.35/sources/pic/eeprom.c"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;  addr            1    wreg     PTR eeprom void 
  6638 ;;		 -> last_channel(2), 
  6639 ;; Auto vars:     Size  Location     Type
  6640 ;;  addr            1    8[BANK0 ] PTR eeprom void 
  6641 ;;		 -> last_channel(2), 
  6642 ;;  data            2    9[BANK0 ] unsigned int 
  6643 ;; Return value:  Size  Location     Type
  6644 ;;                  2    4[BANK0 ] unsigned int 
  6645 ;; Registers used:
  6646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6647 ;; Tracked objects:
  6648 ;;		On entry : 0/0
  6649 ;;		On exit  : 0/0
  6650 ;;		Unchanged: 0/0
  6651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6652 ;;      Params:         0       2       0       0       0
  6653 ;;      Locals:         0       3       0       0       0
  6654 ;;      Temps:          0       2       0       0       0
  6655 ;;      Totals:         0       7       0       0       0
  6656 ;;Total ram usage:        7 bytes
  6657 ;; Hardware stack levels used:    1
  6658 ;; Hardware stack levels required when called:    3
  6659 ;; This function calls:
  6660 ;;		_eecpymem
  6661 ;; This function is called by:
  6662 ;;		_main
  6663 ;; This function uses a non-reentrant model
  6664 ;;
  6665                           
  6666                           
  6667                           ;psect for function ___eetoi
  6668  0A98                     ___eetoi:	
  6669                           
  6670                           ;incstack = 0
  6671                           ; Regs used in ___eetoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6672                           ;___eetoi@addr stored from wreg
  6673  0A98  1283               	bcf	3,5	;RP0=0, select bank0
  6674  0A99  1303               	bcf	3,6	;RP1=0, select bank0
  6675  0A9A  00A8               	movwf	___eetoi@addr
  6676  0A9B  0828               	movf	___eetoi@addr,w
  6677  0A9C  00A6               	movwf	??___eetoi
  6678  0A9D  0826               	movf	??___eetoi,w
  6679  0A9E  00A0               	movwf	eecpymem@from
  6680  0A9F  3002               	movlw	2
  6681  0AA0  00A7               	movwf	??___eetoi+1
  6682  0AA1  0827               	movf	??___eetoi+1,w
  6683  0AA2  00A1               	movwf	eecpymem@size
  6684  0AA3  3029               	movlw	(low (___eetoi@data| 0))& (0+255)
  6685  0AA4  120A  158A  24D0   	fcall	_eecpymem
  6686  0AA7  1283               	bcf	3,5	;RP0=0, select bank0
  6687  0AA8  1303               	bcf	3,6	;RP1=0, select bank0
  6688  0AA9  082A               	movf	___eetoi@data+1,w
  6689  0AAA  00A5               	movwf	?___eetoi+1
  6690  0AAB  0829               	movf	___eetoi@data,w
  6691  0AAC  00A4               	movwf	?___eetoi
  6692  0AAD  0008               	return
  6693  0AAE                     __end_of___eetoi:	
  6694                           
  6695                           	psect	text42
  6696  0CD0                     __ptext42:	
  6697 ;; *************** function _eecpymem *****************
  6698 ;; Defined at:
  6699 ;;		line 6 in file "/opt/microchip/xc8/v1.35/sources/pic/eeprom.c"
  6700 ;; Parameters:    Size  Location     Type
  6701 ;;  to              1    wreg     PTR volatile unsigned ch
  6702 ;;		 -> __eetofl@data(3), __eetoft@data(3), __eetol@data(4), __eetom@data(3), 
  6703 ;;		 -> __eetoi@data(2), __eetoc@data(1), 
  6704 ;;  from            1    0[BANK0 ] PTR eeprom unsigned char
  6705 ;;		 -> last_channel(2), 
  6706 ;;  size            1    1[BANK0 ] unsigned char 
  6707 ;; Auto vars:     Size  Location     Type
  6708 ;;  to              1    3[BANK0 ] PTR volatile unsigned ch
  6709 ;;		 -> __eetofl@data(3), __eetoft@data(3), __eetol@data(4), __eetom@data(3), 
  6710 ;;		 -> __eetoi@data(2), __eetoc@data(1), 
  6711 ;;  cp              1    2[BANK0 ] PTR volatile unsigned ch
  6712 ;;		 -> __eetofl@data(3), __eetoft@data(3), __eetol@data(4), __eetom@data(3), 
  6713 ;;		 -> __eetoi@data(2), __eetoc@data(1), 
  6714 ;; Return value:  Size  Location     Type
  6715 ;;		None               void
  6716 ;; Registers used:
  6717 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6718 ;; Tracked objects:
  6719 ;;		On entry : 0/0
  6720 ;;		On exit  : 0/0
  6721 ;;		Unchanged: 0/0
  6722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6723 ;;      Params:         0       2       0       0       0
  6724 ;;      Locals:         0       2       0       0       0
  6725 ;;      Temps:          1       0       0       0       0
  6726 ;;      Totals:         1       4       0       0       0
  6727 ;;Total ram usage:        5 bytes
  6728 ;; Hardware stack levels used:    1
  6729 ;; Hardware stack levels required when called:    2
  6730 ;; This function calls:
  6731 ;;		Nothing
  6732 ;; This function is called by:
  6733 ;;		___eetoi
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737                           
  6738                           ;psect for function _eecpymem
  6739  0CD0                     _eecpymem:	
  6740                           
  6741                           ;incstack = 0
  6742                           ; Regs used in _eecpymem: [wreg-fsr0h+status,2+status,0]
  6743                           ;eecpymem@to stored from wreg
  6744  0CD0  1283               	bcf	3,5	;RP0=0, select bank0
  6745  0CD1  1303               	bcf	3,6	;RP1=0, select bank0
  6746  0CD2  00A3               	movwf	eecpymem@to
  6747  0CD3  0823               	movf	eecpymem@to,w
  6748  0CD4  00F5               	movwf	??_eecpymem
  6749  0CD5  0875               	movf	??_eecpymem,w
  6750  0CD6  00A2               	movwf	eecpymem@cp
  6751  0CD7                     l436:	
  6752  0CD7  1683               	bsf	3,5	;RP0=1, select bank3
  6753  0CD8  1703               	bsf	3,6	;RP1=1, select bank3
  6754  0CD9  188C               	btfsc	12,1	;volsfr
  6755  0CDA  2CD7               	goto	l436
  6756  0CDB  1283               	bcf	3,5	;RP0=0, select bank0
  6757  0CDC  1303               	bcf	3,6	;RP1=0, select bank0
  6758  0CDD  0820               	movf	eecpymem@from,w
  6759  0CDE  1283               	bcf	3,5	;RP0=0, select bank2
  6760  0CDF  1703               	bsf	3,6	;RP1=1, select bank2
  6761  0CE0  008D               	movwf	13	;volatile
  6762  0CE1                     l3167:	
  6763  0CE1  3001               	movlw	1
  6764  0CE2  1283               	bcf	3,5	;RP0=0, select bank0
  6765  0CE3  1303               	bcf	3,6	;RP1=0, select bank0
  6766  0CE4  02A1               	subwf	eecpymem@size,f
  6767  0CE5  0A21               	incf	eecpymem@size,w
  6768  0CE6  1903               	btfsc	3,2
  6769  0CE7  0008               	return
  6770  0CE8                     l441:	
  6771  0CE8  1683               	bsf	3,5	;RP0=1, select bank3
  6772  0CE9  1703               	bsf	3,6	;RP1=1, select bank3
  6773  0CEA  188C               	btfsc	12,1	;volsfr
  6774  0CEB  2CE8               	goto	l441
  6775  0CEC  307F               	movlw	127
  6776  0CED  00F5               	movwf	??_eecpymem
  6777  0CEE  0875               	movf	??_eecpymem,w
  6778  0CEF  058C               	andwf	12,f	;volsfr
  6779  0CF0  140C               	bsf	12,0	;volsfr
  6780  0CF1  1283               	bcf	3,5	;RP0=0, select bank2
  6781  0CF2  1703               	bsf	3,6	;RP1=1, select bank2
  6782  0CF3  080C               	movf	12,w	;volatile
  6783  0CF4  00F5               	movwf	??_eecpymem
  6784  0CF5  1283               	bcf	3,5	;RP0=0, select bank0
  6785  0CF6  1303               	bcf	3,6	;RP1=0, select bank0
  6786  0CF7  0822               	movf	eecpymem@cp,w
  6787  0CF8  0084               	movwf	4
  6788  0CF9  0875               	movf	??_eecpymem,w
  6789  0CFA  1383               	bcf	3,7	;select IRP bank0
  6790  0CFB  0080               	movwf	0
  6791  0CFC  3001               	movlw	1
  6792  0CFD  00F5               	movwf	??_eecpymem
  6793  0CFE  0875               	movf	??_eecpymem,w
  6794  0CFF  07A2               	addwf	eecpymem@cp,f
  6795  0D00  3001               	movlw	1
  6796  0D01  00F5               	movwf	??_eecpymem
  6797  0D02  0875               	movf	??_eecpymem,w
  6798  0D03  1283               	bcf	3,5	;RP0=0, select bank2
  6799  0D04  1703               	bsf	3,6	;RP1=1, select bank2
  6800  0D05  078D               	addwf	13,f	;volatile
  6801  0D06  2CE1               	goto	l3167
  6802  0D07                     __end_of_eecpymem:	
  6803                           
  6804                           	psect	text43
  6805  0BCF                     __ptext43:	
  6806 ;; *************** function _isr *****************
  6807 ;; Defined at:
  6808 ;;		line 46 in file "main.c"
  6809 ;; Parameters:    Size  Location     Type
  6810 ;;		None
  6811 ;; Auto vars:     Size  Location     Type
  6812 ;;		None
  6813 ;; Return value:  Size  Location     Type
  6814 ;;		None               void
  6815 ;; Registers used:
  6816 ;;		wreg, status,2, status,0, pclath, cstack
  6817 ;; Tracked objects:
  6818 ;;		On entry : 0/0
  6819 ;;		On exit  : 0/0
  6820 ;;		Unchanged: 0/0
  6821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6822 ;;      Params:         0       0       0       0       0
  6823 ;;      Locals:         0       0       0       0       0
  6824 ;;      Temps:          5       0       0       0       0
  6825 ;;      Totals:         5       0       0       0       0
  6826 ;;Total ram usage:        5 bytes
  6827 ;; Hardware stack levels used:    1
  6828 ;; Hardware stack levels required when called:    1
  6829 ;; This function calls:
  6830 ;;		_hd44780_lightoff
  6831 ;; This function is called by:
  6832 ;;		Interrupt level 1
  6833 ;; This function uses a non-reentrant model
  6834 ;;
  6835                           
  6836                           
  6837                           ;psect for function _isr
  6838  0BCF                     _isr:	
  6839                           
  6840                           ;main.c: 48: if(PIR1bits.TMR1IF){
  6841  0BCF  1C0C               	btfss	12,0	;volatile
  6842  0BD0  2BE6               	goto	i1l60
  6843                           
  6844                           ;main.c: 49: scale++;
  6845  0BD1  3001               	movlw	1
  6846  0BD2  00F0               	movwf	??_isr
  6847  0BD3  0870               	movf	??_isr,w
  6848  0BD4  1683               	bsf	3,5	;RP0=1, select bank1
  6849  0BD5  1303               	bcf	3,6	;RP1=0, select bank1
  6850  0BD6  07C6               	addwf	_scale^(0+128),f
  6851                           
  6852                           ;main.c: 70: if( scale == 70 ){
  6853  0BD7  3046               	movlw	70
  6854  0BD8  0646               	xorwf	_scale^(0+128),w
  6855  0BD9  1D03               	btfss	3,2
  6856  0BDA  2BE3               	goto	i1l2729
  6857                           
  6858                           ;main.c: 71: hd44780_lightoff();
  6859  0BDB  120A  158A  2227  120A  158A  	fcall	_hd44780_lightoff
  6860                           
  6861                           ;main.c: 76: scale = 0;
  6862  0BE0  1683               	bsf	3,5	;RP0=1, select bank1
  6863  0BE1  1303               	bcf	3,6	;RP1=0, select bank1
  6864  0BE2  01C6               	clrf	_scale^(0+128)
  6865  0BE3                     i1l2729:	
  6866                           
  6867                           ;main.c: 77: }
  6868                           ;main.c: 83: PIR1bits.TMR1IF = 0;
  6869  0BE3  1283               	bcf	3,5	;RP0=0, select bank0
  6870  0BE4  1303               	bcf	3,6	;RP1=0, select bank0
  6871  0BE5  100C               	bcf	12,0	;volatile
  6872  0BE6                     i1l60:	
  6873  0BE6  0874               	movf	??_isr+4,w
  6874  0BE7  00FF               	movwf	127
  6875  0BE8  0873               	movf	??_isr+3,w
  6876  0BE9  008A               	movwf	10
  6877  0BEA  0872               	movf	??_isr+2,w
  6878  0BEB  0084               	movwf	4
  6879  0BEC  0E71               	swapf	(??_isr+1)^(0+-128),w
  6880  0BED  0083               	movwf	3
  6881  0BEE  0EFE               	swapf	126,f
  6882  0BEF  0E7E               	swapf	126,w
  6883  0BF0  0009               	retfie
  6884  0BF1                     __end_of_isr:	
  6885                           
  6886                           	psect	intentry
  6887  0004                     __pintentry:	
  6888                           ;incstack = 0
  6889                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  6890                           
  6891  0004                     interrupt_function:	
  6892  007E                     saved_w	set	btemp
  6893  0004  00FE               	movwf	btemp
  6894  0005  0E03               	swapf	3,w
  6895  0006  00F1               	movwf	??_isr+1
  6896  0007  0804               	movf	4,w
  6897  0008  00F2               	movwf	??_isr+2
  6898  0009  080A               	movf	10,w
  6899  000A  00F3               	movwf	??_isr+3
  6900  000B  1283               	bcf	3,5	;RP0=0, select bank0
  6901  000C  1303               	bcf	3,6	;RP1=0, select bank0
  6902  000D  087F               	movf	btemp+1,w
  6903  000E  00F4               	movwf	??_isr+4
  6904  000F  120A  158A  2BCF   	ljmp	_isr
  6905                           
  6906                           	psect	text44
  6907  0A27                     __ptext44:	
  6908 ;; *************** function _hd44780_lightoff *****************
  6909 ;; Defined at:
  6910 ;;		line 288 in file "hd44780i2c.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;		None
  6913 ;; Auto vars:     Size  Location     Type
  6914 ;;		None
  6915 ;; Return value:  Size  Location     Type
  6916 ;;		None               void
  6917 ;; Registers used:
  6918 ;;		status,2
  6919 ;; Tracked objects:
  6920 ;;		On entry : 0/0
  6921 ;;		On exit  : 0/0
  6922 ;;		Unchanged: 0/0
  6923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6924 ;;      Params:         0       0       0       0       0
  6925 ;;      Locals:         0       0       0       0       0
  6926 ;;      Temps:          0       0       0       0       0
  6927 ;;      Totals:         0       0       0       0       0
  6928 ;;Total ram usage:        0 bytes
  6929 ;; Hardware stack levels used:    1
  6930 ;; This function calls:
  6931 ;;		Nothing
  6932 ;; This function is called by:
  6933 ;;		_isr
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937                           
  6938                           ;psect for function _hd44780_lightoff
  6939  0A27                     _hd44780_lightoff:	
  6940                           
  6941                           ;hd44780i2c.c: 290: light_status = 0;
  6942                           
  6943                           ;incstack = 0
  6944                           ; Regs used in _hd44780_lightoff: [status,2]
  6945  0A27  01F7               	clrf	_light_status
  6946  0A28  0008               	return
  6947  0A29                     __end_of_hd44780_lightoff:	
  6948  007E                     btemp	set	126	;btemp
  6949  007E                     wtemp	set	126
  6950  007E                     wtemp0	set	126
  6951  0080                     wtemp1	set	128
  6952  0082                     wtemp2	set	130
  6953  0084                     wtemp3	set	132
  6954  0086                     wtemp4	set	134
  6955  0088                     wtemp5	set	136
  6956  007F                     wtemp6	set	127
  6957  007E                     ttemp	set	126
  6958  007E                     ttemp0	set	126
  6959  0081                     ttemp1	set	129
  6960  0084                     ttemp2	set	132
  6961  0087                     ttemp3	set	135
  6962  007F                     ttemp4	set	127
  6963  007E                     ltemp	set	126
  6964  007E                     ltemp0	set	126
  6965  0082                     ltemp1	set	130
  6966  0086                     ltemp2	set	134
  6967  0080                     ltemp3	set	128


Data Sizes:
    Strings     13
    Constant    10
    Data        0
    BSS         72
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80     78      78
    BANK1            80     36      71
    BANK3            96      0      32
    BANK2            96      0       0

Pointer List with Targets:

    __itoee@addr	PTR eeprom void  size(1) Largest target is 2
		 -> last_channel(EEDATA[2]), 

    __eetoi@addr	PTR eeprom void  size(1) Largest target is 2
		 -> last_channel(EEDATA[2]), 

    memcpyee@to	PTR eeprom unsigned char  size(1) Largest target is 2
		 -> last_channel(EEDATA[2]), 

    memcpyee@from	PTR const unsigned char  size(1) Largest target is 4
		 -> __fltoee@data(COMMON[3]), __fttoee@data(COMMON[3]), __ltoee@data(COMMON[4]), __mtoee@data(COMMON[3]), 
		 -> __itoee@data(BANK0[2]), __ctoee@data(COMMON[1]), 

    memcpyee@ptr	PTR const unsigned char  size(1) Largest target is 4
		 -> __fltoee@data(COMMON[3]), __fttoee@data(COMMON[3]), __ltoee@data(COMMON[4]), __mtoee@data(COMMON[3]), 
		 -> __itoee@data(BANK0[2]), __ctoee@data(COMMON[1]), 

    eecpymem@from	PTR eeprom unsigned char  size(1) Largest target is 2
		 -> last_channel(EEDATA[2]), 

    eecpymem@to	PTR volatile unsigned char  size(1) Largest target is 4
		 -> __eetofl@data(COMMON[3]), __eetoft@data(COMMON[3]), __eetol@data(COMMON[4]), __eetom@data(COMMON[3]), 
		 -> __eetoi@data(BANK0[2]), __eetoc@data(COMMON[1]), 

    eecpymem@cp	PTR volatile unsigned char  size(1) Largest target is 4
		 -> __eetofl@data(COMMON[3]), __eetoft@data(COMMON[3]), __eetol@data(COMMON[4]), __eetom@data(COMMON[3]), 
		 -> __eetoi@data(BANK0[2]), __eetoc@data(COMMON[1]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_2(CODE[10]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@buff(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    hd44780_puts_at@ch	PTR unsigned char  size(1) Largest target is 16
		 -> main@buff(BANK1[16]), 

    hd44780_puts@ch	PTR unsigned char  size(1) Largest target is 16
		 -> main@buff(BANK1[16]), 

    sp__strncpy	PTR unsigned char  size(1) Largest target is 0

    si4703_write_regs@r	PTR unsigned int  size(1) Largest target is 32
		 -> si4703_regs(BANK1[32]), 

    si4703_read_regs@r	PTR unsigned int  size(1) Largest target is 32
		 -> si4703_regs(BANK1[32]), 


Critical Paths under _main in COMMON

    _main->___lbtoft
    _main->___lwtoft
    _main->_debounce
    _main->_hd44780_lighton
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _si4703_write_regs->_i2c_read_ack
    _si4703_write_regs->_i2c_send_controlbyte
    _si4703_write_regs->_i2c_send_data
    _si4703_write_regs->_i2c_start
    _si4703_read_regs->_i2c_read_ack
    _si4703_read_regs->_i2c_read_data
    _si4703_read_regs->_i2c_send_ack
    _si4703_read_regs->_i2c_send_controlbyte
    _si4703_read_regs->_i2c_send_nack
    _si4703_read_regs->_i2c_start
    _si4703_getrssi->_i2c_read_ack
    _si4703_getrssi->_i2c_read_data
    _si4703_getrssi->_i2c_send_ack
    _si4703_getrssi->_i2c_send_controlbyte
    _si4703_getrssi->_i2c_send_nack
    _si4703_getrssi->_i2c_start
    _hd44780_init->_i2c_read_ack
    _hd44780_init->_i2c_send_controlbyte
    _hd44780_init->_i2c_send_data
    _hd44780_init->_i2c_start
    _hd44780_write->_i2c_read_ack
    _hd44780_write->_i2c_send_controlbyte
    _hd44780_write->_i2c_send_data
    _hd44780_write->_i2c_start
    _i2c_stop->_i2c_check_overflow
    ___itoee->_memcpyee
    ___ftneg->___lbtoft
    ___ftmul->___lwtoft
    ___ftadd->___lbtoft
    ___ftadd->___lwtoft
    ___eetoi->_eecpymem

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_si4703_init
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _si4703_seek->_si4703_read_regs
    _si4703_init->_si4703_tune
    _si4703_tune->_si4703_read_regs
    _si4703_set_volume->_si4703_read_regs
    _si4703_write_regs->_i2c_send_controlbyte
    _si4703_read_regs->_i2c_send_controlbyte
    _si4703_getrssi->_i2c_send_controlbyte
    _hd44780_puts_at->_hd44780_puts
    _hd44780_puts->_hd44780_write
    _hd44780_init->_hd44780_write
    _hd44780_write->_i2c_send_controlbyte
    ___lwtoft->___ftpack
    ___lbtoft->___ftpack
    ___itoee->_memcpyee
    ___fttol->___ftmul
    ___ftneg->___lbtoft
    ___ftmul->___lwtoft
    ___ftadd->___ftmul
    ___eetoi->_eecpymem

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    32      4   37686
                                              0 BANK1     36    32      4
                            ___eetoi
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                            ___itoee
                           ___lbtoft
                           ___lwtoft
                           _debounce
                       _hd44780_init
                    _hd44780_lighton
                    _hd44780_puts_at
                               _init
                  _si4703_getchannel
                     _si4703_getrssi
                        _si4703_init
                        _si4703_seek
                        _si4703_tune
                            _sprintf
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    18      5    1522
                                             13 BANK0     15    10      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              7 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     371
                                              5 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _si4703_seek                                          4     4      0    2861
                                             43 BANK0      4     4      0
                   _si4703_read_regs
                  _si4703_write_regs
 ---------------------------------------------------------------------------------
 (1) _si4703_init                                         28    28      0    8783
                                             50 BANK0     28    28      0
                           _i2c_init
                   _si4703_read_regs
                  _si4703_set_volume
                 _si4703_setup_2wire
                        _si4703_tune
                  _si4703_write_regs
 ---------------------------------------------------------------------------------
 (1) _si4703_tune                                          7     5      2    3056
                                             43 BANK0      7     5      2
                            ___eetoi (ARG)
                   _si4703_read_regs
                  _si4703_write_regs
 ---------------------------------------------------------------------------------
 (2) _si4703_setup_2wire                                   3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _si4703_set_volume                                    3     3      0    2861
                                             43 BANK0      3     3      0
                   _si4703_read_regs
                  _si4703_write_regs
 ---------------------------------------------------------------------------------
 (2) _si4703_write_regs                                    6     6      0    1350
                                              2 BANK0      6     6      0
                       _i2c_read_ack
               _i2c_send_controlbyte
                      _i2c_send_data
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (2) _si4703_read_regs                                    41    41      0    1480
                                              2 BANK0     41    41      0
                       _i2c_read_ack
                      _i2c_read_data
                       _i2c_send_ack
               _i2c_send_controlbyte
                      _i2c_send_nack
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _si4703_getrssi                                       5     3      2     752
                                              2 BANK0      5     3      2
                       _i2c_read_ack
                      _i2c_read_data
                       _i2c_send_ack
               _i2c_send_controlbyte
                      _i2c_send_nack
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (3) _i2c_send_nack                                        1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _i2c_send_ack                                         1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _i2c_read_data                                        1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _si4703_getchannel                                    2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _hd44780_puts_at                                      2     1      1    4173
                                             11 BANK0      2     1      1
                       _hd44780_puts
                      _hd44780_write
 ---------------------------------------------------------------------------------
 (2) _hd44780_puts                                         2     2      0    2039
                                              9 BANK0      2     2      0
                      _hd44780_write
 ---------------------------------------------------------------------------------
 (1) _hd44780_lighton                                      1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _hd44780_init                                         3     3      0    2578
                                              9 BANK0      3     3      0
                      _hd44780_write
                       _i2c_read_ack
               _i2c_send_controlbyte
                      _i2c_send_data
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (2) _hd44780_write                                        7     6      1    1882
                                              2 BANK0      7     6      1
                       _i2c_read_ack
               _i2c_send_controlbyte
                      _i2c_send_data
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             1     1      0       0
                                              0 BANK0      1     1      0
                 _i2c_check_overflow
                         _i2c_enable
 ---------------------------------------------------------------------------------
 (4) _i2c_enable                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_check_overflow                                   1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _i2c_send_data                                        2     2      0      31
                                              5 COMMON     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _i2c_send_controlbyte                                 3     2      1     647
                                              5 COMMON     1     0      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _i2c_read_ack                                         1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _debounce                                             5     4      1     260
                                              5 COMMON     1     0      1
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    2164
                                              5 COMMON     1     1      0
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             8     5      3    2099
                                              5 COMMON     1     1      0
                                              8 BANK0      7     4      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___itoee                                              5     3      2    1057
                                              4 BANK0      5     3      2
                           _memcpyee
                  _si4703_getchannel (ARG)
 ---------------------------------------------------------------------------------
 (2) _memcpyee                                             5     3      2     890
                                              5 COMMON     1     1      0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     358
                                             27 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3      98
                                             15 BANK0      3     0      3
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    2816
                                             11 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             13     7      6    3643
                                             27 BANK0     13     7      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2068
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) ___eetoi                                              7     5      2    1019
                                              4 BANK0      7     5      2
                           _eecpymem
 ---------------------------------------------------------------------------------
 (2) _eecpymem                                             5     3      2     890
                                              5 COMMON     1     1      0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
                   _hd44780_lightoff
 ---------------------------------------------------------------------------------
 (7) _hd44780_lightoff                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___eetoi
     _eecpymem
   ___ftadd
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___ftneg
     ___lbtoft (ARG)
       ___ftpack
   ___fttol
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
   ___itoee
     _memcpyee
     _si4703_getchannel (ARG)
   ___lbtoft
     ___ftpack
   ___lwtoft
     ___ftpack
   _debounce
   _hd44780_init
     _hd44780_write
       _i2c_read_ack
       _i2c_send_controlbyte
       _i2c_send_data
       _i2c_start
       _i2c_stop
         _i2c_check_overflow
         _i2c_enable
     _i2c_read_ack
     _i2c_send_controlbyte
     _i2c_send_data
     _i2c_start
     _i2c_stop
       _i2c_check_overflow
       _i2c_enable
   _hd44780_lighton
   _hd44780_puts_at
     _hd44780_puts
       _hd44780_write
         _i2c_read_ack
         _i2c_send_controlbyte
         _i2c_send_data
         _i2c_start
         _i2c_stop
           _i2c_check_overflow
           _i2c_enable
     _hd44780_write
       _i2c_read_ack
       _i2c_send_controlbyte
       _i2c_send_data
       _i2c_start
       _i2c_stop
         _i2c_check_overflow
         _i2c_enable
   _init
   _si4703_getchannel
   _si4703_getrssi
     _i2c_read_ack
     _i2c_read_data
     _i2c_send_ack
     _i2c_send_controlbyte
     _i2c_send_nack
     _i2c_start
     _i2c_stop
       _i2c_check_overflow
       _i2c_enable
   _si4703_init
     _i2c_init
     _si4703_read_regs
       _i2c_read_ack
       _i2c_read_data
       _i2c_send_ack
       _i2c_send_controlbyte
       _i2c_send_nack
       _i2c_start
       _i2c_stop
         _i2c_check_overflow
         _i2c_enable
     _si4703_set_volume
       _si4703_read_regs
         _i2c_read_ack
         _i2c_read_data
         _i2c_send_ack
         _i2c_send_controlbyte
         _i2c_send_nack
         _i2c_start
         _i2c_stop
           _i2c_check_overflow
           _i2c_enable
       _si4703_write_regs
         _i2c_read_ack
         _i2c_send_controlbyte
         _i2c_send_data
         _i2c_start
         _i2c_stop
           _i2c_check_overflow
           _i2c_enable
     _si4703_setup_2wire
     _si4703_tune
       ___eetoi (ARG)
         _eecpymem
       _si4703_read_regs (ARG)
         _i2c_read_ack
         _i2c_read_data
         _i2c_send_ack
         _i2c_send_controlbyte
         _i2c_send_nack
         _i2c_start
         _i2c_stop
           _i2c_check_overflow
           _i2c_enable
       _si4703_write_regs (ARG)
         _i2c_read_ack
         _i2c_send_controlbyte
         _i2c_send_data
         _i2c_start
         _i2c_stop
           _i2c_check_overflow
           _i2c_enable
     _si4703_write_regs
       _i2c_read_ack
       _i2c_send_controlbyte
       _i2c_send_data
       _i2c_start
       _i2c_stop
         _i2c_check_overflow
         _i2c_enable
   _si4703_seek
     _si4703_read_regs
       _i2c_read_ack
       _i2c_read_data
       _i2c_send_ack
       _i2c_send_controlbyte
       _i2c_send_nack
       _i2c_start
       _i2c_stop
         _i2c_check_overflow
         _i2c_enable
     _si4703_write_regs
       _i2c_read_ack
       _i2c_send_controlbyte
       _i2c_send_data
       _i2c_start
       _i2c_stop
         _i2c_check_overflow
         _i2c_enable
   _si4703_tune
     ___eetoi (ARG)
       _eecpymem
     _si4703_read_regs (ARG)
       _i2c_read_ack
       _i2c_read_data
       _i2c_send_ack
       _i2c_send_controlbyte
       _i2c_send_nack
       _i2c_start
       _i2c_stop
         _i2c_check_overflow
         _i2c_enable
     _si4703_write_regs (ARG)
       _i2c_read_ack
       _i2c_send_controlbyte
       _i2c_send_data
       _i2c_start
       _i2c_stop
         _i2c_check_overflow
         _i2c_enable
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _uart_init

 _isr (ROOT)
   _hd44780_lightoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       2       0        0.8%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      BE       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     24      47       7       88.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      20       9       33.3%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      BE      12        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Dec 24 03:43:43 2015

                            pc 0002                    __CFG_CP$OFF 0000                             l76 00B9  
                           _RD 0C60                             _WR 0C61                             fsr 0004  
                 ___ftadd@exp1 0047                   ___ftadd@exp2 0046                   ___ftadd@sign 0045  
                          l115 0AE5                            l123 0BFD                            l133 0AFE  
                          l125 0C04                            l142 0ACD                            l151 0BBA  
                          l152 0BB7                            l441 0CE8                            l169 0B17  
                          l178 0B30                            l436 0CD7                            l453 0DA8  
                          l285 0F6D                            l448 0D90                            l660 0EBB  
                          l751 0FE6                            l667 0ED0                            l691 0422  
                          l668 0ED8                            _GIE 005F                   __CFG_CPD$OFF 0000  
     i2c_send_controlbyte@addr 0021                            _isr 0BCF         __size_of_hd44780_write 0094  
                          fsr0 0004                            indf 0000                   __CFG_FOSC$HS 0000  
           _i2c_check_overflow 0A3A                    main@channel 00BC                 hd44780_puts@ch 002A  
                 __CFG_LVP$OFF 0000                           l3021 0F38                           l3015 0F29  
                         l3201 0E8D                           l3017 0F2E                           l3009 0F11  
                         l2241 0CA4                           l2243 0CB2                           l2251 0CCB  
                         l3205 0E94                           l3053 0E47                           l3215 0EC0  
                         l3207 0EA0                           l3143 0C7C                           l3151 0C6C  
                         l3039 0F69                           l3063 0E7E                           l2247 0CC0  
                         l3217 0ECA                           l3209 0EA5                           l3241 07D9  
                         l3075 0753                           l3147 0C88                           l3251 07FA  
                         l3411 05AB                           l3261 0C50                           l3167 0CE1  
                         l3511 03A3                           l2703 0FDB                           l3247 07EF  
                         l3239 07CB                           l3521 03B9                           l2705 0FE9  
                         l3273 0C67                           l3265 0C61                           l3257 0C41  
                         l3433 05DE                           l3417 05C1                           l3515 03AA  
                         l3611 06EF                           l3603 06D7                           l3195 0DA1  
                         l3427 05D8                           l3541 03F4                           l3533 03D3  
                         l2709 0FF7                           l3453 0612                           l3445 060E  
                         l3551 0412                           l3543 03F9                           l3615 06FF  
                         l3439 05FF                           l3455 058B                           l3561 0446  
                         l3553 041E                           l3545 03FD                           l3457 0655  
                         l3571 0469                           l3539 03E8                           l3483 0E15  
                         l3475 0DF4                           l3557 0434                           l3581 0672  
                         l2677 0F8C                           l2695 0FBE                           l3487 0E1B  
                         l3479 0E01                           l3655 0078                           l2697 0FCE  
                         l3665 00BC                           l3587 0688                           l2963 0BCD  
                         l3675 00D9                           l2957 0BC7                           l3685 00F7  
                         l3599 06C7                           ?_isr 0070                           STR_1 081A  
                         STR_2 0810                           u2015 0CA7                           u2035 0CB8  
                         u2045 0CC1                           u4025 0700                           u4050 0038  
                         u4035 0708                           u3405 0EDF                           u3325 0E99  
                         u4117 0E0F                           u3175 0738                           u4207 02A2  
                         u4127 0528                           u3345 0EB4                           u2705 0FDD  
                         u4217 02DC                           u4137 0549                           u3530 0496  
                         u4227 0316                           u4147 0D69                           u3435 07CE  
                         u3365 0EC3                           u2645 0F93                           u4237 0352  
                         u4157 0C1C                           u4247 07BB                           u4167 0C27  
                         u3455 07DA                           u4257 0C45                           u4177 0C34  
                         u3545 04E7                           u3465 07E6                           u2675 0FBF  
                         u4187 0B6F                           u3555 04FB                           u3475 07F0  
                         u4197 0266                           u3494 0C56                           u3495 0C54  
                         u3825 03FE                           u3595 05F5                           i1l60 0BE6  
                         _RCIF 0065                           u3765 03D4                           u3855 0413  
                         u3935 0694                           u3945 06A6                           u3795 03E9  
                         u3975 06D8                           u3985 06E0                hd44780_init@ack 002B  
                         _WREN 0C62                           _TXIF 0064            ?_i2c_check_overflow 0070  
                _i2c_read_data 0BAF                           _main 002C                   ___ftpack@arg 0020  
                         _init 0B41                   ___ftpack@exp 0023                           _rssi 00C4  
                         btemp 007E                  ?_i2c_read_ack 0070                  __CFG_BOREN$ON 0000  
                         ltemp 007E                           start 0012                           ttemp 007E  
                         wtemp 007E                  ?_i2c_send_ack 0070                   ___ftmul@cntr 0039  
                 ___ftmul@sign 003A                  _i2c_send_data 0AC6                  _i2c_send_nack 0B28  
                 ___itoee@addr 0028                   ___itoee@data 0024                   ___fttol@exp1 0048  
                 ___fttol@lval 0044                          ??_isr 0070           ??_i2c_check_overflow 0075  
              hd44780_write@bt 0026                          ?_main 00A0                          ?_init 0070  
              __end_of___eetoi 0AAE                          _EEADR 010D                __end_of___ftadd 0483  
                __CFG_WDTE$OFF 0000             si4703_write_regs@i 0026             si4703_write_regs@r 0027  
                        _CARRY 0018                __end_of___ftneg 0A54                __end_of___ftmul 072D  
              __end_of___fttol 1000                __end_of___itoee 0A73                __end_of___lwdiv 07FF  
              __end_of___lwmod 0CD0       __size_of_hd44780_lighton 0005                          _RCREG 001A  
                        _RCSTA 0018                  ?_hd44780_init 0070                          _SPBRG 0099  
                        _PORTB 0006                          _PORTD 0008                          _TRISD 0088  
                ?_hd44780_puts 0070                          _TXREG 0019                          _TXSTA 0098  
                __CFG_PWRTE$ON 0000       __size_of_hd44780_puts_at 0012                __end_of_dpowers 0810  
                        _scale 00C6                  ___ftpack@sign 0024                          _tries 0078  
                        pclath 000A                 ?_i2c_read_data 0070                          ltemp0 007E  
                        ltemp1 0082                          ltemp2 0086                          ltemp3 0080  
                        ttemp0 007E                          ttemp1 0081                          ttemp2 0084  
                        ttemp3 0087                          ttemp4 007F              ?_si4703_read_regs 0070  
                        status 0003                 ??_i2c_read_ack 0075                          wtemp0 007E  
                        wtemp1 0080                          wtemp2 0082                          wtemp3 0084  
                        wtemp4 0086                          wtemp5 0088                          wtemp6 007F  
              __end_of_sprintf 065A                  _hd44780_write 072D         ??_i2c_send_controlbyte 0020  
                   _i2c_enable 0A29             ??_si4703_read_regs 0022            si4703_read_regs@tmp 0047  
               ??_i2c_send_ack 0075                 ?_i2c_send_data 0070                 ?_i2c_send_nack 0070  
              __initialization 0015                   __end_of_main 0236                   __end_of_init 0B5B  
             __end_of_i2c_init 0B75               __end_of_i2c_stop 0C15                 _si4703_getrssi 0D07  
                       ??_main 00A4                  ___fttol@sign1 0043                         ??_init 0075  
               ??_hd44780_init 0029                 ??_hd44780_puts 0029           si4703_set_volume@val 004D  
             hd44780_write@ack 0025                         _EEDATA 010C                         _EECON1 018C  
                       _EECON2 018D               __end_of___ftpack 0EF1               __end_of___lbtoft 0BAF  
            _si4703_getchannel 0A54                         i1l2729 0BE3               __end_of___lwtoft 0AC6  
                       _SSPADD 0093             ?_si4703_getchannel 0020                         _SSPCON 0014  
                       _SSPBUF 0013             __size_of_i2c_start 0018                 ?_hd44780_write 0022  
             __end_of_debounce 0C69               __end_of_eecpymem 0D07            si4703_seek@seekdown 004E  
          ??_si4703_getchannel 0075       __end_of_hd44780_lightoff 0A29                      ??___eetoi 0026  
                    ??___ftadd 0041                      ??___ftneg 0076                      ??___ftmul 0031  
                    ??___fttol 003F                      ??___itoee 0026         __end_of_si4703_getrssi 0D45  
                    ??___lwdiv 0075                    memcpyee@ptr 0022                      ??___lwmod 002B  
             __end_of_memcpyee 0DD6                         main@f1 00B9          ___ftmul@f3_as_product 0036  
      si4703_init@firmware_ver 0069                         saved_w 007E      __end_of_si4703_getchannel 0A63  
              ??_i2c_read_data 0075                      ??_sprintf 0032              ??_hd44780_lighton 0075  
      __end_of__initialization 0028           si4703_read_regs@buff 0027                     ___ftadd@f1 003B  
                   ___ftadd@f2 003E              ??_hd44780_puts_at 0076               i2c_send_data@dta 0020  
              ??_i2c_send_data 0075                ??_i2c_send_nack 0075                    ?_i2c_enable 0070  
                   ___ftneg@f1 002F                     ___lbtoft@c 0075                     ___ftmul@f1 002B  
                   ___ftmul@f2 002E                     ___fttol@f1 003B                 __pcstackCOMMON 0070  
              ?_si4703_getrssi 0022                     ___lwtoft@c 0028              _si4703_set_volume 0B75  
            __end_of_i2c_start 0AF6           __end_of_i2c_read_ack 0A3A     i2c_send_controlbyte@rw_bit 0075  
           ?_si4703_set_volume 0070     __end_of_si4703_setup_2wire 0C3C           __end_of_i2c_send_ack 0B28  
          ??_si4703_set_volume 004B                     __pbssBANK1 00C4                     __pbssBANK3 0190  
            hd44780_puts_at@ch 002C                ??_hd44780_write 0023                      ?_i2c_init 0070  
                ??_si4703_init 0052                  ??_si4703_seek 004B                      ?_i2c_stop 0070  
                ??_si4703_tune 004D           __end_of_hd44780_init 037A           __end_of_hd44780_puts 0C9C  
                   __pmaintext 002C              hd44780_write@tmp1 0028              hd44780_write@tmp2 0027  
                   __pintentry 0004      __end_of_si4703_set_volume 0B91               si4703_init@F1437 01A0  
                    ?___ftpack 0020                      ?___lbtoft 0028                      ?___lwtoft 0028  
           __size_of_uart_init 0013              _si4703_write_regs 0E28                      ?_debounce 0075  
          __size_of_i2c_enable 0004                      ?_eecpymem 0020             ?_si4703_write_regs 0070  
   __size_of_si4703_getchannel 000F                        _SSPSTAT 0094                     __stringtab 0800  
                   ??_i2c_init 0020                     ??_i2c_stop 0020            ??_si4703_write_regs 0022  
                    ?_memcpyee 0020            __end_of_si4703_init 0584            __end_of_si4703_seek 0E28  
          __end_of_si4703_tune 0D89                        ___eetoi 0A98                        ___ftadd 037A  
                      ___ftneg 0A4A                        ___ftmul 065A                        ___fttol 0F72  
                      ___itoee 0A63                        ___lwdiv 07C1                        ___lwmod 0C9C  
                   ??___ftpack 0025                     ??___lbtoft 002B    __size_of_i2c_check_overflow 0008  
    __size_of_si4703_read_regs 0081                   memcpyee@from 0020                        __ptext1 0A85  
                      __ptext2 0584                        __ptext3 0C9C                        __ptext4 07C1  
                      __ptext5 0DD6                        __ptext6 0483                        __ptext7 0D45  
                      __ptext8 0C15                        __ptext9 0B75                   memcpyee@size 0021  
    __end_of_si4703_write_regs 0E83                     ??___lwtoft 0075                      _T1CONbits 0010  
                      _dpowers 0806                   __size_of_isr 0022                     ??_debounce 0020  
                   ??_eecpymem 0075                  debounce@count 0023                        main@chn 00BF  
                      _sprintf 0584                        clrloop0 0A43           end_of_initialization 0028  
           si4703_getrssi@buff 0025                     ??_memcpyee 0075                     eecpymem@cp 0022  
                   eecpymem@to 0023              __end_of_uart_init 0A98  __size_of_i2c_send_controlbyte 0019  
            ?_hd44780_lightoff 0070          __size_of_i2c_read_ack 0008             si4703_init@manu_id 0067  
   __size_of_si4703_set_volume 001C             ??_hd44780_lightoff 0070          __size_of_i2c_send_ack 0019  
              _hd44780_lighton 0A2D                      _PORTBbits 0006                      _PORTCbits 0007  
                    _TRISBbits 0086                      _TRISCbits 0087                _hd44780_puts_at 0A73  
       si4703_init@chip_number 006D          __size_of_hd44780_init 0144          __size_of_hd44780_puts 0033  
                  _si4703_init 0483                    _si4703_seek 0DD6                    _si4703_regs 00C7  
                  _si4703_tune 0D45                   _i2c_read_ack 0A32                   ??_i2c_enable 0075  
             ??_si4703_getrssi 0024                    ___ftmul@exp 0035                   _i2c_send_ack 0B0F  
   __size_of_si4703_write_regs 005B                   _hd44780_init 0236                   _hd44780_puts 0C69  
          start_initialization 0015             __end_of_i2c_enable 0A2D                      _i2c_start 0ADE  
                  __end_of_isr 0BF1          __end_of_i2c_read_data 0BCF             _si4703_setup_2wire 0C15  
            __size_of_i2c_init 001A              __size_of_i2c_stop 0024          __end_of_i2c_send_data 0ADE  
        __end_of_i2c_send_nack 0B41        __end_of_hd44780_lighton 0A32                     memcpyee@to 0023  
          ?_si4703_setup_2wire 0070                   _last_channel 0000               _si4703_read_regs 0EF1  
      __end_of_hd44780_puts_at 0A85              __size_of___ftpack 006E                    __pbssEEDATA 0000  
            __size_of___lbtoft 001E             hd44780_puts_at@loc 002B                    __pbssCOMMON 0076  
                    ___latbits 0002              __size_of___lwtoft 0018                  __pcstackBANK0 0020  
                __pcstackBANK1 00A0                     ?_i2c_start 0070           ??_si4703_setup_2wire 0020  
            __size_of_debounce 002D                   _light_status 0077              __size_of_eecpymem 0037  
                  sprintf@flag 0036                    sprintf@prec 0037          __end_of_hd44780_write 07C1  
            __size_of_memcpyee 004D               ___lwdiv@dividend 0022                       ?___eetoi 0024  
                     ?___ftadd 003B                       ?___ftneg 002F                       ?___ftmul 002B  
                     ?___fttol 003B                       ?___itoee 0024                       ?___lwdiv 0020  
                     ?___lwmod 0027           hd44780_write@rs_flag 0022                si4703_init@buff 0056  
                    __pstrings 0800                main@btn_pressed 00C2               ___lwdiv@quotient 0025  
                     ?_sprintf 002D              interrupt_function 0004                   debounce@port 0022  
                    clear_ram0 0A42                       _PIE1bits 008C                       _PIR1bits 000C  
             ?_hd44780_lighton 0070                      main@F1383 0190                      _uart_init 0A85  
   __end_of_i2c_check_overflow 0A42                si4703_tune@freq 004B               ?_hd44780_puts_at 002B  
                   _ADCON0bits 001F                    __stringbase 0805   __end_of_i2c_send_controlbyte 0B0F  
                    main@whole 00C3                    ??_i2c_start 0075      __size_of_hd44780_lightoff 0002  
            si4703_read_regs@i 004A              si4703_read_regs@r 0049              si4703_read_regs@x 0048  
                     _i2c_init 0B5B                       _i2c_stop 0BF1                   ?_si4703_init 0070  
                 ?_si4703_seek 0070                   ?_si4703_tune 004B                     ?_uart_init 0070  
             __size_of___eetoi 0016               __size_of___ftadd 0109               __size_of___ftneg 000A  
             __size_of___ftmul 00D3               __size_of___fttol 008E               __size_of___itoee 0010  
             __size_of___lwdiv 003E               __size_of___lwmod 0034                       ___ftpack 0E83  
                     ___lbtoft 0B91             __end_of__stringtab 0806                       ___lwtoft 0AAE  
                   sprintf@val 0038                       _debounce 0C3C                ___lwdiv@divisor 0020  
                 eecpymem@from 0020                       _eecpymem 0CD0                   eecpymem@size 0021  
              ___lwdiv@counter 0024                       __ptext10 0E28                       __ptext11 0EF1  
                     __ptext20 0C69                       __ptext12 0B5B                       __ptext21 0A2D  
                     __ptext13 0D07                       __ptext30 0A32                       __ptext22 0236  
                     __ptext14 0B28                       __ptext31 0C3C                       __ptext23 072D  
                     __ptext15 0B0F                       __ptext40 0E83                       __ptext32 0AAE  
                     __ptext24 0BF1                       __ptext16 0BAF                       __ptext41 0A98  
                     __ptext33 0B91                       __ptext25 0A29                       __ptext17 0A54  
                     __ptext42 0CD0                       __ptext34 0A63                       __ptext26 0A3A  
                     __ptext18 0B41                       __ptext43 0BCF                       __ptext35 0D89  
                     __ptext27 0ADE                       __ptext19 0A73                       __ptext44 0A27  
                     __ptext36 0F72                       __ptext28 0AC6                       __ptext37 0A4A  
                     __ptext29 0AF6                       __ptext38 065A                       __ptext39 037A  
               si4703_init@ack 0066               __size_of_sprintf 00D6       __end_of_si4703_read_regs 0F72  
                     _memcpyee 0D89                  __size_of_main 020A                  __size_of_init 001A  
                  debounce@pin 0075                 si4703_tune@chn 0050                       main@argc 00A0  
                     main@argv 00A2                       main@buff 00A9                       main@frac 00BE  
         si4703_init@device_id 006B                     _INTCONbits 000B                       intlevel1 0000  
                    sprintf@ap 0035                      sprintf@sp 003A               ___lwmod@dividend 0029  
                 _HD44780_DATA 0076                      stringcode 0800           _i2c_send_controlbyte 0AF6  
          si4703_init@chip_rev 006C                    ??_uart_init 0075         __size_of_i2c_read_data 0020  
      __size_of_si4703_getrssi 003E                       sprintf@c 003B                       sprintf@f 002D  
              ___lwmod@divisor 0027                ___lwmod@counter 002C                       stringdir 0800  
                     stringtab 0800                    _SSPCON2bits 0091         __size_of_i2c_send_data 0018  
             _hd44780_lightoff 0A27         __size_of_i2c_send_nack 0019    __size_of_si4703_setup_2wire 0027  
                   _SSPCONbits 0014           __size_of_si4703_init 0101           __size_of_si4703_seek 0052  
         __size_of_si4703_tune 0044          ?_i2c_send_controlbyte 0075                   ___eetoi@addr 0028  
                 ___eetoi@data 0029  
